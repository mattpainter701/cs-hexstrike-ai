  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5432, in main
    logger.info("\U0001f916 Ready to serve AI agents with enhanced cybersecurity capabilities")
Message: '\x1b[38;5;46m\u2705 \U0001f916 Ready to serve AI agents with enhanced cybersecurity capabilities\x1b[0m'
Arguments: ()
2025-08-17T15:04:40.291Z [hexstrike-ai] [info] Message from server: {"jsonrpc":"2.0","id":0,"result":{"protocolVersion":"2025-06-18","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"hexstrike-ai-mcp","version":"1.13.0"}}} { metadata: undefined }
2025-08-17T15:04:40.292Z [hexstrike-ai] [info] Message from client: {"method":"notifications/initialized","jsonrpc":"2.0"} { metadata: undefined }
2025-08-17T15:04:40.303Z [hexstrike-ai] [info] Message from client: {"method":"tools/list","params":{},"jsonrpc":"2.0","id":1} { metadata: undefined }
2025-08-17T15:04:40.303Z [hexstrike-ai] [info] Message from client: {"method":"resources/list","params":{},"jsonrpc":"2.0","id":2} { metadata: undefined }
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f525' in position 1: character maps to <undefined>
Call stack:
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5441, in <module>
    main()
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5433, in main
    mcp.run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\server.py", line 250, in run
    anyio.run(self.run_stdio_async)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_core\_eventloop.py", line 74, in run
    return async_backend.run(func, args, {}, backend_options)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 2316, in run
    return runner.run(wrapper())
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 637, in run_until_complete
    self.run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 604, in run_forever
    self._run_once()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1909, in _run_once
    handle._run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 609, in _handle_message
    await self._handle_request(message, req, session, lifespan_context, raise_exceptions)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 624, in _handle_request
    logger.info("Processing request of type %s", type(req).__name__)
Message: '\x1b[38;5;46m\u2705 Processing request of type %s\x1b[0m'
Arguments: ('ListToolsRequest',)
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f525' in position 1: character maps to <undefined>
Call stack:
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5441, in <module>
    main()
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5433, in main
    mcp.run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\server.py", line 250, in run
    anyio.run(self.run_stdio_async)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_core\_eventloop.py", line 74, in run
    return async_backend.run(func, args, {}, backend_options)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 2316, in run
    return runner.run(wrapper())
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 637, in run_until_complete
    self.run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 604, in run_forever
    self._run_once()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1909, in _run_once
    handle._run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 609, in _handle_message
    await self._handle_request(message, req, session, lifespan_context, raise_exceptions)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 624, in _handle_request
    logger.info("Processing request of type %s", type(req).__name__)
Message: '\x1b[38;5;46m\u2705 Processing request of type %s\x1b[0m'
Arguments: ('ListResourcesRequest',)
2025-08-17T15:04:40.320Z [hexstrike-ai] [info] Message from server: {"jsonrpc":"2.0","id":1,"result":{"tools":[{"name":"nmap_scan","description":"\n        Execute an enhanced Nmap scan against a target with real-time logging.\n        \n        Args:\n            target: The IP address or hostname to scan\n            scan_type: Scan type (e.g., -sV for version detection, -sC for scripts)\n            ports: Comma-separated list of ports or port ranges\n            additional_args: Additional Nmap arguments\n            \n        Returns:\n            Scan results with enhanced telemetry\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"scan_type":{"default":"-sV","title":"Scan Type","type":"string"},"ports":{"default":"","title":"Ports","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"nmap_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"nmap_scanOutput","type":"object"}},{"name":"gobuster_scan","description":"\n        Execute Gobuster to find directories, DNS subdomains, or virtual hosts with enhanced logging.\n        \n        Args:\n            url: The target URL\n            mode: Scan mode (dir, dns, fuzz, vhost)\n            wordlist: Path to wordlist file\n            additional_args: Additional Gobuster arguments\n            \n        Returns:\n            Scan results with enhanced telemetry\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"mode":{"default":"dir","title":"Mode","type":"string"},"wordlist":{"default":"/usr/share/wordlists/dirb/common.txt","title":"Wordlist","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"gobuster_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"gobuster_scanOutput","type":"object"}},{"name":"nuclei_scan","description":"\n        Execute Nuclei vulnerability scanner with enhanced logging and real-time progress.\n        \n        Args:\n            target: The target URL or IP\n            severity: Filter by severity (critical,high,medium,low,info)\n            tags: Filter by tags (e.g. cve,rce,lfi)\n            template: Custom template path\n            additional_args: Additional Nuclei arguments\n            \n        Returns:\n            Scan results with discovered vulnerabilities and telemetry\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"severity":{"default":"","title":"Severity","type":"string"},"tags":{"default":"","title":"Tags","type":"string"},"template":{"default":"","title":"Template","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"nuclei_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"nuclei_scanOutput","type":"object"}},{"name":"prowler_scan","description":"\n        Execute Prowler for comprehensive cloud security assessment.\n        \n        Args:\n            provider: Cloud provider (aws, azure, gcp)\n            profile: AWS profile to use\n            region: Specific region to scan\n            checks: Specific checks to run\n            output_dir: Directory to save results\n            output_format: Output format (json, csv, html)\n            additional_args: Additional Prowler arguments\n            \n        Returns:\n            Cloud security assessment results\n        ","inputSchema":{"properties":{"provider":{"default":"aws","title":"Provider","type":"string"},"profile":{"default":"default","title":"Profile","type":"string"},"region":{"default":"","title":"Region","type":"string"},"checks":{"default":"","title":"Checks","type":"string"},"output_dir":{"default":"/tmp/prowler_output","title":"Output Dir","type":"string"},"output_format":{"default":"json","title":"Output Format","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"prowler_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"prowler_scanOutput","type":"object"}},{"name":"trivy_scan","description":"\n        Execute Trivy for container and filesystem vulnerability scanning.\n        \n        Args:\n            scan_type: Type of scan (image, fs, repo, config)\n            target: Target to scan (image name, directory, repository)\n            output_format: Output format (json, table, sarif)\n            severity: Severity filter (UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL)\n            output_file: File to save results\n            additional_args: Additional Trivy arguments\n            \n        Returns:\n            Vulnerability scan results\n        ","inputSchema":{"properties":{"scan_type":{"default":"image","title":"Scan Type","type":"string"},"target":{"default":"","title":"Target","type":"string"},"output_format":{"default":"json","title":"Output Format","type":"string"},"severity":{"default":"","title":"Severity","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"trivy_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"trivy_scanOutput","type":"object"}},{"name":"scout_suite_assessment","description":"\n        Execute Scout Suite for multi-cloud security assessment.\n        \n        Args:\n            provider: Cloud provider (aws, azure, gcp, aliyun, oci)\n            profile: AWS profile to use\n            report_dir: Directory to save reports\n            services: Specific services to assess\n            exceptions: Exceptions file path\n            additional_args: Additional Scout Suite arguments\n            \n        Returns:\n            Multi-cloud security assessment results\n        ","inputSchema":{"properties":{"provider":{"default":"aws","title":"Provider","type":"string"},"profile":{"default":"default","title":"Profile","type":"string"},"report_dir":{"default":"/tmp/scout-suite","title":"Report Dir","type":"string"},"services":{"default":"","title":"Services","type":"string"},"exceptions":{"default":"","title":"Exceptions","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"scout_suite_assessmentArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"scout_suite_assessmentOutput","type":"object"}},{"name":"cloudmapper_analysis","description":"\n        Execute CloudMapper for AWS network visualization and security analysis.\n        \n        Args:\n            action: Action to perform (collect, prepare, webserver, find_admins, etc.)\n            account: AWS account to analyze\n            config: Configuration file path\n            additional_args: Additional CloudMapper arguments\n            \n        Returns:\n            AWS network visualization and security analysis results\n        ","inputSchema":{"properties":{"action":{"default":"collect","title":"Action","type":"string"},"account":{"default":"","title":"Account","type":"string"},"config":{"default":"config.json","title":"Config","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"cloudmapper_analysisArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"cloudmapper_analysisOutput","type":"object"}},{"name":"pacu_exploitation","description":"\n        Execute Pacu for AWS exploitation framework.\n        \n        Args:\n            session_name: Pacu session name\n            modules: Comma-separated list of modules to run\n            data_services: Data services to enumerate\n            regions: AWS regions to target\n            additional_args: Additional Pacu arguments\n            \n        Returns:\n            AWS exploitation framework results\n        ","inputSchema":{"properties":{"session_name":{"default":"hexstrike_session","title":"Session Name","type":"string"},"modules":{"default":"","title":"Modules","type":"string"},"data_services":{"default":"","title":"Data Services","type":"string"},"regions":{"default":"","title":"Regions","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"pacu_exploitationArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"pacu_exploitationOutput","type":"object"}},{"name":"kube_hunter_scan","description":"\n        Execute kube-hunter for Kubernetes penetration testing.\n        \n        Args:\n            target: Specific target to scan\n            remote: Remote target to scan\n            cidr: CIDR range to scan\n            interface: Network interface to scan\n            active: Enable active hunting (potentially harmful)\n            report: Report format (json, yaml)\n            additional_args: Additional kube-hunter arguments\n            \n        Returns:\n            Kubernetes penetration testing results\n        ","inputSchema":{"properties":{"target":{"default":"","title":"Target","type":"string"},"remote":{"default":"","title":"Remote","type":"string"},"cidr":{"default":"","title":"Cidr","type":"string"},"interface":{"default":"","title":"Interface","type":"string"},"active":{"default":false,"title":"Active","type":"boolean"},"report":{"default":"json","title":"Report","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"kube_hunter_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"kube_hunter_scanOutput","type":"object"}},{"name":"kube_bench_cis","description":"\n        Execute kube-bench for CIS Kubernetes benchmark checks.\n        \n        Args:\n            targets: Targets to check (master, node, etcd, policies)\n            version: Kubernetes version\n            config_dir: Configuration directory\n            output_format: Output format (json, yaml)\n            additional_args: Additional kube-bench arguments\n            \n        Returns:\n            CIS Kubernetes benchmark results\n        ","inputSchema":{"properties":{"targets":{"default":"","title":"Targets","type":"string"},"version":{"default":"","title":"Version","type":"string"},"config_dir":{"default":"","title":"Config Dir","type":"string"},"output_format":{"default":"json","title":"Output Format","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"kube_bench_cisArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"kube_bench_cisOutput","type":"object"}},{"name":"docker_bench_security_scan","description":"\n        Execute Docker Bench for Security for Docker security assessment.\n        \n        Args:\n            checks: Specific checks to run\n            exclude: Checks to exclude\n            output_file: Output file path\n            additional_args: Additional Docker Bench arguments\n            \n        Returns:\n            Docker security assessment results\n        ","inputSchema":{"properties":{"checks":{"default":"","title":"Checks","type":"string"},"exclude":{"default":"","title":"Exclude","type":"string"},"output_file":{"default":"/tmp/docker-bench-results.json","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"docker_bench_security_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"docker_bench_security_scanOutput","type":"object"}},{"name":"clair_vulnerability_scan","description":"\n        Execute Clair for container vulnerability analysis.\n        \n        Args:\n            image: Container image to scan\n            config: Clair configuration file\n            output_format: Output format (json, yaml)\n            additional_args: Additional Clair arguments\n            \n        Returns:\n            Container vulnerability analysis results\n        ","inputSchema":{"properties":{"image":{"title":"Image","type":"string"},"config":{"default":"/etc/clair/config.yaml","title":"Config","type":"string"},"output_format":{"default":"json","title":"Output Format","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["image"],"title":"clair_vulnerability_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"clair_vulnerability_scanOutput","type":"object"}},{"name":"falco_runtime_monitoring","description":"\n        Execute Falco for runtime security monitoring.\n        \n        Args:\n            config_file: Falco configuration file\n            rules_file: Custom rules file\n            output_format: Output format (json, text)\n            duration: Monitoring duration in seconds\n            additional_args: Additional Falco arguments\n            \n        Returns:\n            Runtime security monitoring results\n        ","inputSchema":{"properties":{"config_file":{"default":"/etc/falco/falco.yaml","title":"Config File","type":"string"},"rules_file":{"default":"","title":"Rules File","type":"string"},"output_format":{"default":"json","title":"Output Format","type":"string"},"duration":{"default":60,"title":"Duration","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"falco_runtime_monitoringArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"falco_runtime_monitoringOutput","type":"object"}},{"name":"checkov_iac_scan","description":"\n        Execute Checkov for infrastructure as code security scanning.\n        \n        Args:\n            directory: Directory to scan\n            framework: Framework to scan (terraform, cloudformation, kubernetes, etc.)\n            check: Specific check to run\n            skip_check: Check to skip\n            output_format: Output format (json, yaml, cli)\n            additional_args: Additional Checkov arguments\n            \n        Returns:\n            Infrastructure as code security scanning results\n        ","inputSchema":{"properties":{"directory":{"default":".","title":"Directory","type":"string"},"framework":{"default":"","title":"Framework","type":"string"},"check":{"default":"","title":"Check","type":"string"},"skip_check":{"default":"","title":"Skip Check","type":"string"},"output_format":{"default":"json","title":"Output Format","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"checkov_iac_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"checkov_iac_scanOutput","type":"object"}},{"name":"terrascan_iac_scan","description":"\n        Execute Terrascan for infrastructure as code security scanning.\n        \n        Args:\n            scan_type: Type of scan (all, terraform, k8s, etc.)\n            iac_dir: Infrastructure as code directory\n            policy_type: Policy type to use\n            output_format: Output format (json, yaml, xml)\n            severity: Severity filter (high, medium, low)\n            additional_args: Additional Terrascan arguments\n            \n        Returns:\n            Infrastructure as code security scanning results\n        ","inputSchema":{"properties":{"scan_type":{"default":"all","title":"Scan Type","type":"string"},"iac_dir":{"default":".","title":"Iac Dir","type":"string"},"policy_type":{"default":"","title":"Policy Type","type":"string"},"output_format":{"default":"json","title":"Output Format","type":"string"},"severity":{"default":"","title":"Severity","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"terrascan_iac_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"terrascan_iac_scanOutput","type":"object"}},{"name":"create_file","description":"\n        Create a file with specified content on the HexStrike server.\n        \n        Args:\n            filename: Name of the file to create\n            content: Content to write to the file\n            binary: Whether the content is binary data\n            \n        Returns:\n            File creation results\n        ","inputSchema":{"properties":{"filename":{"title":"Filename","type":"string"},"content":{"title":"Content","type":"string"},"binary":{"default":false,"title":"Binary","type":"boolean"}},"required":["filename","content"],"title":"create_fileArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"create_fileOutput","type":"object"}},{"name":"modify_file","description":"\n        Modify an existing file on the HexStrike server.\n        \n        Args:\n            filename: Name of the file to modify\n            content: Content to write or append\n            append: Whether to append to the file (True) or overwrite (False)\n            \n        Returns:\n            File modification results\n        ","inputSchema":{"properties":{"filename":{"title":"Filename","type":"string"},"content":{"title":"Content","type":"string"},"append":{"default":false,"title":"Append","type":"boolean"}},"required":["filename","content"],"title":"modify_fileArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"modify_fileOutput","type":"object"}},{"name":"delete_file","description":"\n        Delete a file or directory on the HexStrike server.\n        \n        Args:\n            filename: Name of the file or directory to delete\n            \n        Returns:\n            File deletion results\n        ","inputSchema":{"properties":{"filename":{"title":"Filename","type":"string"}},"required":["filename"],"title":"delete_fileArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"delete_fileOutput","type":"object"}},{"name":"list_files","description":"\n        List files in a directory on the HexStrike server.\n        \n        Args:\n            directory: Directory to list (relative to server's base directory)\n            \n        Returns:\n            Directory listing results\n        ","inputSchema":{"properties":{"directory":{"default":".","title":"Directory","type":"string"}},"title":"list_filesArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"list_filesOutput","type":"object"}},{"name":"generate_payload","description":"\n        Generate large payloads for testing and exploitation.\n        \n        Args:\n            payload_type: Type of payload (buffer, cyclic, random)\n            size: Size of the payload in bytes\n            pattern: Pattern to use for buffer payloads\n            filename: Custom filename (auto-generated if empty)\n            \n        Returns:\n            Payload generation results\n        ","inputSchema":{"properties":{"payload_type":{"default":"buffer","title":"Payload Type","type":"string"},"size":{"default":1024,"title":"Size","type":"integer"},"pattern":{"default":"A","title":"Pattern","type":"string"},"filename":{"default":"","title":"Filename","type":"string"}},"title":"generate_payloadArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"generate_payloadOutput","type":"object"}},{"name":"install_python_package","description":"\n        Install a Python package in a virtual environment on the HexStrike server.\n        \n        Args:\n            package: Name of the Python package to install\n            env_name: Name of the virtual environment\n            \n        Returns:\n            Package installation results\n        ","inputSchema":{"properties":{"package":{"title":"Package","type":"string"},"env_name":{"default":"default","title":"Env Name","type":"string"}},"required":["package"],"title":"install_python_packageArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"install_python_packageOutput","type":"object"}},{"name":"execute_python_script","description":"\n        Execute a Python script in a virtual environment on the HexStrike server.\n        \n        Args:\n            script: Python script content to execute\n            env_name: Name of the virtual environment\n            filename: Custom script filename (auto-generated if empty)\n            \n        Returns:\n            Script execution results\n        ","inputSchema":{"properties":{"script":{"title":"Script","type":"string"},"env_name":{"default":"default","title":"Env Name","type":"string"},"filename":{"default":"","title":"Filename","type":"string"}},"required":["script"],"title":"execute_python_scriptArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"execute_python_scriptOutput","type":"object"}},{"name":"dirb_scan","description":"\n        Execute Dirb for directory brute forcing with enhanced logging.\n        \n        Args:\n            url: The target URL\n            wordlist: Path to wordlist file\n            additional_args: Additional Dirb arguments\n            \n        Returns:\n            Scan results with enhanced telemetry\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"wordlist":{"default":"/usr/share/wordlists/dirb/common.txt","title":"Wordlist","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"dirb_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"dirb_scanOutput","type":"object"}},{"name":"nikto_scan","description":"\n        Execute Nikto web vulnerability scanner with enhanced logging.\n        \n        Args:\n            target: The target URL or IP\n            additional_args: Additional Nikto arguments\n            \n        Returns:\n            Scan results with discovered vulnerabilities\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"nikto_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"nikto_scanOutput","type":"object"}},{"name":"sqlmap_scan","description":"\n        Execute SQLMap for SQL injection testing with enhanced logging.\n        \n        Args:\n            url: The target URL\n            data: POST data for testing\n            additional_args: Additional SQLMap arguments\n            \n        Returns:\n            SQL injection test results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"data":{"default":"","title":"Data","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"sqlmap_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"sqlmap_scanOutput","type":"object"}},{"name":"metasploit_run","description":"\n        Execute a Metasploit module with enhanced logging.\n        \n        Args:\n            module: The Metasploit module to use\n            options: Dictionary of module options\n            \n        Returns:\n            Metasploit execution results\n        ","inputSchema":{"properties":{"module":{"title":"Module","type":"string"},"options":{"additionalProperties":true,"default":{},"title":"Options","type":"object"}},"required":["module"],"title":"metasploit_runArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"metasploit_runOutput","type":"object"}},{"name":"hydra_attack","description":"\n        Execute Hydra for password brute forcing with enhanced logging.\n        \n        Args:\n            target: The target IP or hostname\n            service: The service to attack (ssh, ftp, http, etc.)\n            username: Single username to test\n            username_file: File containing usernames\n            password: Single password to test\n            password_file: File containing passwords\n            additional_args: Additional Hydra arguments\n            \n        Returns:\n            Brute force attack results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"service":{"title":"Service","type":"string"},"username":{"default":"","title":"Username","type":"string"},"username_file":{"default":"","title":"Username File","type":"string"},"password":{"default":"","title":"Password","type":"string"},"password_file":{"default":"","title":"Password File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target","service"],"title":"hydra_attackArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"hydra_attackOutput","type":"object"}},{"name":"john_crack","description":"\n        Execute John the Ripper for password cracking with enhanced logging.\n        \n        Args:\n            hash_file: File containing password hashes\n            wordlist: Wordlist file to use\n            format_type: Hash format type\n            additional_args: Additional John arguments\n            \n        Returns:\n            Password cracking results\n        ","inputSchema":{"properties":{"hash_file":{"title":"Hash File","type":"string"},"wordlist":{"default":"/usr/share/wordlists/rockyou.txt","title":"Wordlist","type":"string"},"format_type":{"default":"","title":"Format Type","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["hash_file"],"title":"john_crackArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"john_crackOutput","type":"object"}},{"name":"wpscan_analyze","description":"\n        Execute WPScan for WordPress vulnerability scanning with enhanced logging.\n        \n        Args:\n            url: The WordPress site URL\n            additional_args: Additional WPScan arguments\n            \n        Returns:\n            WordPress vulnerability scan results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"wpscan_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"wpscan_analyzeOutput","type":"object"}},{"name":"enum4linux_scan","description":"\n        Execute Enum4linux for SMB enumeration with enhanced logging.\n        \n        Args:\n            target: The target IP address\n            additional_args: Additional Enum4linux arguments\n            \n        Returns:\n            SMB enumeration results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"additional_args":{"default":"-a","title":"Additional Args","type":"string"}},"required":["target"],"title":"enum4linux_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"enum4linux_scanOutput","type":"object"}},{"name":"ffuf_scan","description":"\n        Execute FFuf for web fuzzing with enhanced logging.\n        \n        Args:\n            url: The target URL\n            wordlist: Wordlist file to use\n            mode: Fuzzing mode (directory, vhost, parameter)\n            match_codes: HTTP status codes to match\n            additional_args: Additional FFuf arguments\n            \n        Returns:\n            Web fuzzing results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"wordlist":{"default":"/usr/share/wordlists/dirb/common.txt","title":"Wordlist","type":"string"},"mode":{"default":"directory","title":"Mode","type":"string"},"match_codes":{"default":"200,204,301,302,307,401,403","title":"Match Codes","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"ffuf_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ffuf_scanOutput","type":"object"}},{"name":"netexec_scan","description":"\n        Execute NetExec (formerly CrackMapExec) for network enumeration with enhanced logging.\n        \n        Args:\n            target: The target IP or network\n            protocol: Protocol to use (smb, ssh, winrm, etc.)\n            username: Username for authentication\n            password: Password for authentication\n            hash_value: Hash for pass-the-hash attacks\n            module: NetExec module to execute\n            additional_args: Additional NetExec arguments\n            \n        Returns:\n            Network enumeration results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"protocol":{"default":"smb","title":"Protocol","type":"string"},"username":{"default":"","title":"Username","type":"string"},"password":{"default":"","title":"Password","type":"string"},"hash_value":{"default":"","title":"Hash Value","type":"string"},"module":{"default":"","title":"Module","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"netexec_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"netexec_scanOutput","type":"object"}},{"name":"amass_scan","description":"\n        Execute Amass for subdomain enumeration with enhanced logging.\n        \n        Args:\n            domain: The target domain\n            mode: Amass mode (enum, intel, viz)\n            additional_args: Additional Amass arguments\n            \n        Returns:\n            Subdomain enumeration results\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"mode":{"default":"enum","title":"Mode","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"amass_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"amass_scanOutput","type":"object"}},{"name":"hashcat_crack","description":"\n        Execute Hashcat for advanced password cracking with enhanced logging.\n        \n        Args:\n            hash_file: File containing password hashes\n            hash_type: Hash type number for Hashcat\n            attack_mode: Attack mode (0=dict, 1=combo, 3=mask, etc.)\n            wordlist: Wordlist file for dictionary attacks\n            mask: Mask for mask attacks\n            additional_args: Additional Hashcat arguments\n            \n        Returns:\n            Password cracking results\n        ","inputSchema":{"properties":{"hash_file":{"title":"Hash File","type":"string"},"hash_type":{"title":"Hash Type","type":"string"},"attack_mode":{"default":"0","title":"Attack Mode","type":"string"},"wordlist":{"default":"/usr/share/wordlists/rockyou.txt","title":"Wordlist","type":"string"},"mask":{"default":"","title":"Mask","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["hash_file","hash_type"],"title":"hashcat_crackArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"hashcat_crackOutput","type":"object"}},{"name":"subfinder_scan","description":"\n        Execute Subfinder for passive subdomain enumeration with enhanced logging.\n        \n        Args:\n            domain: The target domain\n            silent: Run in silent mode\n            all_sources: Use all sources\n            additional_args: Additional Subfinder arguments\n            \n        Returns:\n            Passive subdomain enumeration results\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"silent":{"default":true,"title":"Silent","type":"boolean"},"all_sources":{"default":false,"title":"All Sources","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"subfinder_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"subfinder_scanOutput","type":"object"}},{"name":"smbmap_scan","description":"\n        Execute SMBMap for SMB share enumeration with enhanced logging.\n        \n        Args:\n            target: The target IP address\n            username: Username for authentication\n            password: Password for authentication\n            domain: Domain for authentication\n            additional_args: Additional SMBMap arguments\n            \n        Returns:\n            SMB share enumeration results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"username":{"default":"","title":"Username","type":"string"},"password":{"default":"","title":"Password","type":"string"},"domain":{"default":"","title":"Domain","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"smbmap_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"smbmap_scanOutput","type":"object"}},{"name":"rustscan_fast_scan","description":"\n        Execute Rustscan for ultra-fast port scanning with enhanced logging.\n        \n        Args:\n            target: The target IP address or hostname\n            ports: Specific ports to scan (e.g., \"22,80,443\")\n            ulimit: File descriptor limit\n            batch_size: Batch size for scanning\n            timeout: Timeout in milliseconds\n            scripts: Run Nmap scripts on discovered ports\n            additional_args: Additional Rustscan arguments\n            \n        Returns:\n            Ultra-fast port scanning results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"ports":{"default":"","title":"Ports","type":"string"},"ulimit":{"default":5000,"title":"Ulimit","type":"integer"},"batch_size":{"default":4500,"title":"Batch Size","type":"integer"},"timeout":{"default":1500,"title":"Timeout","type":"integer"},"scripts":{"default":false,"title":"Scripts","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"rustscan_fast_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"rustscan_fast_scanOutput","type":"object"}},{"name":"masscan_high_speed","description":"\n        Execute Masscan for high-speed Internet-scale port scanning with intelligent rate limiting.\n        \n        Args:\n            target: The target IP address or CIDR range\n            ports: Port range to scan\n            rate: Packets per second rate\n            interface: Network interface to use\n            router_mac: Router MAC address\n            source_ip: Source IP address\n            banners: Enable banner grabbing\n            additional_args: Additional Masscan arguments\n            \n        Returns:\n            High-speed port scanning results with intelligent rate limiting\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"ports":{"default":"1-65535","title":"Ports","type":"string"},"rate":{"default":1000,"title":"Rate","type":"integer"},"interface":{"default":"","title":"Interface","type":"string"},"router_mac":{"default":"","title":"Router Mac","type":"string"},"source_ip":{"default":"","title":"Source Ip","type":"string"},"banners":{"default":false,"title":"Banners","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"masscan_high_speedArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"masscan_high_speedOutput","type":"object"}},{"name":"nmap_advanced_scan","description":"\n        Execute advanced Nmap scans with custom NSE scripts and optimized timing.\n        \n        Args:\n            target: The target IP address or hostname\n            scan_type: Nmap scan type (e.g., -sS, -sT, -sU)\n            ports: Specific ports to scan\n            timing: Timing template (T0-T5)\n            nse_scripts: Custom NSE scripts to run\n            os_detection: Enable OS detection\n            version_detection: Enable version detection\n            aggressive: Enable aggressive scanning\n            stealth: Enable stealth mode\n            additional_args: Additional Nmap arguments\n            \n        Returns:\n            Advanced Nmap scanning results with custom NSE scripts\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"scan_type":{"default":"-sS","title":"Scan Type","type":"string"},"ports":{"default":"","title":"Ports","type":"string"},"timing":{"default":"T4","title":"Timing","type":"string"},"nse_scripts":{"default":"","title":"Nse Scripts","type":"string"},"os_detection":{"default":false,"title":"Os Detection","type":"boolean"},"version_detection":{"default":false,"title":"Version Detection","type":"boolean"},"aggressive":{"default":false,"title":"Aggressive","type":"boolean"},"stealth":{"default":false,"title":"Stealth","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"nmap_advanced_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"nmap_advanced_scanOutput","type":"object"}},{"name":"autorecon_comprehensive","description":"\n        Execute AutoRecon for comprehensive automated reconnaissance.\n        \n        Args:\n            target: The target IP address or hostname\n            output_dir: Output directory for results\n            port_scans: Port scan configuration\n            service_scans: Service scan configuration\n            heartbeat: Heartbeat interval in seconds\n            timeout: Timeout for individual scans\n            additional_args: Additional AutoRecon arguments\n            \n        Returns:\n            Comprehensive automated reconnaissance results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"output_dir":{"default":"/tmp/autorecon","title":"Output Dir","type":"string"},"port_scans":{"default":"top-100-ports","title":"Port Scans","type":"string"},"service_scans":{"default":"default","title":"Service Scans","type":"string"},"heartbeat":{"default":60,"title":"Heartbeat","type":"integer"},"timeout":{"default":300,"title":"Timeout","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"autorecon_comprehensiveArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"autorecon_comprehensiveOutput","type":"object"}},{"name":"enum4linux_ng_advanced","description":"\n        Execute Enum4linux-ng for advanced SMB enumeration with enhanced logging.\n        \n        Args:\n            target: The target IP address\n            username: Username for authentication\n            password: Password for authentication\n            domain: Domain for authentication\n            shares: Enumerate shares\n            users: Enumerate users\n            groups: Enumerate groups\n            policy: Enumerate policies\n            additional_args: Additional Enum4linux-ng arguments\n            \n        Returns:\n            Advanced SMB enumeration results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"username":{"default":"","title":"Username","type":"string"},"password":{"default":"","title":"Password","type":"string"},"domain":{"default":"","title":"Domain","type":"string"},"shares":{"default":true,"title":"Shares","type":"boolean"},"users":{"default":true,"title":"Users","type":"boolean"},"groups":{"default":true,"title":"Groups","type":"boolean"},"policy":{"default":true,"title":"Policy","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"enum4linux_ng_advancedArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"enum4linux_ng_advancedOutput","type":"object"}},{"name":"rpcclient_enumeration","description":"\n        Execute rpcclient for RPC enumeration with enhanced logging.\n        \n        Args:\n            target: The target IP address\n            username: Username for authentication\n            password: Password for authentication\n            domain: Domain for authentication\n            commands: Semicolon-separated RPC commands\n            additional_args: Additional rpcclient arguments\n            \n        Returns:\n            RPC enumeration results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"username":{"default":"","title":"Username","type":"string"},"password":{"default":"","title":"Password","type":"string"},"domain":{"default":"","title":"Domain","type":"string"},"commands":{"default":"enumdomusers;enumdomgroups;querydominfo","title":"Commands","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"rpcclient_enumerationArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"rpcclient_enumerationOutput","type":"object"}},{"name":"nbtscan_netbios","description":"\n        Execute nbtscan for NetBIOS name scanning with enhanced logging.\n        \n        Args:\n            target: The target IP address or range\n            verbose: Enable verbose output\n            timeout: Timeout in seconds\n            additional_args: Additional nbtscan arguments\n            \n        Returns:\n            NetBIOS name scanning results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"verbose":{"default":false,"title":"Verbose","type":"boolean"},"timeout":{"default":2,"title":"Timeout","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"nbtscan_netbiosArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"nbtscan_netbiosOutput","type":"object"}},{"name":"arp_scan_discovery","description":"\n        Execute arp-scan for network discovery with enhanced logging.\n        \n        Args:\n            target: The target IP range (if not using local_network)\n            interface: Network interface to use\n            local_network: Scan local network\n            timeout: Timeout in milliseconds\n            retry: Number of retries\n            additional_args: Additional arp-scan arguments\n            \n        Returns:\n            Network discovery results via ARP scanning\n        ","inputSchema":{"properties":{"target":{"default":"","title":"Target","type":"string"},"interface":{"default":"","title":"Interface","type":"string"},"local_network":{"default":false,"title":"Local Network","type":"boolean"},"timeout":{"default":500,"title":"Timeout","type":"integer"},"retry":{"default":3,"title":"Retry","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"arp_scan_discoveryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"arp_scan_discoveryOutput","type":"object"}},{"name":"responder_credential_harvest","description":"\n        Execute Responder for credential harvesting with enhanced logging.\n        \n        Args:\n            interface: Network interface to use\n            analyze: Analyze mode only\n            wpad: Enable WPAD rogue proxy\n            force_wpad_auth: Force WPAD authentication\n            fingerprint: Fingerprint mode\n            duration: Duration to run in seconds\n            additional_args: Additional Responder arguments\n            \n        Returns:\n            Credential harvesting results\n        ","inputSchema":{"properties":{"interface":{"default":"eth0","title":"Interface","type":"string"},"analyze":{"default":false,"title":"Analyze","type":"boolean"},"wpad":{"default":true,"title":"Wpad","type":"boolean"},"force_wpad_auth":{"default":false,"title":"Force Wpad Auth","type":"boolean"},"fingerprint":{"default":false,"title":"Fingerprint","type":"boolean"},"duration":{"default":300,"title":"Duration","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"responder_credential_harvestArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"responder_credential_harvestOutput","type":"object"}},{"name":"volatility_analyze","description":"\n        Execute Volatility for memory forensics analysis with enhanced logging.\n        \n        Args:\n            memory_file: Path to memory dump file\n            plugin: Volatility plugin to use\n            profile: Memory profile to use\n            additional_args: Additional Volatility arguments\n            \n        Returns:\n            Memory forensics analysis results\n        ","inputSchema":{"properties":{"memory_file":{"title":"Memory File","type":"string"},"plugin":{"title":"Plugin","type":"string"},"profile":{"default":"","title":"Profile","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["memory_file","plugin"],"title":"volatility_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"volatility_analyzeOutput","type":"object"}},{"name":"msfvenom_generate","description":"\n        Execute MSFVenom for payload generation with enhanced logging.\n        \n        Args:\n            payload: The payload to generate\n            format_type: Output format (exe, elf, raw, etc.)\n            output_file: Output file path\n            encoder: Encoder to use\n            iterations: Number of encoding iterations\n            additional_args: Additional MSFVenom arguments\n            \n        Returns:\n            Payload generation results\n        ","inputSchema":{"properties":{"payload":{"title":"Payload","type":"string"},"format_type":{"default":"","title":"Format Type","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"encoder":{"default":"","title":"Encoder","type":"string"},"iterations":{"default":"","title":"Iterations","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["payload"],"title":"msfvenom_generateArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"msfvenom_generateOutput","type":"object"}},{"name":"gdb_analyze","description":"\n        Execute GDB for binary analysis and debugging with enhanced logging.\n        \n        Args:\n            binary: Path to the binary file\n            commands: GDB commands to execute\n            script_file: Path to GDB script file\n            additional_args: Additional GDB arguments\n            \n        Returns:\n            Binary analysis results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"commands":{"default":"","title":"Commands","type":"string"},"script_file":{"default":"","title":"Script File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"gdb_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"gdb_analyzeOutput","type":"object"}},{"name":"radare2_analyze","description":"\n        Execute Radare2 for binary analysis and reverse engineering with enhanced logging.\n        \n        Args:\n            binary: Path to the binary file\n            commands: Radare2 commands to execute\n            additional_args: Additional Radare2 arguments\n            \n        Returns:\n            Binary analysis results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"commands":{"default":"","title":"Commands","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"radare2_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"radare2_analyzeOutput","type":"object"}},{"name":"binwalk_analyze","description":"\n        Execute Binwalk for firmware and file analysis with enhanced logging.\n        \n        Args:\n            file_path: Path to the file to analyze\n            extract: Whether to extract discovered files\n            additional_args: Additional Binwalk arguments\n            \n        Returns:\n            Firmware analysis results\n        ","inputSchema":{"properties":{"file_path":{"title":"File Path","type":"string"},"extract":{"default":false,"title":"Extract","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["file_path"],"title":"binwalk_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"binwalk_analyzeOutput","type":"object"}},{"name":"ropgadget_search","description":"\n        Search for ROP gadgets in a binary using ROPgadget with enhanced logging.\n        \n        Args:\n            binary: Path to the binary file\n            gadget_type: Type of gadgets to search for\n            additional_args: Additional ROPgadget arguments\n            \n        Returns:\n            ROP gadget search results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"gadget_type":{"default":"","title":"Gadget Type","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"ropgadget_searchArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ropgadget_searchOutput","type":"object"}},{"name":"checksec_analyze","description":"\n        Check security features of a binary with enhanced logging.\n        \n        Args:\n            binary: Path to the binary file\n            \n        Returns:\n            Security features analysis results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"}},"required":["binary"],"title":"checksec_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"checksec_analyzeOutput","type":"object"}},{"name":"xxd_hexdump","description":"\n        Create a hex dump of a file using xxd with enhanced logging.\n        \n        Args:\n            file_path: Path to the file\n            offset: Offset to start reading from\n            length: Number of bytes to read\n            additional_args: Additional xxd arguments\n            \n        Returns:\n            Hex dump results\n        ","inputSchema":{"properties":{"file_path":{"title":"File Path","type":"string"},"offset":{"default":"0","title":"Offset","type":"string"},"length":{"default":"","title":"Length","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["file_path"],"title":"xxd_hexdumpArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"xxd_hexdumpOutput","type":"object"}},{"name":"strings_extract","description":"\n        Extract strings from a binary file with enhanced logging.\n        \n        Args:\n            file_path: Path to the file\n            min_len: Minimum string length\n            additional_args: Additional strings arguments\n            \n        Returns:\n            String extraction results\n        ","inputSchema":{"properties":{"file_path":{"title":"File Path","type":"string"},"min_len":{"default":4,"title":"Min Len","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["file_path"],"title":"strings_extractArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"strings_extractOutput","type":"object"}},{"name":"objdump_analyze","description":"\n        Analyze a binary using objdump with enhanced logging.\n        \n        Args:\n            binary: Path to the binary file\n            disassemble: Whether to disassemble the binary\n            additional_args: Additional objdump arguments\n            \n        Returns:\n            Binary analysis results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"disassemble":{"default":true,"title":"Disassemble","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"objdump_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"objdump_analyzeOutput","type":"object"}},{"name":"ghidra_analysis","description":"\n        Execute Ghidra for advanced binary analysis and reverse engineering.\n        \n        Args:\n            binary: Path to the binary file\n            project_name: Ghidra project name\n            script_file: Custom Ghidra script to run\n            analysis_timeout: Analysis timeout in seconds\n            output_format: Output format (xml, json)\n            additional_args: Additional Ghidra arguments\n            \n        Returns:\n            Advanced binary analysis results from Ghidra\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"project_name":{"default":"hexstrike_analysis","title":"Project Name","type":"string"},"script_file":{"default":"","title":"Script File","type":"string"},"analysis_timeout":{"default":300,"title":"Analysis Timeout","type":"integer"},"output_format":{"default":"xml","title":"Output Format","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"ghidra_analysisArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ghidra_analysisOutput","type":"object"}},{"name":"pwntools_exploit","description":"\n        Execute Pwntools for exploit development and automation.\n        \n        Args:\n            script_content: Python script content using pwntools\n            target_binary: Local binary to exploit\n            target_host: Remote host to connect to\n            target_port: Remote port to connect to\n            exploit_type: Type of exploit (local, remote, format_string, rop)\n            additional_args: Additional arguments\n            \n        Returns:\n            Exploit execution results\n        ","inputSchema":{"properties":{"script_content":{"default":"","title":"Script Content","type":"string"},"target_binary":{"default":"","title":"Target Binary","type":"string"},"target_host":{"default":"","title":"Target Host","type":"string"},"target_port":{"default":0,"title":"Target Port","type":"integer"},"exploit_type":{"default":"local","title":"Exploit Type","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"pwntools_exploitArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"pwntools_exploitOutput","type":"object"}},{"name":"one_gadget_search","description":"\n        Execute one_gadget to find one-shot RCE gadgets in libc.\n        \n        Args:\n            libc_path: Path to libc binary\n            level: Constraint level (0, 1, 2)\n            additional_args: Additional one_gadget arguments\n            \n        Returns:\n            One-shot RCE gadget search results\n        ","inputSchema":{"properties":{"libc_path":{"title":"Libc Path","type":"string"},"level":{"default":1,"title":"Level","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["libc_path"],"title":"one_gadget_searchArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"one_gadget_searchOutput","type":"object"}},{"name":"libc_database_lookup","description":"\n        Execute libc-database for libc identification and offset lookup.\n        \n        Args:\n            action: Action to perform (find, dump, download)\n            symbols: Symbols with offsets for find action (format: \"symbol1:offset1 symbol2:offset2\")\n            libc_id: Libc ID for dump/download actions\n            additional_args: Additional arguments\n            \n        Returns:\n            Libc database lookup results\n        ","inputSchema":{"properties":{"action":{"default":"find","title":"Action","type":"string"},"symbols":{"default":"","title":"Symbols","type":"string"},"libc_id":{"default":"","title":"Libc Id","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"libc_database_lookupArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"libc_database_lookupOutput","type":"object"}},{"name":"gdb_peda_debug","description":"\n        Execute GDB with PEDA for enhanced debugging and exploitation.\n        \n        Args:\n            binary: Binary to debug\n            commands: GDB commands to execute\n            attach_pid: Process ID to attach to\n            core_file: Core dump file to analyze\n            additional_args: Additional GDB arguments\n            \n        Returns:\n            Enhanced debugging results with PEDA\n        ","inputSchema":{"properties":{"binary":{"default":"","title":"Binary","type":"string"},"commands":{"default":"","title":"Commands","type":"string"},"attach_pid":{"default":0,"title":"Attach Pid","type":"integer"},"core_file":{"default":"","title":"Core File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"gdb_peda_debugArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"gdb_peda_debugOutput","type":"object"}},{"name":"angr_symbolic_execution","description":"\n        Execute angr for symbolic execution and binary analysis.\n        \n        Args:\n            binary: Binary to analyze\n            script_content: Custom angr script content\n            find_address: Address to find during symbolic execution\n            avoid_addresses: Comma-separated addresses to avoid\n            analysis_type: Type of analysis (symbolic, cfg, static)\n            additional_args: Additional arguments\n            \n        Returns:\n            Symbolic execution and binary analysis results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"script_content":{"default":"","title":"Script Content","type":"string"},"find_address":{"default":"","title":"Find Address","type":"string"},"avoid_addresses":{"default":"","title":"Avoid Addresses","type":"string"},"analysis_type":{"default":"symbolic","title":"Analysis Type","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"angr_symbolic_executionArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"angr_symbolic_executionOutput","type":"object"}},{"name":"ropper_gadget_search","description":"\n        Execute ropper for advanced ROP/JOP gadget searching.\n        \n        Args:\n            binary: Binary to search for gadgets\n            gadget_type: Type of gadgets (rop, jop, sys, all)\n            quality: Gadget quality level (1-5)\n            arch: Target architecture (x86, x86_64, arm, etc.)\n            search_string: Specific gadget pattern to search for\n            additional_args: Additional ropper arguments\n            \n        Returns:\n            Advanced ROP/JOP gadget search results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"gadget_type":{"default":"rop","title":"Gadget Type","type":"string"},"quality":{"default":1,"title":"Quality","type":"integer"},"arch":{"default":"","title":"Arch","type":"string"},"search_string":{"default":"","title":"Search String","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"ropper_gadget_searchArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ropper_gadget_searchOutput","type":"object"}},{"name":"pwninit_setup","description":"\n        Execute pwninit for CTF binary exploitation setup.\n        \n        Args:\n            binary: Binary file to set up\n            libc: Libc file to use\n            ld: Loader file to use\n            template_type: Template type (python, c)\n            additional_args: Additional pwninit arguments\n            \n        Returns:\n            CTF binary exploitation setup results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"libc":{"default":"","title":"Libc","type":"string"},"ld":{"default":"","title":"Ld","type":"string"},"template_type":{"default":"python","title":"Template Type","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"pwninit_setupArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"pwninit_setupOutput","type":"object"}},{"name":"feroxbuster_scan","description":"\n        Execute Feroxbuster for recursive content discovery with enhanced logging.\n        \n        Args:\n            url: The target URL\n            wordlist: Wordlist file to use\n            threads: Number of threads\n            additional_args: Additional Feroxbuster arguments\n            \n        Returns:\n            Content discovery results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"wordlist":{"default":"/usr/share/wordlists/dirb/common.txt","title":"Wordlist","type":"string"},"threads":{"default":10,"title":"Threads","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"feroxbuster_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"feroxbuster_scanOutput","type":"object"}},{"name":"dotdotpwn_scan","description":"\n        Execute DotDotPwn for directory traversal testing with enhanced logging.\n        \n        Args:\n            target: The target hostname or IP\n            module: Module to use (http, ftp, tftp, etc.)\n            additional_args: Additional DotDotPwn arguments\n            \n        Returns:\n            Directory traversal test results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"module":{"default":"http","title":"Module","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"dotdotpwn_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"dotdotpwn_scanOutput","type":"object"}},{"name":"xsser_scan","description":"\n        Execute XSSer for XSS vulnerability testing with enhanced logging.\n        \n        Args:\n            url: The target URL\n            params: Parameters to test\n            additional_args: Additional XSSer arguments\n            \n        Returns:\n            XSS vulnerability test results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"params":{"default":"","title":"Params","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"xsser_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"xsser_scanOutput","type":"object"}},{"name":"wfuzz_scan","description":"\n        Execute Wfuzz for web application fuzzing with enhanced logging.\n        \n        Args:\n            url: The target URL (use FUZZ where you want to inject payloads)\n            wordlist: Wordlist file to use\n            additional_args: Additional Wfuzz arguments\n            \n        Returns:\n            Web application fuzzing results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"wordlist":{"default":"/usr/share/wordlists/dirb/common.txt","title":"Wordlist","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"wfuzz_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"wfuzz_scanOutput","type":"object"}},{"name":"dirsearch_scan","description":"\n        Execute Dirsearch for advanced directory and file discovery with enhanced logging.\n        \n        Args:\n            url: The target URL\n            extensions: File extensions to search for\n            wordlist: Wordlist file to use\n            threads: Number of threads to use\n            recursive: Enable recursive scanning\n            additional_args: Additional Dirsearch arguments\n            \n        Returns:\n            Advanced directory discovery results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"extensions":{"default":"php,html,js,txt,xml,json","title":"Extensions","type":"string"},"wordlist":{"default":"/usr/share/wordlists/dirsearch/common.txt","title":"Wordlist","type":"string"},"threads":{"default":30,"title":"Threads","type":"integer"},"recursive":{"default":false,"title":"Recursive","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"dirsearch_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"dirsearch_scanOutput","type":"object"}},{"name":"katana_crawl","description":"\n        Execute Katana for next-generation crawling and spidering with enhanced logging.\n        \n        Args:\n            url: The target URL to crawl\n            depth: Crawling depth\n            js_crawl: Enable JavaScript crawling\n            form_extraction: Enable form extraction\n            output_format: Output format (json, txt)\n            additional_args: Additional Katana arguments\n            \n        Returns:\n            Advanced web crawling results with endpoints and forms\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"depth":{"default":3,"title":"Depth","type":"integer"},"js_crawl":{"default":true,"title":"Js Crawl","type":"boolean"},"form_extraction":{"default":true,"title":"Form Extraction","type":"boolean"},"output_format":{"default":"json","title":"Output Format","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"katana_crawlArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"katana_crawlOutput","type":"object"}},{"name":"gau_discovery","description":"\n        Execute Gau (Get All URLs) for URL discovery from multiple sources with enhanced logging.\n        \n        Args:\n            domain: The target domain\n            providers: Data providers to use\n            include_subs: Include subdomains\n            blacklist: File extensions to blacklist\n            additional_args: Additional Gau arguments\n            \n        Returns:\n            Comprehensive URL discovery results from multiple sources\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"providers":{"default":"wayback,commoncrawl,otx,urlscan","title":"Providers","type":"string"},"include_subs":{"default":true,"title":"Include Subs","type":"boolean"},"blacklist":{"default":"png,jpg,gif,jpeg,swf,woff,svg,pdf,css,ico","title":"Blacklist","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"gau_discoveryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"gau_discoveryOutput","type":"object"}},{"name":"waybackurls_discovery","description":"\n        Execute Waybackurls for historical URL discovery with enhanced logging.\n        \n        Args:\n            domain: The target domain\n            get_versions: Get all versions of URLs\n            no_subs: Don't include subdomains\n            additional_args: Additional Waybackurls arguments\n            \n        Returns:\n            Historical URL discovery results from Wayback Machine\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"get_versions":{"default":false,"title":"Get Versions","type":"boolean"},"no_subs":{"default":false,"title":"No Subs","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"waybackurls_discoveryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"waybackurls_discoveryOutput","type":"object"}},{"name":"arjun_parameter_discovery","description":"\n        Execute Arjun for HTTP parameter discovery with enhanced logging.\n        \n        Args:\n            url: The target URL\n            method: HTTP method to use\n            wordlist: Custom wordlist file\n            delay: Delay between requests\n            threads: Number of threads\n            stable: Use stable mode\n            additional_args: Additional Arjun arguments\n            \n        Returns:\n            HTTP parameter discovery results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"method":{"default":"GET","title":"Method","type":"string"},"wordlist":{"default":"","title":"Wordlist","type":"string"},"delay":{"default":0,"title":"Delay","type":"integer"},"threads":{"default":25,"title":"Threads","type":"integer"},"stable":{"default":false,"title":"Stable","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"arjun_parameter_discoveryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"arjun_parameter_discoveryOutput","type":"object"}},{"name":"paramspider_mining","description":"\n        Execute ParamSpider for parameter mining from web archives with enhanced logging.\n        \n        Args:\n            domain: The target domain\n            level: Mining level depth\n            exclude: File extensions to exclude\n            output: Output file path\n            additional_args: Additional ParamSpider arguments\n            \n        Returns:\n            Parameter mining results from web archives\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"level":{"default":2,"title":"Level","type":"integer"},"exclude":{"default":"png,jpg,gif,jpeg,swf,woff,svg,pdf,css,ico","title":"Exclude","type":"string"},"output":{"default":"","title":"Output","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"paramspider_miningArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"paramspider_miningOutput","type":"object"}},{"name":"x8_parameter_discovery","description":"\n        Execute x8 for hidden parameter discovery with enhanced logging.\n        \n        Args:\n            url: The target URL\n            wordlist: Parameter wordlist\n            method: HTTP method\n            body: Request body\n            headers: Custom headers\n            additional_args: Additional x8 arguments\n            \n        Returns:\n            Hidden parameter discovery results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"wordlist":{"default":"/usr/share/wordlists/x8/params.txt","title":"Wordlist","type":"string"},"method":{"default":"GET","title":"Method","type":"string"},"body":{"default":"","title":"Body","type":"string"},"headers":{"default":"","title":"Headers","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"x8_parameter_discoveryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"x8_parameter_discoveryOutput","type":"object"}},{"name":"jaeles_vulnerability_scan","description":"\n        Execute Jaeles for advanced vulnerability scanning with custom signatures.\n        \n        Args:\n            url: The target URL\n            signatures: Custom signature path\n            config: Configuration file\n            threads: Number of threads\n            timeout: Request timeout\n            additional_args: Additional Jaeles arguments\n            \n        Returns:\n            Advanced vulnerability scanning results with custom signatures\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"signatures":{"default":"","title":"Signatures","type":"string"},"config":{"default":"","title":"Config","type":"string"},"threads":{"default":20,"title":"Threads","type":"integer"},"timeout":{"default":20,"title":"Timeout","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"jaeles_vulnerability_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"jaeles_vulnerability_scanOutput","type":"object"}},{"name":"dalfox_xss_scan","description":"\n        Execute Dalfox for advanced XSS vulnerability scanning with enhanced logging.\n        \n        Args:\n            url: The target URL\n            pipe_mode: Use pipe mode for input\n            blind: Enable blind XSS testing\n            mining_dom: Enable DOM mining\n            mining_dict: Enable dictionary mining\n            custom_payload: Custom XSS payload\n            additional_args: Additional Dalfox arguments\n            \n        Returns:\n            Advanced XSS vulnerability scanning results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"pipe_mode":{"default":false,"title":"Pipe Mode","type":"boolean"},"blind":{"default":false,"title":"Blind","type":"boolean"},"mining_dom":{"default":true,"title":"Mining Dom","type":"boolean"},"mining_dict":{"default":true,"title":"Mining Dict","type":"boolean"},"custom_payload":{"default":"","title":"Custom Payload","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"dalfox_xss_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"dalfox_xss_scanOutput","type":"object"}},{"name":"httpx_probe","description":"\n        Execute httpx for fast HTTP probing and technology detection.\n        \n        Args:\n            target: Target file or single URL\n            probe: Enable probing\n            tech_detect: Enable technology detection\n            status_code: Show status codes\n            content_length: Show content length\n            title: Show page titles\n            web_server: Show web server\n            threads: Number of threads\n            additional_args: Additional httpx arguments\n            \n        Returns:\n            Fast HTTP probing results with technology detection\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"probe":{"default":true,"title":"Probe","type":"boolean"},"tech_detect":{"default":false,"title":"Tech Detect","type":"boolean"},"status_code":{"default":false,"title":"Status Code","type":"boolean"},"content_length":{"default":false,"title":"Content Length","type":"boolean"},"title":{"default":false,"title":"Title","type":"boolean"},"web_server":{"default":false,"title":"Web Server","type":"boolean"},"threads":{"default":50,"title":"Threads","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"httpx_probeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"httpx_probeOutput","type":"object"}},{"name":"anew_data_processing","description":"\n        Execute anew for appending new lines to files (useful for data processing).\n        \n        Args:\n            input_data: Input data to process\n            output_file: Output file path\n            additional_args: Additional anew arguments\n            \n        Returns:\n            Data processing results with unique line filtering\n        ","inputSchema":{"properties":{"input_data":{"title":"Input Data","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["input_data"],"title":"anew_data_processingArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"anew_data_processingOutput","type":"object"}},{"name":"qsreplace_parameter_replacement","description":"\n        Execute qsreplace for query string parameter replacement.\n        \n        Args:\n            urls: URLs to process\n            replacement: Replacement string for parameters\n            additional_args: Additional qsreplace arguments\n            \n        Returns:\n            Parameter replacement results for fuzzing\n        ","inputSchema":{"properties":{"urls":{"title":"Urls","type":"string"},"replacement":{"default":"FUZZ","title":"Replacement","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["urls"],"title":"qsreplace_parameter_replacementArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"qsreplace_parameter_replacementOutput","type":"object"}},{"name":"uro_url_filtering","description":"\n        Execute uro for filtering out similar URLs.\n        \n        Args:\n            urls: URLs to filter\n            whitelist: Whitelist patterns\n            blacklist: Blacklist patterns\n            additional_args: Additional uro arguments\n            \n        Returns:\n            Filtered URL results with duplicates removed\n        ","inputSchema":{"properties":{"urls":{"title":"Urls","type":"string"},"whitelist":{"default":"","title":"Whitelist","type":"string"},"blacklist":{"default":"","title":"Blacklist","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["urls"],"title":"uro_url_filteringArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"uro_url_filteringOutput","type":"object"}},{"name":"ai_generate_payload","description":"\n        Generate AI-powered contextual payloads for security testing.\n        \n        Args:\n            attack_type: Type of attack (xss, sqli, lfi, cmd_injection, ssti, xxe)\n            complexity: Complexity level (basic, advanced, bypass)\n            technology: Target technology (php, asp, jsp, python, nodejs)\n            url: Target URL for context\n            \n        Returns:\n            Contextual payloads with risk assessment and test cases\n        ","inputSchema":{"properties":{"attack_type":{"title":"Attack Type","type":"string"},"complexity":{"default":"basic","title":"Complexity","type":"string"},"technology":{"default":"","title":"Technology","type":"string"},"url":{"default":"","title":"Url","type":"string"}},"required":["attack_type"],"title":"ai_generate_payloadArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ai_generate_payloadOutput","type":"object"}},{"name":"ai_test_payload","description":"\n        Test generated payload against target with AI analysis.\n        \n        Args:\n            payload: The payload to test\n            target_url: Target URL to test against\n            method: HTTP method (GET, POST)\n            \n        Returns:\n            Test results with AI analysis and vulnerability assessment\n        ","inputSchema":{"properties":{"payload":{"title":"Payload","type":"string"},"target_url":{"title":"Target Url","type":"string"},"method":{"default":"GET","title":"Method","type":"string"}},"required":["payload","target_url"],"title":"ai_test_payloadArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ai_test_payloadOutput","type":"object"}},{"name":"ai_generate_attack_suite","description":"\n        Generate comprehensive attack suite with multiple payload types.\n        \n        Args:\n            target_url: Target URL for testing\n            attack_types: Comma-separated list of attack types\n            \n        Returns:\n            Comprehensive attack suite with multiple payload types\n        ","inputSchema":{"properties":{"target_url":{"title":"Target Url","type":"string"},"attack_types":{"default":"xss,sqli,lfi","title":"Attack Types","type":"string"}},"required":["target_url"],"title":"ai_generate_attack_suiteArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ai_generate_attack_suiteOutput","type":"object"}},{"name":"api_fuzzer","description":"\n        Advanced API endpoint fuzzing with intelligent parameter discovery.\n        \n        Args:\n            base_url: Base URL of the API\n            endpoints: Comma-separated list of specific endpoints to test\n            methods: HTTP methods to test (comma-separated)\n            wordlist: Wordlist for endpoint discovery\n            \n        Returns:\n            API fuzzing results with endpoint discovery and vulnerability assessment\n        ","inputSchema":{"properties":{"base_url":{"title":"Base Url","type":"string"},"endpoints":{"default":"","title":"Endpoints","type":"string"},"methods":{"default":"GET,POST,PUT,DELETE","title":"Methods","type":"string"},"wordlist":{"default":"/usr/share/wordlists/api/api-endpoints.txt","title":"Wordlist","type":"string"}},"required":["base_url"],"title":"api_fuzzerArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"api_fuzzerOutput","type":"object"}},{"name":"graphql_scanner","description":"\n        Advanced GraphQL security scanning and introspection.\n        \n        Args:\n            endpoint: GraphQL endpoint URL\n            introspection: Test introspection queries\n            query_depth: Maximum query depth to test\n            test_mutations: Test mutation operations\n            \n        Returns:\n            GraphQL security scan results with vulnerability assessment\n        ","inputSchema":{"properties":{"endpoint":{"title":"Endpoint","type":"string"},"introspection":{"default":true,"title":"Introspection","type":"boolean"},"query_depth":{"default":10,"title":"Query Depth","type":"integer"},"test_mutations":{"default":true,"title":"Test Mutations","type":"boolean"}},"required":["endpoint"],"title":"graphql_scannerArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"graphql_scannerOutput","type":"object"}},{"name":"jwt_analyzer","description":"\n        Advanced JWT token analysis and vulnerability testing.\n        \n        Args:\n            jwt_token: JWT token to analyze\n            target_url: Optional target URL for testing token manipulation\n            \n        Returns:\n            JWT analysis results with vulnerability assessment and attack vectors\n        ","inputSchema":{"properties":{"jwt_token":{"title":"Jwt Token","type":"string"},"target_url":{"default":"","title":"Target Url","type":"string"}},"required":["jwt_token"],"title":"jwt_analyzerArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"jwt_analyzerOutput","type":"object"}},{"name":"api_schema_analyzer","description":"\n        Analyze API schemas and identify potential security issues.\n        \n        Args:\n            schema_url: URL to the API schema (OpenAPI/Swagger/GraphQL)\n            schema_type: Type of schema (openapi, swagger, graphql)\n            \n        Returns:\n            Schema analysis results with security issues and recommendations\n        ","inputSchema":{"properties":{"schema_url":{"title":"Schema Url","type":"string"},"schema_type":{"default":"openapi","title":"Schema Type","type":"string"}},"required":["schema_url"],"title":"api_schema_analyzerArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"api_schema_analyzerOutput","type":"object"}},{"name":"comprehensive_api_audit","description":"\n        Comprehensive API security audit combining multiple testing techniques.\n        \n        Args:\n            base_url: Base URL of the API\n            schema_url: Optional API schema URL\n            jwt_token: Optional JWT token for analysis\n            graphql_endpoint: Optional GraphQL endpoint\n            \n        Returns:\n            Comprehensive audit results with all API security tests\n        ","inputSchema":{"properties":{"base_url":{"title":"Base Url","type":"string"},"schema_url":{"default":"","title":"Schema Url","type":"string"},"jwt_token":{"default":"","title":"Jwt Token","type":"string"},"graphql_endpoint":{"default":"","title":"Graphql Endpoint","type":"string"}},"required":["base_url"],"title":"comprehensive_api_auditArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"comprehensive_api_auditOutput","type":"object"}},{"name":"volatility3_analyze","description":"\n        Execute Volatility3 for advanced memory forensics with enhanced logging.\n        \n        Args:\n            memory_file: Path to memory dump file\n            plugin: Volatility3 plugin to execute\n            output_file: Output file path\n            additional_args: Additional Volatility3 arguments\n            \n        Returns:\n            Advanced memory forensics results\n        ","inputSchema":{"properties":{"memory_file":{"title":"Memory File","type":"string"},"plugin":{"title":"Plugin","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["memory_file","plugin"],"title":"volatility3_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"volatility3_analyzeOutput","type":"object"}},{"name":"foremost_carving","description":"\n        Execute Foremost for file carving with enhanced logging.\n        \n        Args:\n            input_file: Input file or device to carve\n            output_dir: Output directory for carved files\n            file_types: File types to carve (jpg,gif,png,etc.)\n            additional_args: Additional Foremost arguments\n            \n        Returns:\n            File carving results\n        ","inputSchema":{"properties":{"input_file":{"title":"Input File","type":"string"},"output_dir":{"default":"/tmp/foremost_output","title":"Output Dir","type":"string"},"file_types":{"default":"","title":"File Types","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["input_file"],"title":"foremost_carvingArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"foremost_carvingOutput","type":"object"}},{"name":"steghide_analysis","description":"\n        Execute Steghide for steganography analysis with enhanced logging.\n        \n        Args:\n            action: Action to perform (extract, embed, info)\n            cover_file: Cover file for steganography\n            embed_file: File to embed (for embed action)\n            passphrase: Passphrase for steganography\n            output_file: Output file path\n            additional_args: Additional Steghide arguments\n            \n        Returns:\n            Steganography analysis results\n        ","inputSchema":{"properties":{"action":{"title":"Action","type":"string"},"cover_file":{"title":"Cover File","type":"string"},"embed_file":{"default":"","title":"Embed File","type":"string"},"passphrase":{"default":"","title":"Passphrase","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["action","cover_file"],"title":"steghide_analysisArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"steghide_analysisOutput","type":"object"}},{"name":"exiftool_extract","description":"\n        Execute ExifTool for metadata extraction with enhanced logging.\n        \n        Args:\n            file_path: Path to file for metadata extraction\n            output_format: Output format (json, xml, csv)\n            tags: Specific tags to extract\n            additional_args: Additional ExifTool arguments\n            \n        Returns:\n            Metadata extraction results\n        ","inputSchema":{"properties":{"file_path":{"title":"File Path","type":"string"},"output_format":{"default":"","title":"Output Format","type":"string"},"tags":{"default":"","title":"Tags","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["file_path"],"title":"exiftool_extractArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"exiftool_extractOutput","type":"object"}},{"name":"hashpump_attack","description":"\n        Execute HashPump for hash length extension attacks with enhanced logging.\n        \n        Args:\n            signature: Original hash signature\n            data: Original data\n            key_length: Length of secret key\n            append_data: Data to append\n            additional_args: Additional HashPump arguments\n            \n        Returns:\n            Hash length extension attack results\n        ","inputSchema":{"properties":{"signature":{"title":"Signature","type":"string"},"data":{"title":"Data","type":"string"},"key_length":{"title":"Key Length","type":"string"},"append_data":{"title":"Append Data","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["signature","data","key_length","append_data"],"title":"hashpump_attackArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"hashpump_attackOutput","type":"object"}},{"name":"hakrawler_crawl","description":"\n        Execute Hakrawler for web endpoint discovery with enhanced logging.\n        \n        Args:\n            url: Target URL to crawl\n            depth: Crawling depth\n            forms: Include forms in crawling\n            robots: Check robots.txt\n            sitemap: Check sitemap.xml\n            wayback: Use Wayback Machine\n            additional_args: Additional Hakrawler arguments\n            \n        Returns:\n            Web endpoint discovery results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"depth":{"default":2,"title":"Depth","type":"integer"},"forms":{"default":true,"title":"Forms","type":"boolean"},"robots":{"default":true,"title":"Robots","type":"boolean"},"sitemap":{"default":true,"title":"Sitemap","type":"boolean"},"wayback":{"default":false,"title":"Wayback","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"hakrawler_crawlArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"hakrawler_crawlOutput","type":"object"}},{"name":"paramspider_discovery","description":"\n        Execute ParamSpider for parameter discovery with enhanced logging.\n        \n        Args:\n            domain: Target domain\n            exclude: Extensions to exclude\n            output_file: Output file path\n            level: Crawling level\n            additional_args: Additional ParamSpider arguments\n            \n        Returns:\n            Parameter discovery results\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"exclude":{"default":"","title":"Exclude","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"level":{"default":2,"title":"Level","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"paramspider_discoveryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"paramspider_discoveryOutput","type":"object"}},{"name":"burpsuite_scan","description":"\n        Execute Burp Suite with enhanced logging.\n        \n        Args:\n            project_file: Burp project file path\n            config_file: Burp configuration file path\n            target: Target URL\n            headless: Run in headless mode\n            scan_type: Type of scan to perform\n            scan_config: Scan configuration\n            output_file: Output file path\n            additional_args: Additional Burp Suite arguments\n            \n        Returns:\n            Burp Suite scan results\n        ","inputSchema":{"properties":{"project_file":{"default":"","title":"Project File","type":"string"},"config_file":{"default":"","title":"Config File","type":"string"},"target":{"default":"","title":"Target","type":"string"},"headless":{"default":false,"title":"Headless","type":"boolean"},"scan_type":{"default":"","title":"Scan Type","type":"string"},"scan_config":{"default":"","title":"Scan Config","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"burpsuite_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"burpsuite_scanOutput","type":"object"}},{"name":"zap_scan","description":"\n        Execute OWASP ZAP with enhanced logging.\n        \n        Args:\n            target: Target URL\n            scan_type: Type of scan (baseline, full, api)\n            api_key: ZAP API key\n            daemon: Run in daemon mode\n            port: Port for ZAP daemon\n            host: Host for ZAP daemon\n            format_type: Output format (xml, json, html)\n            output_file: Output file path\n            additional_args: Additional ZAP arguments\n            \n        Returns:\n            ZAP scan results\n        ","inputSchema":{"properties":{"target":{"default":"","title":"Target","type":"string"},"scan_type":{"default":"baseline","title":"Scan Type","type":"string"},"api_key":{"default":"","title":"Api Key","type":"string"},"daemon":{"default":false,"title":"Daemon","type":"boolean"},"port":{"default":"8090","title":"Port","type":"string"},"host":{"default":"0.0.0.0","title":"Host","type":"string"},"format_type":{"default":"xml","title":"Format Type","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"zap_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"zap_scanOutput","type":"object"}},{"name":"arjun_scan","description":"\n        Execute Arjun for parameter discovery with enhanced logging.\n        \n        Args:\n            url: Target URL\n            method: HTTP method (GET, POST, etc.)\n            data: POST data for testing\n            headers: Custom headers\n            timeout: Request timeout\n            output_file: Output file path\n            additional_args: Additional Arjun arguments\n            \n        Returns:\n            Parameter discovery results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"method":{"default":"GET","title":"Method","type":"string"},"data":{"default":"","title":"Data","type":"string"},"headers":{"default":"","title":"Headers","type":"string"},"timeout":{"default":"","title":"Timeout","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"arjun_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"arjun_scanOutput","type":"object"}},{"name":"wafw00f_scan","description":"\n        Execute wafw00f to identify and fingerprint WAF products with enhanced logging.\n        \n        Args:\n            target: Target URL or IP\n            additional_args: Additional wafw00f arguments\n            \n        Returns:\n            WAF detection results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"wafw00f_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"wafw00f_scanOutput","type":"object"}},{"name":"fierce_scan","description":"\n        Execute fierce for DNS reconnaissance with enhanced logging.\n        \n        Args:\n            domain: Target domain\n            dns_server: DNS server to use\n            additional_args: Additional fierce arguments\n            \n        Returns:\n            DNS reconnaissance results\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"dns_server":{"default":"","title":"Dns Server","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"fierce_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"fierce_scanOutput","type":"object"}},{"name":"dnsenum_scan","description":"\n        Execute dnsenum for DNS enumeration with enhanced logging.\n        \n        Args:\n            domain: Target domain\n            dns_server: DNS server to use\n            wordlist: Wordlist for brute forcing\n            additional_args: Additional dnsenum arguments\n            \n        Returns:\n            DNS enumeration results\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"dns_server":{"default":"","title":"Dns Server","type":"string"},"wordlist":{"default":"","title":"Wordlist","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"dnsenum_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"dnsenum_scanOutput","type":"object"}},{"name":"autorecon_scan","description":"\n        Execute AutoRecon for comprehensive target enumeration with full parameter support.\n        \n        Args:\n            target: Single target to scan\n            target_file: File containing multiple targets\n            ports: Specific ports to scan\n            output_dir: Output directory\n            max_scans: Maximum number of concurrent scans\n            max_port_scans: Maximum number of concurrent port scans\n            heartbeat: Heartbeat interval\n            timeout: Global timeout\n            target_timeout: Per-target timeout\n            config_file: Configuration file path\n            global_file: Global configuration file\n            plugins_dir: Plugins directory\n            add_plugins_dir: Additional plugins directory\n            tags: Plugin tags to include\n            exclude_tags: Plugin tags to exclude\n            port_scans: Port scan plugins to run\n            service_scans: Service scan plugins to run\n            reports: Report plugins to run\n            single_target: Use single target directory structure\n            only_scans_dir: Only create scans directory\n            no_port_dirs: Don't create port directories\n            nmap: Custom nmap command\n            nmap_append: Arguments to append to nmap\n            proxychains: Use proxychains\n            disable_sanity_checks: Disable sanity checks\n            disable_keyboard_control: Disable keyboard control\n            force_services: Force service detection\n            accessible: Enable accessible output\n            verbose: Verbosity level (0-3)\n            curl_path: Custom curl path\n            dirbuster_tool: Directory busting tool\n            dirbuster_wordlist: Directory busting wordlist\n            dirbuster_threads: Directory busting threads\n            dirbuster_ext: Directory busting extensions\n            onesixtyone_community_strings: SNMP community strings\n            global_username_wordlist: Global username wordlist\n            global_password_wordlist: Global password wordlist\n            global_domain: Global domain\n            additional_args: Additional AutoRecon arguments\n            \n        Returns:\n            Comprehensive enumeration results with full configurability\n        ","inputSchema":{"properties":{"target":{"default":"","title":"Target","type":"string"},"target_file":{"default":"","title":"Target File","type":"string"},"ports":{"default":"","title":"Ports","type":"string"},"output_dir":{"default":"","title":"Output Dir","type":"string"},"max_scans":{"default":"","title":"Max Scans","type":"string"},"max_port_scans":{"default":"","title":"Max Port Scans","type":"string"},"heartbeat":{"default":"","title":"Heartbeat","type":"string"},"timeout":{"default":"","title":"Timeout","type":"string"},"target_timeout":{"default":"","title":"Target Timeout","type":"string"},"config_file":{"default":"","title":"Config File","type":"string"},"global_file":{"default":"","title":"Global File","type":"string"},"plugins_dir":{"default":"","title":"Plugins Dir","type":"string"},"add_plugins_dir":{"default":"","title":"Add Plugins Dir","type":"string"},"tags":{"default":"","title":"Tags","type":"string"},"exclude_tags":{"default":"","title":"Exclude Tags","type":"string"},"port_scans":{"default":"","title":"Port Scans","type":"string"},"service_scans":{"default":"","title":"Service Scans","type":"string"},"reports":{"default":"","title":"Reports","type":"string"},"single_target":{"default":false,"title":"Single Target","type":"boolean"},"only_scans_dir":{"default":false,"title":"Only Scans Dir","type":"boolean"},"no_port_dirs":{"default":false,"title":"No Port Dirs","type":"boolean"},"nmap":{"default":"","title":"Nmap","type":"string"},"nmap_append":{"default":"","title":"Nmap Append","type":"string"},"proxychains":{"default":false,"title":"Proxychains","type":"boolean"},"disable_sanity_checks":{"default":false,"title":"Disable Sanity Checks","type":"boolean"},"disable_keyboard_control":{"default":false,"title":"Disable Keyboard Control","type":"boolean"},"force_services":{"default":"","title":"Force Services","type":"string"},"accessible":{"default":false,"title":"Accessible","type":"boolean"},"verbose":{"default":0,"title":"Verbose","type":"integer"},"curl_path":{"default":"","title":"Curl Path","type":"string"},"dirbuster_tool":{"default":"","title":"Dirbuster Tool","type":"string"},"dirbuster_wordlist":{"default":"","title":"Dirbuster Wordlist","type":"string"},"dirbuster_threads":{"default":"","title":"Dirbuster Threads","type":"string"},"dirbuster_ext":{"default":"","title":"Dirbuster Ext","type":"string"},"onesixtyone_community_strings":{"default":"","title":"Onesixtyone Community Strings","type":"string"},"global_username_wordlist":{"default":"","title":"Global Username Wordlist","type":"string"},"global_password_wordlist":{"default":"","title":"Global Password Wordlist","type":"string"},"global_domain":{"default":"","title":"Global Domain","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"autorecon_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"autorecon_scanOutput","type":"object"}},{"name":"server_health","description":"\n        Check the health status of the HexStrike AI server.\n        \n        Returns:\n            Server health information with tool availability and telemetry\n        ","inputSchema":{"properties":{},"title":"server_healthArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"server_healthOutput","type":"object"}},{"name":"get_cache_stats","description":"\n        Get cache statistics from the HexStrike AI server.\n        \n        Returns:\n            Cache performance statistics\n        ","inputSchema":{"properties":{},"title":"get_cache_statsArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"get_cache_statsOutput","type":"object"}},{"name":"clear_cache","description":"\n        Clear the cache on the HexStrike AI server.\n        \n        Returns:\n            Cache clear operation results\n        ","inputSchema":{"properties":{},"title":"clear_cacheArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"clear_cacheOutput","type":"object"}},{"name":"get_telemetry","description":"\n        Get system telemetry from the HexStrike AI server.\n        \n        Returns:\n            System performance and usage telemetry\n        ","inputSchema":{"properties":{},"title":"get_telemetryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"get_telemetryOutput","type":"object"}},{"name":"list_active_processes","description":"\n        List all active processes on the HexStrike AI server.\n        \n        Returns:\n            List of active processes with their status and progress\n        ","inputSchema":{"properties":{},"title":"list_active_processesArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"list_active_processesOutput","type":"object"}},{"name":"get_process_status","description":"\n        Get the status of a specific process.\n        \n        Args:\n            pid: Process ID to check\n            \n        Returns:\n            Process status information including progress and runtime\n        ","inputSchema":{"properties":{"pid":{"title":"Pid","type":"integer"}},"required":["pid"],"title":"get_process_statusArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"get_process_statusOutput","type":"object"}},{"name":"terminate_process","description":"\n        Terminate a specific running process.\n        \n        Args:\n            pid: Process ID to terminate\n            \n        Returns:\n            Success status of the termination operation\n        ","inputSchema":{"properties":{"pid":{"title":"Pid","type":"integer"}},"required":["pid"],"title":"terminate_processArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"terminate_processOutput","type":"object"}},{"name":"pause_process","description":"\n        Pause a specific running process.\n        \n        Args:\n            pid: Process ID to pause\n            \n        Returns:\n            Success status of the pause operation\n        ","inputSchema":{"properties":{"pid":{"title":"Pid","type":"integer"}},"required":["pid"],"title":"pause_processArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"pause_processOutput","type":"object"}},{"name":"resume_process","description":"\n        Resume a paused process.\n        \n        Args:\n            pid: Process ID to resume\n            \n        Returns:\n            Success status of the resume operation\n        ","inputSchema":{"properties":{"pid":{"title":"Pid","type":"integer"}},"required":["pid"],"title":"resume_processArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"resume_processOutput","type":"object"}},{"name":"get_process_dashboard","description":"\n        Get enhanced process dashboard with visual status indicators.\n        \n        Returns:\n            Real-time dashboard with progress bars, system metrics, and process status\n        ","inputSchema":{"properties":{},"title":"get_process_dashboardArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"get_process_dashboardOutput","type":"object"}},{"name":"execute_command","description":"\n        Execute an arbitrary command on the HexStrike AI server with enhanced logging.\n        \n        Args:\n            command: The command to execute\n            use_cache: Whether to use caching for this command\n            \n        Returns:\n            Command execution results with enhanced telemetry\n        ","inputSchema":{"properties":{"command":{"title":"Command","type":"string"},"use_cache":{"default":true,"title":"Use Cache","type":"boolean"}},"required":["command"],"title":"execute_commandArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"execute_commandOutput","type":"object"}},{"name":"monitor_cve_feeds","description":"\n        Monitor CVE databases for new vulnerabilities with AI analysis.\n        \n        Args:\n            hours: Hours to look back for new CVEs (default: 24)\n            severity_filter: Filter by CVSS severity - comma-separated values (LOW,MEDIUM,HIGH,CRITICAL,ALL)\n            keywords: Filter CVEs by keywords in description (comma-separated)\n            \n        Returns:\n            Latest CVEs with exploitability analysis and threat intelligence\n            \n        Example:\n            monitor_cve_feeds(48, \"CRITICAL\", \"remote code execution\")\n        ","inputSchema":{"properties":{"hours":{"default":24,"title":"Hours","type":"integer"},"severity_filter":{"default":"HIGH,CRITICAL","title":"Severity Filter","type":"string"},"keywords":{"default":"","title":"Keywords","type":"string"}},"title":"monitor_cve_feedsArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"monitor_cve_feedsOutput","type":"object"}},{"name":"generate_exploit_from_cve","description":"\n        Generate working exploits from CVE information using AI-powered analysis.\n        \n        Args:\n            cve_id: CVE identifier (e.g., CVE-2024-1234)\n            target_os: Target operating system (windows, linux, macos, any)\n            target_arch: Target architecture (x86, x64, arm, any)\n            exploit_type: Type of exploit to generate (poc, weaponized, stealth)\n            evasion_level: Evasion sophistication (none, basic, advanced)\n            \n        Returns:\n            Generated exploit code with testing instructions and evasion techniques\n            \n        Example:\n            generate_exploit_from_cve(\"CVE-2024-1234\", \"linux\", \"x64\", \"weaponized\", \"advanced\")\n        ","inputSchema":{"properties":{"cve_id":{"title":"Cve Id","type":"string"},"target_os":{"default":"","title":"Target Os","type":"string"},"target_arch":{"default":"x64","title":"Target Arch","type":"string"},"exploit_type":{"default":"poc","title":"Exploit Type","type":"string"},"evasion_level":{"default":"none","title":"Evasion Level","type":"string"}},"required":["cve_id"],"title":"generate_exploit_from_cveArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"generate_exploit_from_cveOutput","type":"object"}},{"name":"discover_attack_chains","description":"\n        Discover multi-stage attack chains for target software with vulnerability correlation.\n        \n        Args:\n            target_software: Target software/system (e.g., \"Apache HTTP Server\", \"Windows Server 2019\")\n            attack_depth: Maximum number of stages in attack chain (1-5)\n            include_zero_days: Include potential zero-day vulnerabilities in analysis\n            \n        Returns:\n            Attack chains with vulnerability combinations, success probabilities, and exploit availability\n            \n        Example:\n            discover_attack_chains(\"Apache HTTP Server 2.4\", 4, True)\n        ","inputSchema":{"properties":{"target_software":{"title":"Target Software","type":"string"},"attack_depth":{"default":3,"title":"Attack Depth","type":"integer"},"include_zero_days":{"default":false,"title":"Include Zero Days","type":"boolean"}},"required":["target_software"],"title":"discover_attack_chainsArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"discover_attack_chainsOutput","type":"object"}},{"name":"research_zero_day_opportunities","description":"\n        Automated zero-day vulnerability research using AI analysis and pattern recognition.\n        \n        Args:\n            target_software: Software to research for vulnerabilities (e.g., \"nginx\", \"OpenSSL\")\n            analysis_depth: Depth of analysis (quick, standard, comprehensive)\n            source_code_url: URL to source code repository for enhanced analysis\n            \n        Returns:\n            Potential vulnerability areas with exploitation feasibility and research recommendations\n            \n        Example:\n            research_zero_day_opportunities(\"nginx 1.20\", \"comprehensive\", \"https://github.com/nginx/nginx\")\n        ","inputSchema":{"properties":{"target_software":{"title":"Target Software","type":"string"},"analysis_depth":{"default":"standard","title":"Analysis Depth","type":"string"},"source_code_url":{"default":"","title":"Source Code Url","type":"string"}},"required":["target_software"],"title":"research_zero_day_opportunitiesArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"research_zero_day_opportunitiesOutput","type":"object"}},{"name":"correlate_threat_intelligence","description":"\n        Correlate threat intelligence across multiple sources with advanced analysis.\n        \n        Args:\n            indicators: Comma-separated IOCs (IPs, domains, hashes, CVEs, etc.)\n            timeframe: Time window for correlation (7d, 30d, 90d, 1y)\n            sources: Intelligence sources to query (cve, exploit-db, github, twitter, all)\n            \n        Returns:\n            Correlated threat intelligence with attribution, timeline, and threat scoring\n            \n        Example:\n            correlate_threat_intelligence(\"CVE-2024-1234,192.168.1.100,malware.exe\", \"90d\", \"all\")\n        ","inputSchema":{"properties":{"indicators":{"title":"Indicators","type":"string"},"timeframe":{"default":"30d","title":"Timeframe","type":"string"},"sources":{"default":"all","title":"Sources","type":"string"}},"required":["indicators"],"title":"correlate_threat_intelligenceArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"correlate_threat_intelligenceOutput","type":"object"}},{"name":"advanced_payload_generation","description":"\n        Generate advanced payloads with AI-powered evasion techniques and contextual adaptation.\n        \n        Args:\n            attack_type: Type of attack (rce, privilege_escalation, persistence, exfiltration, xss, sqli)\n            target_context: Target environment details (OS, software versions, security controls)\n            evasion_level: Evasion sophistication (basic, standard, advanced, nation-state)\n            custom_constraints: Custom payload constraints (size limits, character restrictions, etc.)\n            \n        Returns:\n            Advanced payloads with multiple evasion techniques and deployment instructions\n            \n        Example:\n            advanced_payload_generation(\"rce\", \"Windows 11 + Defender + AppLocker\", \"nation-state\", \"max_size:256,no_quotes\")\n        ","inputSchema":{"properties":{"attack_type":{"title":"Attack Type","type":"string"},"target_context":{"default":"","title":"Target Context","type":"string"},"evasion_level":{"default":"standard","title":"Evasion Level","type":"string"},"custom_constraints":{"default":"","title":"Custom Constraints","type":"string"}},"required":["attack_type"],"title":"advanced_payload_generationArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"advanced_payload_generationOutput","type":"object"}},{"name":"vulnerability_intelligence_dashboard","description":"\n        Get a comprehensive vulnerability intelligence dashboard with latest threats and trends.\n        \n        Returns:\n            Dashboard with latest CVEs, trending vulnerabilities, exploit availability, and threat landscape\n            \n        Example:\n            vulnerability_intelligence_dashboard()\n        ","inputSchema":{"properties":{},"title":"vulnerability_intelligence_dashboardArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"vulnerability_intelligence_dashboardOutput","type":"object"}},{"name":"threat_hunting_assistant","description":"\n        AI-powered threat hunting assistant with vulnerability correlation and attack simulation.\n        \n        Args:\n            target_environment: Environment to hunt in (e.g., \"Windows Domain\", \"Cloud Infrastructure\")\n            threat_indicators: Known IOCs or suspicious indicators to investigate\n            hunt_focus: Focus area (general, apt, ransomware, insider_threat, supply_chain)\n            \n        Returns:\n            Threat hunting playbook with detection queries, IOCs, and investigation steps\n            \n        Example:\n            threat_hunting_assistant(\"Windows Domain\", \"suspicious_process.exe,192.168.1.100\", \"apt\")\n        ","inputSchema":{"properties":{"target_environment":{"title":"Target Environment","type":"string"},"threat_indicators":{"default":"","title":"Threat Indicators","type":"string"},"hunt_focus":{"default":"general","title":"Hunt Focus","type":"string"}},"required":["target_environment"],"title":"threat_hunting_assistantArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"threat_hunting_assistantOutput","type":"object"}},{"name":"get_live_dashboard","description":"\n        Get a beautiful live dashboard showing all active processes with enhanced visual formatting.\n        \n        Returns:\n            Live dashboard with visual process monitoring and system metrics\n        ","inputSchema":{"properties":{},"title":"get_live_dashboardArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"get_live_dashboardOutput","type":"object"}},{"name":"create_vulnerability_report","description":"\n        Create a beautiful vulnerability report with severity-based styling and visual indicators.\n        \n        Args:\n            vulnerabilities: JSON string containing vulnerability data\n            target: Target that was scanned\n            scan_type: Type of scan performed\n            \n        Returns:\n            Formatted vulnerability report with visual enhancements\n        ","inputSchema":{"properties":{"vulnerabilities":{"title":"Vulnerabilities","type":"string"},"target":{"default":"","title":"Target","type":"string"},"scan_type":{"default":"comprehensive","title":"Scan Type","type":"string"}},"required":["vulnerabilities"],"title":"create_vulnerability_reportArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"create_vulnerability_reportOutput","type":"object"}},{"name":"format_tool_output_visual","description":"\n        Format tool output with beautiful visual styling, syntax highlighting, and structure.\n        \n        Args:\n            tool_name: Name of the security tool\n            output: Raw output from the tool\n            success: Whether the tool execution was successful\n            \n        Returns:\n            Beautifully formatted tool output with visual enhancements\n        ","inputSchema":{"properties":{"tool_name":{"title":"Tool Name","type":"string"},"output":{"title":"Output","type":"string"},"success":{"default":true,"title":"Success","type":"boolean"}},"required":["tool_name","output"],"title":"format_tool_output_visualArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"format_tool_output_visualOutput","type":"object"}},{"name":"create_scan_summary","description":"\n        Create a comprehensive scan summary report with beautiful visual formatting.\n        \n        Args:\n            target: Target that was scanned\n            tools_used: Comma-separated list of tools used\n            vulnerabilities_found: Number of vulnerabilities discovered\n            execution_time: Total execution time in seconds\n            findings: Additional findings or notes\n            \n        Returns:\n            Beautiful scan summary report with visual enhancements\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"tools_used":{"title":"Tools Used","type":"string"},"vulnerabilities_found":{"default":0,"title":"Vulnerabilities Found","type":"integer"},"execution_time":{"default":0,"title":"Execution Time","type":"number"},"findings":{"default":"","title":"Findings","type":"string"}},"required":["target","tools_used"],"title":"create_scan_summaryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"create_scan_summaryOutput","type":"object"}},{"name":"display_system_metrics","description":"\n        Display current system metrics and performance indicators with visual formatting.\n        \n        Returns:\n            System metrics with beautiful visual presentation\n        ","inputSchema":{"properties":{},"title":"display_system_metricsArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"display_system_metricsOutput","type":"object"}},{"name":"analyze_target_intelligence","description":"\n        Analyze target using AI-powered intelligence to create comprehensive profile.\n        \n        Args:\n            target: Target URL, IP address, or domain to analyze\n            \n        Returns:\n            Comprehensive target profile with technology detection, risk assessment, and recommendations\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"}},"required":["target"],"title":"analyze_target_intelligenceArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"analyze_target_intelligenceOutput","type":"object"}},{"name":"select_optimal_tools_ai","description":"\n        Use AI to select optimal security tools based on target analysis and testing objective.\n        \n        Args:\n            target: Target to analyze\n            objective: Testing objective - \"comprehensive\", \"quick\", or \"stealth\"\n            \n        Returns:\n            AI-selected optimal tools with effectiveness ratings and target profile\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"objective":{"default":"comprehensive","title":"Objective","type":"string"}},"required":["target"],"title":"select_optimal_tools_aiArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"select_optimal_tools_aiOutput","type":"object"}},{"name":"optimize_tool_parameters_ai","description":"\n        Use AI to optimize tool parameters based on target profile and context.\n        \n        Args:\n            target: Target to test\n            tool: Security tool to optimize\n            context: JSON string with additional context (stealth, aggressive, etc.)\n            \n        Returns:\n            AI-optimized parameters for maximum effectiveness\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"tool":{"title":"Tool","type":"string"},"context":{"default":"{}","title":"Context","type":"string"}},"required":["target","tool"],"title":"optimize_tool_parameters_aiArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"optimize_tool_parameters_aiOutput","type":"object"}},{"name":"create_attack_chain_ai","description":"\n        Create an intelligent attack chain using AI-driven tool sequencing and optimization.\n        \n        Args:\n            target: Target for the attack chain\n            objective: Attack objective - \"comprehensive\", \"quick\", or \"stealth\"\n            \n        Returns:\n            AI-generated attack chain with success probability and time estimates\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"objective":{"default":"comprehensive","title":"Objective","type":"string"}},"required":["target"],"title":"create_attack_chain_aiArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"create_attack_chain_aiOutput","type":"object"}},{"name":"intelligent_smart_scan","description":"\n        Execute an intelligent scan using AI-driven tool selection and parameter optimization.\n        \n        Args:\n            target: Target to scan\n            objective: Scanning objective - \"comprehensive\", \"quick\", or \"stealth\"\n            max_tools: Maximum number of tools to use\n            \n        Returns:\n            Results from AI-optimized scanning with tool execution summary\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"objective":{"default":"comprehensive","title":"Objective","type":"string"},"max_tools":{"default":5,"title":"Max Tools","type":"integer"}},"required":["target"],"title":"intelligent_smart_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"intelligent_smart_scanOutput","type":"object"}},{"name":"detect_technologies_ai","description":"\n        Use AI to detect technologies and provide technology-specific testing recommendations.\n        \n        Args:\n            target: Target to analyze for technology detection\n            \n        Returns:\n            Detected technologies with AI-generated testing recommendations\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"}},"required":["target"],"title":"detect_technologies_aiArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"detect_technologies_aiOutput","type":"object"}},{"name":"ai_reconnaissance_workflow","description":"\n        Execute AI-driven reconnaissance workflow with intelligent tool chaining.\n        \n        Args:\n            target: Target for reconnaissance\n            depth: Reconnaissance depth - \"surface\", \"standard\", or \"deep\"\n            \n        Returns:\n            Comprehensive reconnaissance results with AI-driven insights\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"depth":{"default":"standard","title":"Depth","type":"string"}},"required":["target"],"title":"ai_reconnaissance_workflowArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ai_reconnaissance_workflowOutput","type":"object"}},{"name":"ai_vulnerability_assessment","description":"\n        Perform AI-driven vulnerability assessment with intelligent prioritization.\n        \n        Args:\n            target: Target for vulnerability assessment\n            focus_areas: Comma-separated focus areas - \"web\", \"network\", \"api\", \"all\"\n            \n        Returns:\n            Prioritized vulnerability assessment results with AI insights\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"focus_areas":{"default":"all","title":"Focus Areas","type":"string"}},"required":["target"],"title":"ai_vulnerability_assessmentArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ai_vulnerability_assessmentOutput","type":"object"}},{"name":"bugbounty_reconnaissance_workflow","description":"\n        Create comprehensive reconnaissance workflow for bug bounty hunting.\n        \n        Args:\n            domain: Target domain for bug bounty\n            scope: Comma-separated list of in-scope domains/IPs\n            out_of_scope: Comma-separated list of out-of-scope domains/IPs\n            program_type: Type of program (web, api, mobile, iot)\n            \n        Returns:\n            Comprehensive reconnaissance workflow with phases and tools\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"scope":{"default":"","title":"Scope","type":"string"},"out_of_scope":{"default":"","title":"Out Of Scope","type":"string"},"program_type":{"default":"web","title":"Program Type","type":"string"}},"required":["domain"],"title":"bugbounty_reconnaissance_workflowArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"bugbounty_reconnaissance_workflowOutput","type":"object"}},{"name":"bugbounty_vulnerability_hunting","description":"\n        Create vulnerability hunting workflow prioritized by impact and bounty potential.\n        \n        Args:\n            domain: Target domain for bug bounty\n            priority_vulns: Comma-separated list of priority vulnerability types\n            bounty_range: Expected bounty range (low, medium, high, critical)\n            \n        Returns:\n            Vulnerability hunting workflow prioritized by impact\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"priority_vulns":{"default":"rce,sqli,xss,idor,ssrf","title":"Priority Vulns","type":"string"},"bounty_range":{"default":"unknown","title":"Bounty Range","type":"string"}},"required":["domain"],"title":"bugbounty_vulnerability_huntingArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"bugbounty_vulnerability_huntingOutput","type":"object"}},{"name":"bugbounty_business_logic_testing","description":"\n        Create business logic testing workflow for advanced bug bounty hunting.\n        \n        Args:\n            domain: Target domain for bug bounty\n            program_type: Type of program (web, api, mobile)\n            \n        Returns:\n            Business logic testing workflow with manual and automated tests\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"program_type":{"default":"web","title":"Program Type","type":"string"}},"required":["domain"],"title":"bugbounty_business_logic_testingArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"bugbounty_business_logic_testingOutput","type":"object"}},{"name":"bugbounty_osint_gathering","description":"\n        Create OSINT (Open Source Intelligence) gathering workflow for bug bounty reconnaissance.\n        \n        Args:\n            domain: Target domain for OSINT gathering\n            \n        Returns:\n            OSINT gathering workflow with multiple intelligence phases\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"}},"required":["domain"],"title":"bugbounty_osint_gatheringArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"bugbounty_osint_gatheringOutput","type":"object"}},{"name":"bugbounty_file_upload_testing","description":"\n        Create file upload vulnerability testing workflow with bypass techniques.\n        \n        Args:\n            target_url: Target URL with file upload functionality\n            \n        Returns:\n            File upload testing workflow with malicious files and bypass techniques\n        ","inputSchema":{"properties":{"target_url":{"title":"Target Url","type":"string"}},"required":["target_url"],"title":"bugbounty_file_upload_testingArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"bugbounty_file_upload_testingOutput","type":"object"}},{"name":"bugbounty_comprehensive_assessment","description":"\n        Create comprehensive bug bounty assessment combining all specialized workflows.\n        \n        Args:\n            domain: Target domain for bug bounty\n            scope: Comma-separated list of in-scope domains/IPs\n            priority_vulns: Comma-separated list of priority vulnerability types\n            include_osint: Include OSINT gathering workflow\n            include_business_logic: Include business logic testing workflow\n            \n        Returns:\n            Comprehensive bug bounty assessment with all workflows and summary\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"scope":{"default":"","title":"Scope","type":"string"},"priority_vulns":{"default":"rce,sqli,xss,idor,ssrf","title":"Priority Vulns","type":"string"},"include_osint":{"default":true,"title":"Include Osint","type":"boolean"},"include_business_logic":{"default":true,"title":"Include Business Logic","type":"boolean"}},"required":["domain"],"title":"bugbounty_comprehensive_assessmentArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"bugbounty_comprehensive_assessmentOutput","type":"object"}},{"name":"bugbounty_authentication_bypass_testing","description":"\n        Create authentication bypass testing workflow for bug bounty hunting.\n        \n        Args:\n            target_url: Target URL with authentication\n            auth_type: Type of authentication (form, jwt, oauth, saml)\n            \n        Returns:\n            Authentication bypass testing strategies and techniques\n        ","inputSchema":{"properties":{"target_url":{"title":"Target Url","type":"string"},"auth_type":{"default":"form","title":"Auth Type","type":"string"}},"required":["target_url"],"title":"bugbounty_authentication_bypass_testingArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"bugbounty_authentication_bypass_testingOutput","type":"object"}},{"name":"http_framework_test","description":"\n        Enhanced HTTP testing framework (Burp Suite alternative) for comprehensive web security testing.\n        \n        Args:\n            url: Target URL to test\n            method: HTTP method (GET, POST, PUT, DELETE, etc.)\n            data: Request data/parameters\n            headers: Custom headers\n            cookies: Custom cookies\n            action: Action to perform (request, spider, proxy_history, set_rules, set_scope, repeater, intruder)\n            \n        Returns:\n            HTTP testing results with vulnerability analysis\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"method":{"default":"GET","title":"Method","type":"string"},"data":{"additionalProperties":true,"default":{},"title":"Data","type":"object"},"headers":{"additionalProperties":true,"default":{},"title":"Headers","type":"object"},"cookies":{"additionalProperties":true,"default":{},"title":"Cookies","type":"object"},"action":{"default":"request","title":"Action","type":"string"}},"required":["url"],"title":"http_framework_testArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"http_framework_testOutput","type":"object"}},{"name":"browser_agent_inspect","description":"\n        AI-powered browser agent for comprehensive web application inspection and security analysis.\n        \n        Args:\n            url: Target URL to inspect\n            headless: Run browser in headless mode\n            wait_time: Time to wait after page load\n            action: Action to perform (navigate, screenshot, close, status)\n            proxy_port: Optional proxy port for request interception\n            active_tests: Run lightweight active reflected XSS tests (safe GET-only)\n            \n        Returns:\n            Browser inspection results with security analysis\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"headless":{"default":true,"title":"Headless","type":"boolean"},"wait_time":{"default":5,"title":"Wait Time","type":"integer"},"action":{"default":"navigate","title":"Action","type":"string"},"proxy_port":{"default":null,"title":"Proxy Port","type":"integer"},"active_tests":{"default":false,"title":"Active Tests","type":"boolean"}},"required":["url"],"title":"browser_agent_inspectArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"browser_agent_inspectOutput","type":"object"}},{"name":"http_set_rules","description":"Set match/replace rules used to rewrite parts of URL/query/headers/body before sending.\n        Rule format: {'where':'url|query|headers|body','pattern':'regex','replacement':'string'}","inputSchema":{"properties":{"rules":{"items":{},"title":"Rules","type":"array"}},"required":["rules"],"title":"http_set_rulesArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"http_set_rulesOutput","type":"object"}},{"name":"http_set_scope","description":"Define in-scope host (and optionally subdomains) so out-of-scope requests are skipped.","inputSchema":{"properties":{"host":{"title":"Host","type":"string"},"include_subdomains":{"default":true,"title":"Include Subdomains","type":"boolean"}},"required":["host"],"title":"http_set_scopeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"http_set_scopeOutput","type":"object"}},{"name":"http_repeater","description":"Send a crafted request (Burp Repeater equivalent). request_spec keys: url, method, headers, cookies, data.","inputSchema":{"properties":{"request_spec":{"additionalProperties":true,"title":"Request Spec","type":"object"}},"required":["request_spec"],"title":"http_repeaterArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"http_repeaterOutput","type":"object"}},{"name":"http_intruder","description":"Simple Intruder (sniper) fuzzing. Iterates payloads over each param individually.\n        location: query|body|headers|cookie.","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"method":{"default":"GET","title":"Method","type":"string"},"location":{"default":"query","title":"Location","type":"string"},"params":{"default":null,"items":{},"title":"Params","type":"array"},"payloads":{"default":null,"items":{},"title":"Payloads","type":"array"},"base_data":{"additionalProperties":true,"default":null,"title":"Base Data","type":"object"},"max_requests":{"default":100,"title":"Max Requests","type":"integer"}},"required":["url"],"title":"http_intruderArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"http_intruderOutput","type":"object"}},{"name":"burpsuite_alternative_scan","description":"\n        Comprehensive Burp Suite alternative combining HTTP framework and browser agent for complete web security testing.\n        \n        Args:\n            target: Target URL or domain to scan\n            scan_type: Type of scan (comprehensive, spider, passive, active)\n            headless: Run browser in headless mode\n            max_depth: Maximum crawling depth\n            max_pages: Maximum pages to analyze\n            \n        Returns:\n            Comprehensive security assessment results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"scan_type":{"default":"comprehensive","title":"Scan Type","type":"string"},"headless":{"default":true,"title":"Headless","type":"boolean"},"max_depth":{"default":3,"title":"Max Depth","type":"integer"},"max_pages":{"default":50,"title":"Max Pages","type":"integer"}},"required":["target"],"title":"burpsuite_alternative_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"burpsuite_alternative_scanOutput","type":"object"}},{"name":"error_handling_statistics","description":"\n        Get intelligent error handling system statistics and recent error patterns.\n        \n        Returns:\n            Error handling statistics and patterns\n        ","inputSchema":{"properties":{},"title":"error_handling_statisticsArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"error_handling_statisticsOutput","type":"object"}},{"name":"test_error_recovery","description":"\n        Test the intelligent error recovery system with simulated failures.\n        \n        Args:\n            tool_name: Name of tool to simulate error for\n            error_type: Type of error to simulate (timeout, permission_denied, network_unreachable, etc.)\n            target: Target for the simulated test\n            \n        Returns:\n            Recovery strategy and system response\n        ","inputSchema":{"properties":{"tool_name":{"title":"Tool Name","type":"string"},"error_type":{"default":"timeout","title":"Error Type","type":"string"},"target":{"default":"example.com","title":"Target","type":"string"}},"required":["tool_name"],"title":"test_error_recoveryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"test_error_recoveryOutput","type":"object"}}]}} { metadata: undefined }
2025-08-17T15:04:40.323Z [hexstrike-ai] [info] Message from server: {"jsonrpc":"2.0","id":2,"result":{"resources":[]}} { metadata: undefined }
2025-08-17T15:04:40.351Z [hexstrike-ai] [info] Message from client: {"method":"prompts/list","params":{},"jsonrpc":"2.0","id":3} { metadata: undefined }
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f525' in position 1: character maps to <undefined>
Call stack:
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5441, in <module>
    main()
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5433, in main
    mcp.run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\server.py", line 250, in run
    anyio.run(self.run_stdio_async)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_core\_eventloop.py", line 74, in run
    return async_backend.run(func, args, {}, backend_options)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 2316, in run
    return runner.run(wrapper())
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 637, in run_until_complete
    self.run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 604, in run_forever
    self._run_once()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1909, in _run_once
    handle._run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 609, in _handle_message
    await self._handle_request(message, req, session, lifespan_context, raise_exceptions)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 624, in _handle_request
    logger.info("Processing request of type %s", type(req).__name__)
Message: '\x1b[38;5;46m\u2705 Processing request of type %s\x1b[0m'
Arguments: ('ListPromptsRequest',)
2025-08-17T15:04:40.355Z [hexstrike-ai] [info] Message from server: {"jsonrpc":"2.0","id":3,"result":{"prompts":[]}} { metadata: undefined }
2025-08-17T15:05:43.277Z [hexstrike-ai] [info] Message from client: {"method":"tools/call","params":{"name":"nmap_scan","arguments":{"target":"172.16.16.1","scan_type":"-sV -sC","additional_args":"-O --script vuln"}},"jsonrpc":"2.0","id":4} { metadata: undefined }
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f525' in position 1: character maps to <undefined>
Call stack:
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5441, in <module>
    main()
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5433, in main
    mcp.run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\server.py", line 250, in run
    anyio.run(self.run_stdio_async)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_core\_eventloop.py", line 74, in run
    return async_backend.run(func, args, {}, backend_options)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 2316, in run
    return runner.run(wrapper())
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 637, in run_until_complete
    self.run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 604, in run_forever
    self._run_once()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1909, in _run_once
    handle._run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 609, in _handle_message
    await self._handle_request(message, req, session, lifespan_context, raise_exceptions)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 624, in _handle_request
    logger.info("Processing request of type %s", type(req).__name__)
Message: '\x1b[38;5;46m\u2705 Processing request of type %s\x1b[0m'
Arguments: ('CallToolRequest',)
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f525' in position 1: character maps to <undefined>
Call stack:
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5441, in <module>
    main()
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5433, in main
    mcp.run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\server.py", line 250, in run
    anyio.run(self.run_stdio_async)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_core\_eventloop.py", line 74, in run
    return async_backend.run(func, args, {}, backend_options)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 2316, in run
    return runner.run(wrapper())
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 637, in run_until_complete
    self.run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 604, in run_forever
    self._run_once()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1909, in _run_once
    handle._run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 609, in _handle_message
    await self._handle_request(message, req, session, lifespan_context, raise_exceptions)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 646, in _handle_request
    response = await handler(req)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 462, in handler
    results = await func(tool_name, arguments)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\server.py", line 298, in call_tool
    return await self._tool_manager.call_tool(name, arguments, context=context, convert_result=True)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\tools\tool_manager.py", line 83, in call_tool
    return await tool.run(arguments, context=context, convert_result=convert_result)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\tools\base.py", line 98, in run
    result = await self.fn_metadata.call_fn_with_arg_validation(
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\utilities\func_metadata.py", line 89, in call_fn_with_arg_validation
    return fn(**arguments_parsed_dict)
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 303, in nmap_scan
    logger.info(f"{HexStrikeColors.FIRE_RED}\U0001f50d Initiating Nmap scan: {target}{HexStrikeColors.RESET}")
Message: '\x1b[38;5;46m\u2705 \x1b[38;5;202m\U0001f50d Initiating Nmap scan: 172.16.16.1\x1b[0m\x1b[0m'
Arguments: ()
2025-08-17T15:05:43.375Z [hexstrike-ai] [info] Message from client: {"method":"tools/list","params":{},"jsonrpc":"2.0","id":5} { metadata: undefined }
2025-08-17T15:05:43.375Z [hexstrike-ai] [info] Message from client: {"method":"resources/list","params":{},"jsonrpc":"2.0","id":6} { metadata: undefined }
2025-08-17T15:05:48.379Z [hexstrike-ai] [info] Message from client: {"jsonrpc":"2.0","method":"notifications/cancelled","params":{"requestId":5,"reason":"McpError: MCP error -32001: Request timed out"}} { metadata: undefined }
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f525' in position 1: character maps to <undefined>
Call stack:
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5441, in <module>
    main()
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5433, in main
    mcp.run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\server.py", line 250, in run
    anyio.run(self.run_stdio_async)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_core\_eventloop.py", line 74, in run
    return async_backend.run(func, args, {}, backend_options)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 2316, in run
    return runner.run(wrapper())
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 637, in run_until_complete
    self.run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 604, in run_forever
    self._run_once()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1909, in _run_once
    handle._run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 609, in _handle_message
    await self._handle_request(message, req, session, lifespan_context, raise_exceptions)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 646, in _handle_request
    response = await handler(req)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 462, in handler
    results = await func(tool_name, arguments)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\server.py", line 298, in call_tool
    return await self._tool_manager.call_tool(name, arguments, context=context, convert_result=True)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\tools\tool_manager.py", line 83, in call_tool
    return await tool.run(arguments, context=context, convert_result=convert_result)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\tools\base.py", line 98, in run
    result = await self.fn_metadata.call_fn_with_arg_validation(
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\utilities\func_metadata.py", line 89, in call_fn_with_arg_validation
    return fn(**arguments_parsed_dict)
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 310, in nmap_scan
    logger.info(f"{HexStrikeColors.SUCCESS}\u2705 Nmap scan completed successfully for {target}{HexStrikeColors.RESET}")
Message: '\x1b[38;5;46m\u2705 \x1b[38;5;46m\u2705 Nmap scan completed successfully for 172.16.16.1\x1b[0m\x1b[0m'
Arguments: ()
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f525' in position 1: character maps to <undefined>
Call stack:
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5441, in <module>
    main()
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5433, in main
    mcp.run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\server.py", line 250, in run
    anyio.run(self.run_stdio_async)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_core\_eventloop.py", line 74, in run
    return async_backend.run(func, args, {}, backend_options)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 2316, in run
    return runner.run(wrapper())
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 637, in run_until_complete
    self.run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 604, in run_forever
    self._run_once()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1909, in _run_once
    handle._run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 609, in _handle_message
    await self._handle_request(message, req, session, lifespan_context, raise_exceptions)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 624, in _handle_request
    logger.info("Processing request of type %s", type(req).__name__)
Message: '\x1b[38;5;46m\u2705 Processing request of type %s\x1b[0m'
Arguments: ('ListToolsRequest',)
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f525' in position 1: character maps to <undefined>
Call stack:
2025-08-17T15:07:15.129Z [hexstrike-ai] [info] Message from server: {"jsonrpc":"2.0","id":4,"result":{"content":[{"type":"text","text":"{\n  \"execution_time\": 91.76683616638184,\n  \"partial_results\": false,\n  \"recovery_info\": {\n    \"attempts_made\": 1,\n    \"recovery_applied\": false,\n    \"recovery_history\": []\n  },\n  \"return_code\": 0,\n  \"stderr\": \"\",\n  \"stdout\": \"Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-17 15:05 UTC\\nNmap scan report for 172.16.16.1\\nHost is up (0.0018s latency).\\nNot shown: 997 filtered tcp ports (no-response)\\nPORT     STATE SERVICE    VERSION\\n22/tcp   open  tcpwrapped\\n80/tcp   open  tcpwrapped\\n|_http-dombased-xss: Couldn't find any DOM based XSS.\\n|_http-vuln-cve2014-3704: ERROR: Script execution failed (use -d to debug)\\n|_http-stored-xss: Couldn't find any stored XSS vulnerabilities.\\n|_http-aspnet-debug: ERROR: Script execution failed (use -d to debug)\\n|_http-csrf: Couldn't find any CSRF vulnerabilities.\\n4443/tcp open  tcpwrapped\\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\\nDevice type: switch|phone|storage-misc|game console\\nRunning (JUST GUESSING): Cisco embedded (93%), Sony Ericsson embedded (90%), Nokia Symbian OS (89%), Apple embedded (88%), Sony embedded (88%)\\nOS CPE: cpe:/h:cisco:sf300 cpe:/h:cisco:sg300 cpe:/h:sonyericsson:w705 cpe:/h:sonyericsson:w715 cpe:/o:nokia:symbian_os cpe:/h:sony:playstation_3\\nAggressive OS guesses: Cisco SF300 or SG300 switch (93%), Sony Ericsson W705 or W715 Walkman mobile phone (90%), Nokia 3600i mobile phone (89%), Apple Time Capsule NAS device (88%), Sony PlayStation 3 game console (88%), Cisco SG 500 switch (86%)\\nNo exact OS matches for host (test conditions non-ideal).\\n\\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\\nNmap done: 1 IP address (1 host up) scanned in 91.68 seconds\\n\",\n  \"success\": true,\n  \"timed_out\": false,\n  \"timestamp\": \"2025-08-17T15:07:15.058287\"\n}"}],"structuredContent":{"result":{"execution_time":91.76683616638184,"partial_results":false,"recovery_info":{"attempts_made":1,"recovery_applied":false,"recovery_history":[]},"return_code":0,"stderr":"","stdout":"Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-17 15:05 UTC\nNmap scan report for 172.16.16.1\nHost is up (0.0018s latency).\nNot shown: 997 filtered tcp ports (no-response)\nPORT     STATE SERVICE    VERSION\n22/tcp   open  tcpwrapped\n80/tcp   open  tcpwrapped\n|_http-dombased-xss: Couldn't find any DOM based XSS.\n|_http-vuln-cve2014-3704: ERROR: Script execution failed (use -d to debug)\n|_http-stored-xss: Couldn't find any stored XSS vulnerabilities.\n|_http-aspnet-debug: ERROR: Script execution failed (use -d to debug)\n|_http-csrf: Couldn't find any CSRF vulnerabilities.\n4443/tcp open  tcpwrapped\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: switch|phone|storage-misc|game console\nRunning (JUST GUESSING): Cisco embedded (93%), Sony Ericsson embedded (90%), Nokia Symbian OS (89%), Apple embedded (88%), Sony embedded (88%)\nOS CPE: cpe:/h:cisco:sf300 cpe:/h:cisco:sg300 cpe:/h:sonyericsson:w705 cpe:/h:sonyericsson:w715 cpe:/o:nokia:symbian_os cpe:/h:sony:playstation_3\nAggressive OS guesses: Cisco SF300 or SG300 switch (93%), Sony Ericsson W705 or W715 Walkman mobile phone (90%), Nokia 3600i mobile phone (89%), Apple Time Capsule NAS device (88%), Sony PlayStation 3 game console (88%), Cisco SG 500 switch (86%)\nNo exact OS matches for host (test conditions non-ideal).\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 91.68 seconds\n","success":true,"timed_out":false,"timestamp":"2025-08-17T15:07:15.058287"}},"isError":false}} { metadata: undefined }
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5441, in <module>
    main()
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5433, in main
    mcp.run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\server.py", line 250, in run
    anyio.run(self.run_stdio_async)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_core\_eventloop.py", line 74, in run
    return async_backend.run(func, args, {}, backend_options)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 2316, in run
    return runner.run(wrapper())
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 637, in run_until_complete
    self.run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 604, in run_forever
    self._run_once()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1909, in _run_once
    handle._run()
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 609, in _handle_message
    await self._handle_request(message, req, session, lifespan_context, raise_exceptions)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\lowlevel\server.py", line 624, in _handle_request
    logger.info("Processing request of type %s", type(req).__name__)
Message: '\x1b[38;5;46m\u2705 Processing request of type %s\x1b[0m'
Arguments: ('ListResourcesRequest',)
2025-08-17T15:07:15.140Z [hexstrike-ai] [info] Message from server: {"jsonrpc":"2.0","id":5,"result":{"tools":[{"name":"nmap_scan","description":"\n        Execute an enhanced Nmap scan against a target with real-time logging.\n        \n        Args:\n            target: The IP address or hostname to scan\n            scan_type: Scan type (e.g., -sV for version detection, -sC for scripts)\n            ports: Comma-separated list of ports or port ranges\n            additional_args: Additional Nmap arguments\n            \n        Returns:\n            Scan results with enhanced telemetry\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"scan_type":{"default":"-sV","title":"Scan Type","type":"string"},"ports":{"default":"","title":"Ports","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"nmap_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"nmap_scanOutput","type":"object"}},{"name":"gobuster_scan","description":"\n        Execute Gobuster to find directories, DNS subdomains, or virtual hosts with enhanced logging.\n        \n        Args:\n            url: The target URL\n            mode: Scan mode (dir, dns, fuzz, vhost)\n            wordlist: Path to wordlist file\n            additional_args: Additional Gobuster arguments\n            \n        Returns:\n            Scan results with enhanced telemetry\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"mode":{"default":"dir","title":"Mode","type":"string"},"wordlist":{"default":"/usr/share/wordlists/dirb/common.txt","title":"Wordlist","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"gobuster_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"gobuster_scanOutput","type":"object"}},{"name":"nuclei_scan","description":"\n        Execute Nuclei vulnerability scanner with enhanced logging and real-time progress.\n        \n        Args:\n            target: The target URL or IP\n            severity: Filter by severity (critical,high,medium,low,info)\n            tags: Filter by tags (e.g. cve,rce,lfi)\n            template: Custom template path\n            additional_args: Additional Nuclei arguments\n            \n        Returns:\n            Scan results with discovered vulnerabilities and telemetry\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"severity":{"default":"","title":"Severity","type":"string"},"tags":{"default":"","title":"Tags","type":"string"},"template":{"default":"","title":"Template","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"nuclei_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"nuclei_scanOutput","type":"object"}},{"name":"prowler_scan","description":"\n        Execute Prowler for comprehensive cloud security assessment.\n        \n        Args:\n            provider: Cloud provider (aws, azure, gcp)\n            profile: AWS profile to use\n            region: Specific region to scan\n            checks: Specific checks to run\n            output_dir: Directory to save results\n            output_format: Output format (json, csv, html)\n            additional_args: Additional Prowler arguments\n            \n        Returns:\n            Cloud security assessment results\n        ","inputSchema":{"properties":{"provider":{"default":"aws","title":"Provider","type":"string"},"profile":{"default":"default","title":"Profile","type":"string"},"region":{"default":"","title":"Region","type":"string"},"checks":{"default":"","title":"Checks","type":"string"},"output_dir":{"default":"/tmp/prowler_output","title":"Output Dir","type":"string"},"output_format":{"default":"json","title":"Output Format","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"prowler_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"prowler_scanOutput","type":"object"}},{"name":"trivy_scan","description":"\n        Execute Trivy for container and filesystem vulnerability scanning.\n        \n        Args:\n            scan_type: Type of scan (image, fs, repo, config)\n            target: Target to scan (image name, directory, repository)\n            output_format: Output format (json, table, sarif)\n            severity: Severity filter (UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL)\n            output_file: File to save results\n            additional_args: Additional Trivy arguments\n            \n        Returns:\n            Vulnerability scan results\n        ","inputSchema":{"properties":{"scan_type":{"default":"image","title":"Scan Type","type":"string"},"target":{"default":"","title":"Target","type":"string"},"output_format":{"default":"json","title":"Output Format","type":"string"},"severity":{"default":"","title":"Severity","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"trivy_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"trivy_scanOutput","type":"object"}},{"name":"scout_suite_assessment","description":"\n        Execute Scout Suite for multi-cloud security assessment.\n        \n        Args:\n            provider: Cloud provider (aws, azure, gcp, aliyun, oci)\n            profile: AWS profile to use\n            report_dir: Directory to save reports\n            services: Specific services to assess\n            exceptions: Exceptions file path\n            additional_args: Additional Scout Suite arguments\n            \n        Returns:\n            Multi-cloud security assessment results\n        ","inputSchema":{"properties":{"provider":{"default":"aws","title":"Provider","type":"string"},"profile":{"default":"default","title":"Profile","type":"string"},"report_dir":{"default":"/tmp/scout-suite","title":"Report Dir","type":"string"},"services":{"default":"","title":"Services","type":"string"},"exceptions":{"default":"","title":"Exceptions","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"scout_suite_assessmentArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"scout_suite_assessmentOutput","type":"object"}},{"name":"cloudmapper_analysis","description":"\n        Execute CloudMapper for AWS network visualization and security analysis.\n        \n        Args:\n            action: Action to perform (collect, prepare, webserver, find_admins, etc.)\n            account: AWS account to analyze\n            config: Configuration file path\n            additional_args: Additional CloudMapper arguments\n            \n        Returns:\n            AWS network visualization and security analysis results\n        ","inputSchema":{"properties":{"action":{"default":"collect","title":"Action","type":"string"},"account":{"default":"","title":"Account","type":"string"},"config":{"default":"config.json","title":"Config","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"cloudmapper_analysisArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"cloudmapper_analysisOutput","type":"object"}},{"name":"pacu_exploitation","description":"\n        Execute Pacu for AWS exploitation framework.\n        \n        Args:\n            session_name: Pacu session name\n            modules: Comma-separated list of modules to run\n            data_services: Data services to enumerate\n            regions: AWS regions to target\n            additional_args: Additional Pacu arguments\n            \n        Returns:\n            AWS exploitation framework results\n        ","inputSchema":{"properties":{"session_name":{"default":"hexstrike_session","title":"Session Name","type":"string"},"modules":{"default":"","title":"Modules","type":"string"},"data_services":{"default":"","title":"Data Services","type":"string"},"regions":{"default":"","title":"Regions","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"pacu_exploitationArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"pacu_exploitationOutput","type":"object"}},{"name":"kube_hunter_scan","description":"\n        Execute kube-hunter for Kubernetes penetration testing.\n        \n        Args:\n            target: Specific target to scan\n            remote: Remote target to scan\n            cidr: CIDR range to scan\n            interface: Network interface to scan\n            active: Enable active hunting (potentially harmful)\n            report: Report format (json, yaml)\n            additional_args: Additional kube-hunter arguments\n            \n        Returns:\n            Kubernetes penetration testing results\n        ","inputSchema":{"properties":{"target":{"default":"","title":"Target","type":"string"},"remote":{"default":"","title":"Remote","type":"string"},"cidr":{"default":"","title":"Cidr","type":"string"},"interface":{"default":"","title":"Interface","type":"string"},"active":{"default":false,"title":"Active","type":"boolean"},"report":{"default":"json","title":"Report","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"kube_hunter_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"kube_hunter_scanOutput","type":"object"}},{"name":"kube_bench_cis","description":"\n        Execute kube-bench for CIS Kubernetes benchmark checks.\n        \n        Args:\n            targets: Targets to check (master, node, etcd, policies)\n            version: Kubernetes version\n            config_dir: Configuration directory\n            output_format: Output format (json, yaml)\n            additional_args: Additional kube-bench arguments\n            \n        Returns:\n            CIS Kubernetes benchmark results\n        ","inputSchema":{"properties":{"targets":{"default":"","title":"Targets","type":"string"},"version":{"default":"","title":"Version","type":"string"},"config_dir":{"default":"","title":"Config Dir","type":"string"},"output_format":{"default":"json","title":"Output Format","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"kube_bench_cisArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"kube_bench_cisOutput","type":"object"}},{"name":"docker_bench_security_scan","description":"\n        Execute Docker Bench for Security for Docker security assessment.\n        \n        Args:\n            checks: Specific checks to run\n            exclude: Checks to exclude\n            output_file: Output file path\n            additional_args: Additional Docker Bench arguments\n            \n        Returns:\n            Docker security assessment results\n        ","inputSchema":{"properties":{"checks":{"default":"","title":"Checks","type":"string"},"exclude":{"default":"","title":"Exclude","type":"string"},"output_file":{"default":"/tmp/docker-bench-results.json","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"docker_bench_security_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"docker_bench_security_scanOutput","type":"object"}},{"name":"clair_vulnerability_scan","description":"\n        Execute Clair for container vulnerability analysis.\n        \n        Args:\n            image: Container image to scan\n            config: Clair configuration file\n            output_format: Output format (json, yaml)\n            additional_args: Additional Clair arguments\n            \n        Returns:\n            Container vulnerability analysis results\n        ","inputSchema":{"properties":{"image":{"title":"Image","type":"string"},"config":{"default":"/etc/clair/config.yaml","title":"Config","type":"string"},"output_format":{"default":"json","title":"Output Format","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["image"],"title":"clair_vulnerability_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"clair_vulnerability_scanOutput","type":"object"}},{"name":"falco_runtime_monitoring","description":"\n        Execute Falco for runtime security monitoring.\n        \n        Args:\n            config_file: Falco configuration file\n            rules_file: Custom rules file\n            output_format: Output format (json, text)\n            duration: Monitoring duration in seconds\n            additional_args: Additional Falco arguments\n            \n        Returns:\n            Runtime security monitoring results\n        ","inputSchema":{"properties":{"config_file":{"default":"/etc/falco/falco.yaml","title":"Config File","type":"string"},"rules_file":{"default":"","title":"Rules File","type":"string"},"output_format":{"default":"json","title":"Output Format","type":"string"},"duration":{"default":60,"title":"Duration","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"falco_runtime_monitoringArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"falco_runtime_monitoringOutput","type":"object"}},{"name":"checkov_iac_scan","description":"\n        Execute Checkov for infrastructure as code security scanning.\n        \n        Args:\n            directory: Directory to scan\n            framework: Framework to scan (terraform, cloudformation, kubernetes, etc.)\n            check: Specific check to run\n            skip_check: Check to skip\n            output_format: Output format (json, yaml, cli)\n            additional_args: Additional Checkov arguments\n            \n        Returns:\n            Infrastructure as code security scanning results\n        ","inputSchema":{"properties":{"directory":{"default":".","title":"Directory","type":"string"},"framework":{"default":"","title":"Framework","type":"string"},"check":{"default":"","title":"Check","type":"string"},"skip_check":{"default":"","title":"Skip Check","type":"string"},"output_format":{"default":"json","title":"Output Format","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"checkov_iac_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"checkov_iac_scanOutput","type":"object"}},{"name":"terrascan_iac_scan","description":"\n        Execute Terrascan for infrastructure as code security scanning.\n        \n        Args:\n            scan_type: Type of scan (all, terraform, k8s, etc.)\n            iac_dir: Infrastructure as code directory\n            policy_type: Policy type to use\n            output_format: Output format (json, yaml, xml)\n            severity: Severity filter (high, medium, low)\n            additional_args: Additional Terrascan arguments\n            \n        Returns:\n            Infrastructure as code security scanning results\n        ","inputSchema":{"properties":{"scan_type":{"default":"all","title":"Scan Type","type":"string"},"iac_dir":{"default":".","title":"Iac Dir","type":"string"},"policy_type":{"default":"","title":"Policy Type","type":"string"},"output_format":{"default":"json","title":"Output Format","type":"string"},"severity":{"default":"","title":"Severity","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"terrascan_iac_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"terrascan_iac_scanOutput","type":"object"}},{"name":"create_file","description":"\n        Create a file with specified content on the HexStrike server.\n        \n        Args:\n            filename: Name of the file to create\n            content: Content to write to the file\n            binary: Whether the content is binary data\n            \n        Returns:\n            File creation results\n        ","inputSchema":{"properties":{"filename":{"title":"Filename","type":"string"},"content":{"title":"Content","type":"string"},"binary":{"default":false,"title":"Binary","type":"boolean"}},"required":["filename","content"],"title":"create_fileArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"create_fileOutput","type":"object"}},{"name":"modify_file","description":"\n        Modify an existing file on the HexStrike server.\n        \n        Args:\n            filename: Name of the file to modify\n            content: Content to write or append\n            append: Whether to append to the file (True) or overwrite (False)\n            \n        Returns:\n            File modification results\n        ","inputSchema":{"properties":{"filename":{"title":"Filename","type":"string"},"content":{"title":"Content","type":"string"},"append":{"default":false,"title":"Append","type":"boolean"}},"required":["filename","content"],"title":"modify_fileArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"modify_fileOutput","type":"object"}},{"name":"delete_file","description":"\n        Delete a file or directory on the HexStrike server.\n        \n        Args:\n            filename: Name of the file or directory to delete\n            \n        Returns:\n            File deletion results\n        ","inputSchema":{"properties":{"filename":{"title":"Filename","type":"string"}},"required":["filename"],"title":"delete_fileArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"delete_fileOutput","type":"object"}},{"name":"list_files","description":"\n        List files in a directory on the HexStrike server.\n        \n        Args:\n            directory: Directory to list (relative to server's base directory)\n            \n        Returns:\n            Directory listing results\n        ","inputSchema":{"properties":{"directory":{"default":".","title":"Directory","type":"string"}},"title":"list_filesArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"list_filesOutput","type":"object"}},{"name":"generate_payload","description":"\n        Generate large payloads for testing and exploitation.\n        \n        Args:\n            payload_type: Type of payload (buffer, cyclic, random)\n            size: Size of the payload in bytes\n            pattern: Pattern to use for buffer payloads\n            filename: Custom filename (auto-generated if empty)\n            \n        Returns:\n            Payload generation results\n        ","inputSchema":{"properties":{"payload_type":{"default":"buffer","title":"Payload Type","type":"string"},"size":{"default":1024,"title":"Size","type":"integer"},"pattern":{"default":"A","title":"Pattern","type":"string"},"filename":{"default":"","title":"Filename","type":"string"}},"title":"generate_payloadArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"generate_payloadOutput","type":"object"}},{"name":"install_python_package","description":"\n        Install a Python package in a virtual environment on the HexStrike server.\n        \n        Args:\n            package: Name of the Python package to install\n            env_name: Name of the virtual environment\n            \n        Returns:\n            Package installation results\n        ","inputSchema":{"properties":{"package":{"title":"Package","type":"string"},"env_name":{"default":"default","title":"Env Name","type":"string"}},"required":["package"],"title":"install_python_packageArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"install_python_packageOutput","type":"object"}},{"name":"execute_python_script","description":"\n        Execute a Python script in a virtual environment on the HexStrike server.\n        \n        Args:\n            script: Python script content to execute\n            env_name: Name of the virtual environment\n            filename: Custom script filename (auto-generated if empty)\n            \n        Returns:\n            Script execution results\n        ","inputSchema":{"properties":{"script":{"title":"Script","type":"string"},"env_name":{"default":"default","title":"Env Name","type":"string"},"filename":{"default":"","title":"Filename","type":"string"}},"required":["script"],"title":"execute_python_scriptArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"execute_python_scriptOutput","type":"object"}},{"name":"dirb_scan","description":"\n        Execute Dirb for directory brute forcing with enhanced logging.\n        \n        Args:\n            url: The target URL\n            wordlist: Path to wordlist file\n            additional_args: Additional Dirb arguments\n            \n        Returns:\n            Scan results with enhanced telemetry\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"wordlist":{"default":"/usr/share/wordlists/dirb/common.txt","title":"Wordlist","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"dirb_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"dirb_scanOutput","type":"object"}},{"name":"nikto_scan","description":"\n        Execute Nikto web vulnerability scanner with enhanced logging.\n        \n        Args:\n            target: The target URL or IP\n            additional_args: Additional Nikto arguments\n            \n        Returns:\n            Scan results with discovered vulnerabilities\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"nikto_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"nikto_scanOutput","type":"object"}},{"name":"sqlmap_scan","description":"\n        Execute SQLMap for SQL injection testing with enhanced logging.\n        \n        Args:\n            url: The target URL\n            data: POST data for testing\n            additional_args: Additional SQLMap arguments\n            \n        Returns:\n            SQL injection test results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"data":{"default":"","title":"Data","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"sqlmap_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"sqlmap_scanOutput","type":"object"}},{"name":"metasploit_run","description":"\n        Execute a Metasploit module with enhanced logging.\n        \n        Args:\n            module: The Metasploit module to use\n            options: Dictionary of module options\n            \n        Returns:\n            Metasploit execution results\n        ","inputSchema":{"properties":{"module":{"title":"Module","type":"string"},"options":{"additionalProperties":true,"default":{},"title":"Options","type":"object"}},"required":["module"],"title":"metasploit_runArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"metasploit_runOutput","type":"object"}},{"name":"hydra_attack","description":"\n        Execute Hydra for password brute forcing with enhanced logging.\n        \n        Args:\n            target: The target IP or hostname\n            service: The service to attack (ssh, ftp, http, etc.)\n            username: Single username to test\n            username_file: File containing usernames\n            password: Single password to test\n            password_file: File containing passwords\n            additional_args: Additional Hydra arguments\n            \n        Returns:\n            Brute force attack results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"service":{"title":"Service","type":"string"},"username":{"default":"","title":"Username","type":"string"},"username_file":{"default":"","title":"Username File","type":"string"},"password":{"default":"","title":"Password","type":"string"},"password_file":{"default":"","title":"Password File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target","service"],"title":"hydra_attackArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"hydra_attackOutput","type":"object"}},{"name":"john_crack","description":"\n        Execute John the Ripper for password cracking with enhanced logging.\n        \n        Args:\n            hash_file: File containing password hashes\n            wordlist: Wordlist file to use\n            format_type: Hash format type\n            additional_args: Additional John arguments\n            \n        Returns:\n            Password cracking results\n        ","inputSchema":{"properties":{"hash_file":{"title":"Hash File","type":"string"},"wordlist":{"default":"/usr/share/wordlists/rockyou.txt","title":"Wordlist","type":"string"},"format_type":{"default":"","title":"Format Type","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["hash_file"],"title":"john_crackArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"john_crackOutput","type":"object"}},{"name":"wpscan_analyze","description":"\n        Execute WPScan for WordPress vulnerability scanning with enhanced logging.\n        \n        Args:\n            url: The WordPress site URL\n            additional_args: Additional WPScan arguments\n            \n        Returns:\n            WordPress vulnerability scan results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"wpscan_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"wpscan_analyzeOutput","type":"object"}},{"name":"enum4linux_scan","description":"\n        Execute Enum4linux for SMB enumeration with enhanced logging.\n        \n        Args:\n            target: The target IP address\n            additional_args: Additional Enum4linux arguments\n            \n        Returns:\n            SMB enumeration results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"additional_args":{"default":"-a","title":"Additional Args","type":"string"}},"required":["target"],"title":"enum4linux_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"enum4linux_scanOutput","type":"object"}},{"name":"ffuf_scan","description":"\n        Execute FFuf for web fuzzing with enhanced logging.\n        \n        Args:\n            url: The target URL\n            wordlist: Wordlist file to use\n            mode: Fuzzing mode (directory, vhost, parameter)\n            match_codes: HTTP status codes to match\n            additional_args: Additional FFuf arguments\n            \n        Returns:\n            Web fuzzing results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"wordlist":{"default":"/usr/share/wordlists/dirb/common.txt","title":"Wordlist","type":"string"},"mode":{"default":"directory","title":"Mode","type":"string"},"match_codes":{"default":"200,204,301,302,307,401,403","title":"Match Codes","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"ffuf_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ffuf_scanOutput","type":"object"}},{"name":"netexec_scan","description":"\n        Execute NetExec (formerly CrackMapExec) for network enumeration with enhanced logging.\n        \n        Args:\n            target: The target IP or network\n            protocol: Protocol to use (smb, ssh, winrm, etc.)\n            username: Username for authentication\n            password: Password for authentication\n            hash_value: Hash for pass-the-hash attacks\n            module: NetExec module to execute\n            additional_args: Additional NetExec arguments\n            \n        Returns:\n            Network enumeration results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"protocol":{"default":"smb","title":"Protocol","type":"string"},"username":{"default":"","title":"Username","type":"string"},"password":{"default":"","title":"Password","type":"string"},"hash_value":{"default":"","title":"Hash Value","type":"string"},"module":{"default":"","title":"Module","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"netexec_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"netexec_scanOutput","type":"object"}},{"name":"amass_scan","description":"\n        Execute Amass for subdomain enumeration with enhanced logging.\n        \n        Args:\n            domain: The target domain\n            mode: Amass mode (enum, intel, viz)\n            additional_args: Additional Amass arguments\n            \n        Returns:\n            Subdomain enumeration results\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"mode":{"default":"enum","title":"Mode","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"amass_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"amass_scanOutput","type":"object"}},{"name":"hashcat_crack","description":"\n        Execute Hashcat for advanced password cracking with enhanced logging.\n        \n        Args:\n            hash_file: File containing password hashes\n            hash_type: Hash type number for Hashcat\n            attack_mode: Attack mode (0=dict, 1=combo, 3=mask, etc.)\n            wordlist: Wordlist file for dictionary attacks\n            mask: Mask for mask attacks\n            additional_args: Additional Hashcat arguments\n            \n        Returns:\n            Password cracking results\n        ","inputSchema":{"properties":{"hash_file":{"title":"Hash File","type":"string"},"hash_type":{"title":"Hash Type","type":"string"},"attack_mode":{"default":"0","title":"Attack Mode","type":"string"},"wordlist":{"default":"/usr/share/wordlists/rockyou.txt","title":"Wordlist","type":"string"},"mask":{"default":"","title":"Mask","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["hash_file","hash_type"],"title":"hashcat_crackArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"hashcat_crackOutput","type":"object"}},{"name":"subfinder_scan","description":"\n        Execute Subfinder for passive subdomain enumeration with enhanced logging.\n        \n        Args:\n            domain: The target domain\n            silent: Run in silent mode\n            all_sources: Use all sources\n            additional_args: Additional Subfinder arguments\n            \n        Returns:\n            Passive subdomain enumeration results\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"silent":{"default":true,"title":"Silent","type":"boolean"},"all_sources":{"default":false,"title":"All Sources","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"subfinder_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"subfinder_scanOutput","type":"object"}},{"name":"smbmap_scan","description":"\n        Execute SMBMap for SMB share enumeration with enhanced logging.\n        \n        Args:\n            target: The target IP address\n            username: Username for authentication\n            password: Password for authentication\n            domain: Domain for authentication\n            additional_args: Additional SMBMap arguments\n            \n        Returns:\n            SMB share enumeration results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"username":{"default":"","title":"Username","type":"string"},"password":{"default":"","title":"Password","type":"string"},"domain":{"default":"","title":"Domain","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"smbmap_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"smbmap_scanOutput","type":"object"}},{"name":"rustscan_fast_scan","description":"\n        Execute Rustscan for ultra-fast port scanning with enhanced logging.\n        \n        Args:\n            target: The target IP address or hostname\n            ports: Specific ports to scan (e.g., \"22,80,443\")\n            ulimit: File descriptor limit\n            batch_size: Batch size for scanning\n            timeout: Timeout in milliseconds\n            scripts: Run Nmap scripts on discovered ports\n            additional_args: Additional Rustscan arguments\n            \n        Returns:\n            Ultra-fast port scanning results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"ports":{"default":"","title":"Ports","type":"string"},"ulimit":{"default":5000,"title":"Ulimit","type":"integer"},"batch_size":{"default":4500,"title":"Batch Size","type":"integer"},"timeout":{"default":1500,"title":"Timeout","type":"integer"},"scripts":{"default":false,"title":"Scripts","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"rustscan_fast_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"rustscan_fast_scanOutput","type":"object"}},{"name":"masscan_high_speed","description":"\n        Execute Masscan for high-speed Internet-scale port scanning with intelligent rate limiting.\n        \n        Args:\n            target: The target IP address or CIDR range\n            ports: Port range to scan\n            rate: Packets per second rate\n            interface: Network interface to use\n            router_mac: Router MAC address\n            source_ip: Source IP address\n            banners: Enable banner grabbing\n            additional_args: Additional Masscan arguments\n            \n        Returns:\n            High-speed port scanning results with intelligent rate limiting\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"ports":{"default":"1-65535","title":"Ports","type":"string"},"rate":{"default":1000,"title":"Rate","type":"integer"},"interface":{"default":"","title":"Interface","type":"string"},"router_mac":{"default":"","title":"Router Mac","type":"string"},"source_ip":{"default":"","title":"Source Ip","type":"string"},"banners":{"default":false,"title":"Banners","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"masscan_high_speedArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"masscan_high_speedOutput","type":"object"}},{"name":"nmap_advanced_scan","description":"\n        Execute advanced Nmap scans with custom NSE scripts and optimized timing.\n        \n        Args:\n            target: The target IP address or hostname\n            scan_type: Nmap scan type (e.g., -sS, -sT, -sU)\n            ports: Specific ports to scan\n            timing: Timing template (T0-T5)\n            nse_scripts: Custom NSE scripts to run\n            os_detection: Enable OS detection\n            version_detection: Enable version detection\n            aggressive: Enable aggressive scanning\n            stealth: Enable stealth mode\n            additional_args: Additional Nmap arguments\n            \n        Returns:\n            Advanced Nmap scanning results with custom NSE scripts\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"scan_type":{"default":"-sS","title":"Scan Type","type":"string"},"ports":{"default":"","title":"Ports","type":"string"},"timing":{"default":"T4","title":"Timing","type":"string"},"nse_scripts":{"default":"","title":"Nse Scripts","type":"string"},"os_detection":{"default":false,"title":"Os Detection","type":"boolean"},"version_detection":{"default":false,"title":"Version Detection","type":"boolean"},"aggressive":{"default":false,"title":"Aggressive","type":"boolean"},"stealth":{"default":false,"title":"Stealth","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"nmap_advanced_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"nmap_advanced_scanOutput","type":"object"}},{"name":"autorecon_comprehensive","description":"\n        Execute AutoRecon for comprehensive automated reconnaissance.\n        \n        Args:\n            target: The target IP address or hostname\n            output_dir: Output directory for results\n            port_scans: Port scan configuration\n            service_scans: Service scan configuration\n            heartbeat: Heartbeat interval in seconds\n            timeout: Timeout for individual scans\n            additional_args: Additional AutoRecon arguments\n            \n        Returns:\n            Comprehensive automated reconnaissance results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"output_dir":{"default":"/tmp/autorecon","title":"Output Dir","type":"string"},"port_scans":{"default":"top-100-ports","title":"Port Scans","type":"string"},"service_scans":{"default":"default","title":"Service Scans","type":"string"},"heartbeat":{"default":60,"title":"Heartbeat","type":"integer"},"timeout":{"default":300,"title":"Timeout","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"autorecon_comprehensiveArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"autorecon_comprehensiveOutput","type":"object"}},{"name":"enum4linux_ng_advanced","description":"\n        Execute Enum4linux-ng for advanced SMB enumeration with enhanced logging.\n        \n        Args:\n            target: The target IP address\n            username: Username for authentication\n            password: Password for authentication\n            domain: Domain for authentication\n            shares: Enumerate shares\n            users: Enumerate users\n            groups: Enumerate groups\n            policy: Enumerate policies\n            additional_args: Additional Enum4linux-ng arguments\n            \n        Returns:\n            Advanced SMB enumeration results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"username":{"default":"","title":"Username","type":"string"},"password":{"default":"","title":"Password","type":"string"},"domain":{"default":"","title":"Domain","type":"string"},"shares":{"default":true,"title":"Shares","type":"boolean"},"users":{"default":true,"title":"Users","type":"boolean"},"groups":{"default":true,"title":"Groups","type":"boolean"},"policy":{"default":true,"title":"Policy","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"enum4linux_ng_advancedArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"enum4linux_ng_advancedOutput","type":"object"}},{"name":"rpcclient_enumeration","description":"\n        Execute rpcclient for RPC enumeration with enhanced logging.\n        \n        Args:\n            target: The target IP address\n            username: Username for authentication\n            password: Password for authentication\n            domain: Domain for authentication\n            commands: Semicolon-separated RPC commands\n            additional_args: Additional rpcclient arguments\n            \n        Returns:\n            RPC enumeration results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"username":{"default":"","title":"Username","type":"string"},"password":{"default":"","title":"Password","type":"string"},"domain":{"default":"","title":"Domain","type":"string"},"commands":{"default":"enumdomusers;enumdomgroups;querydominfo","title":"Commands","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"rpcclient_enumerationArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"rpcclient_enumerationOutput","type":"object"}},{"name":"nbtscan_netbios","description":"\n        Execute nbtscan for NetBIOS name scanning with enhanced logging.\n        \n        Args:\n            target: The target IP address or range\n            verbose: Enable verbose output\n            timeout: Timeout in seconds\n            additional_args: Additional nbtscan arguments\n            \n        Returns:\n            NetBIOS name scanning results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"verbose":{"default":false,"title":"Verbose","type":"boolean"},"timeout":{"default":2,"title":"Timeout","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"nbtscan_netbiosArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"nbtscan_netbiosOutput","type":"object"}},{"name":"arp_scan_discovery","description":"\n        Execute arp-scan for network discovery with enhanced logging.\n        \n        Args:\n            target: The target IP range (if not using local_network)\n            interface: Network interface to use\n            local_network: Scan local network\n            timeout: Timeout in milliseconds\n            retry: Number of retries\n            additional_args: Additional arp-scan arguments\n            \n        Returns:\n            Network discovery results via ARP scanning\n        ","inputSchema":{"properties":{"target":{"default":"","title":"Target","type":"string"},"interface":{"default":"","title":"Interface","type":"string"},"local_network":{"default":false,"title":"Local Network","type":"boolean"},"timeout":{"default":500,"title":"Timeout","type":"integer"},"retry":{"default":3,"title":"Retry","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"arp_scan_discoveryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"arp_scan_discoveryOutput","type":"object"}},{"name":"responder_credential_harvest","description":"\n        Execute Responder for credential harvesting with enhanced logging.\n        \n        Args:\n            interface: Network interface to use\n            analyze: Analyze mode only\n            wpad: Enable WPAD rogue proxy\n            force_wpad_auth: Force WPAD authentication\n            fingerprint: Fingerprint mode\n            duration: Duration to run in seconds\n            additional_args: Additional Responder arguments\n            \n        Returns:\n            Credential harvesting results\n        ","inputSchema":{"properties":{"interface":{"default":"eth0","title":"Interface","type":"string"},"analyze":{"default":false,"title":"Analyze","type":"boolean"},"wpad":{"default":true,"title":"Wpad","type":"boolean"},"force_wpad_auth":{"default":false,"title":"Force Wpad Auth","type":"boolean"},"fingerprint":{"default":false,"title":"Fingerprint","type":"boolean"},"duration":{"default":300,"title":"Duration","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"responder_credential_harvestArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"responder_credential_harvestOutput","type":"object"}},{"name":"volatility_analyze","description":"\n        Execute Volatility for memory forensics analysis with enhanced logging.\n        \n        Args:\n            memory_file: Path to memory dump file\n            plugin: Volatility plugin to use\n            profile: Memory profile to use\n            additional_args: Additional Volatility arguments\n            \n        Returns:\n            Memory forensics analysis results\n        ","inputSchema":{"properties":{"memory_file":{"title":"Memory File","type":"string"},"plugin":{"title":"Plugin","type":"string"},"profile":{"default":"","title":"Profile","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["memory_file","plugin"],"title":"volatility_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"volatility_analyzeOutput","type":"object"}},{"name":"msfvenom_generate","description":"\n        Execute MSFVenom for payload generation with enhanced logging.\n        \n        Args:\n            payload: The payload to generate\n            format_type: Output format (exe, elf, raw, etc.)\n            output_file: Output file path\n            encoder: Encoder to use\n            iterations: Number of encoding iterations\n            additional_args: Additional MSFVenom arguments\n            \n        Returns:\n            Payload generation results\n        ","inputSchema":{"properties":{"payload":{"title":"Payload","type":"string"},"format_type":{"default":"","title":"Format Type","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"encoder":{"default":"","title":"Encoder","type":"string"},"iterations":{"default":"","title":"Iterations","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["payload"],"title":"msfvenom_generateArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"msfvenom_generateOutput","type":"object"}},{"name":"gdb_analyze","description":"\n        Execute GDB for binary analysis and debugging with enhanced logging.\n        \n        Args:\n            binary: Path to the binary file\n            commands: GDB commands to execute\n            script_file: Path to GDB script file\n            additional_args: Additional GDB arguments\n            \n        Returns:\n            Binary analysis results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"commands":{"default":"","title":"Commands","type":"string"},"script_file":{"default":"","title":"Script File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"gdb_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"gdb_analyzeOutput","type":"object"}},{"name":"radare2_analyze","description":"\n        Execute Radare2 for binary analysis and reverse engineering with enhanced logging.\n        \n        Args:\n            binary: Path to the binary file\n            commands: Radare2 commands to execute\n            additional_args: Additional Radare2 arguments\n            \n        Returns:\n            Binary analysis results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"commands":{"default":"","title":"Commands","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"radare2_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"radare2_analyzeOutput","type":"object"}},{"name":"binwalk_analyze","description":"\n        Execute Binwalk for firmware and file analysis with enhanced logging.\n        \n        Args:\n            file_path: Path to the file to analyze\n            extract: Whether to extract discovered files\n            additional_args: Additional Binwalk arguments\n            \n        Returns:\n            Firmware analysis results\n        ","inputSchema":{"properties":{"file_path":{"title":"File Path","type":"string"},"extract":{"default":false,"title":"Extract","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["file_path"],"title":"binwalk_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"binwalk_analyzeOutput","type":"object"}},{"name":"ropgadget_search","description":"\n        Search for ROP gadgets in a binary using ROPgadget with enhanced logging.\n        \n        Args:\n            binary: Path to the binary file\n            gadget_type: Type of gadgets to search for\n            additional_args: Additional ROPgadget arguments\n            \n        Returns:\n            ROP gadget search results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"gadget_type":{"default":"","title":"Gadget Type","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"ropgadget_searchArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ropgadget_searchOutput","type":"object"}},{"name":"checksec_analyze","description":"\n        Check security features of a binary with enhanced logging.\n        \n        Args:\n            binary: Path to the binary file\n            \n        Returns:\n            Security features analysis results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"}},"required":["binary"],"title":"checksec_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"checksec_analyzeOutput","type":"object"}},{"name":"xxd_hexdump","description":"\n        Create a hex dump of a file using xxd with enhanced logging.\n        \n        Args:\n            file_path: Path to the file\n            offset: Offset to start reading from\n            length: Number of bytes to read\n            additional_args: Additional xxd arguments\n            \n        Returns:\n            Hex dump results\n        ","inputSchema":{"properties":{"file_path":{"title":"File Path","type":"string"},"offset":{"default":"0","title":"Offset","type":"string"},"length":{"default":"","title":"Length","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["file_path"],"title":"xxd_hexdumpArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"xxd_hexdumpOutput","type":"object"}},{"name":"strings_extract","description":"\n        Extract strings from a binary file with enhanced logging.\n        \n        Args:\n            file_path: Path to the file\n            min_len: Minimum string length\n            additional_args: Additional strings arguments\n            \n        Returns:\n            String extraction results\n        ","inputSchema":{"properties":{"file_path":{"title":"File Path","type":"string"},"min_len":{"default":4,"title":"Min Len","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["file_path"],"title":"strings_extractArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"strings_extractOutput","type":"object"}},{"name":"objdump_analyze","description":"\n        Analyze a binary using objdump with enhanced logging.\n        \n        Args:\n            binary: Path to the binary file\n            disassemble: Whether to disassemble the binary\n            additional_args: Additional objdump arguments\n            \n        Returns:\n            Binary analysis results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"disassemble":{"default":true,"title":"Disassemble","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"objdump_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"objdump_analyzeOutput","type":"object"}},{"name":"ghidra_analysis","description":"\n        Execute Ghidra for advanced binary analysis and reverse engineering.\n        \n        Args:\n            binary: Path to the binary file\n            project_name: Ghidra project name\n            script_file: Custom Ghidra script to run\n            analysis_timeout: Analysis timeout in seconds\n            output_format: Output format (xml, json)\n            additional_args: Additional Ghidra arguments\n            \n        Returns:\n            Advanced binary analysis results from Ghidra\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"project_name":{"default":"hexstrike_analysis","title":"Project Name","type":"string"},"script_file":{"default":"","title":"Script File","type":"string"},"analysis_timeout":{"default":300,"title":"Analysis Timeout","type":"integer"},"output_format":{"default":"xml","title":"Output Format","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"ghidra_analysisArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ghidra_analysisOutput","type":"object"}},{"name":"pwntools_exploit","description":"\n        Execute Pwntools for exploit development and automation.\n        \n        Args:\n            script_content: Python script content using pwntools\n            target_binary: Local binary to exploit\n            target_host: Remote host to connect to\n            target_port: Remote port to connect to\n            exploit_type: Type of exploit (local, remote, format_string, rop)\n            additional_args: Additional arguments\n            \n        Returns:\n            Exploit execution results\n        ","inputSchema":{"properties":{"script_content":{"default":"","title":"Script Content","type":"string"},"target_binary":{"default":"","title":"Target Binary","type":"string"},"target_host":{"default":"","title":"Target Host","type":"string"},"target_port":{"default":0,"title":"Target Port","type":"integer"},"exploit_type":{"default":"local","title":"Exploit Type","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"pwntools_exploitArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"pwntools_exploitOutput","type":"object"}},{"name":"one_gadget_search","description":"\n        Execute one_gadget to find one-shot RCE gadgets in libc.\n        \n        Args:\n            libc_path: Path to libc binary\n            level: Constraint level (0, 1, 2)\n            additional_args: Additional one_gadget arguments\n            \n        Returns:\n            One-shot RCE gadget search results\n        ","inputSchema":{"properties":{"libc_path":{"title":"Libc Path","type":"string"},"level":{"default":1,"title":"Level","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["libc_path"],"title":"one_gadget_searchArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"one_gadget_searchOutput","type":"object"}},{"name":"libc_database_lookup","description":"\n        Execute libc-database for libc identification and offset lookup.\n        \n        Args:\n            action: Action to perform (find, dump, download)\n            symbols: Symbols with offsets for find action (format: \"symbol1:offset1 symbol2:offset2\")\n            libc_id: Libc ID for dump/download actions\n            additional_args: Additional arguments\n            \n        Returns:\n            Libc database lookup results\n        ","inputSchema":{"properties":{"action":{"default":"find","title":"Action","type":"string"},"symbols":{"default":"","title":"Symbols","type":"string"},"libc_id":{"default":"","title":"Libc Id","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"libc_database_lookupArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"libc_database_lookupOutput","type":"object"}},{"name":"gdb_peda_debug","description":"\n        Execute GDB with PEDA for enhanced debugging and exploitation.\n        \n        Args:\n            binary: Binary to debug\n            commands: GDB commands to execute\n            attach_pid: Process ID to attach to\n            core_file: Core dump file to analyze\n            additional_args: Additional GDB arguments\n            \n        Returns:\n            Enhanced debugging results with PEDA\n        ","inputSchema":{"properties":{"binary":{"default":"","title":"Binary","type":"string"},"commands":{"default":"","title":"Commands","type":"string"},"attach_pid":{"default":0,"title":"Attach Pid","type":"integer"},"core_file":{"default":"","title":"Core File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"gdb_peda_debugArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"gdb_peda_debugOutput","type":"object"}},{"name":"angr_symbolic_execution","description":"\n        Execute angr for symbolic execution and binary analysis.\n        \n        Args:\n            binary: Binary to analyze\n            script_content: Custom angr script content\n            find_address: Address to find during symbolic execution\n            avoid_addresses: Comma-separated addresses to avoid\n            analysis_type: Type of analysis (symbolic, cfg, static)\n            additional_args: Additional arguments\n            \n        Returns:\n            Symbolic execution and binary analysis results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"script_content":{"default":"","title":"Script Content","type":"string"},"find_address":{"default":"","title":"Find Address","type":"string"},"avoid_addresses":{"default":"","title":"Avoid Addresses","type":"string"},"analysis_type":{"default":"symbolic","title":"Analysis Type","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"angr_symbolic_executionArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"angr_symbolic_executionOutput","type":"object"}},{"name":"ropper_gadget_search","description":"\n        Execute ropper for advanced ROP/JOP gadget searching.\n        \n        Args:\n            binary: Binary to search for gadgets\n            gadget_type: Type of gadgets (rop, jop, sys, all)\n            quality: Gadget quality level (1-5)\n            arch: Target architecture (x86, x86_64, arm, etc.)\n            search_string: Specific gadget pattern to search for\n            additional_args: Additional ropper arguments\n            \n        Returns:\n            Advanced ROP/JOP gadget search results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"gadget_type":{"default":"rop","title":"Gadget Type","type":"string"},"quality":{"default":1,"title":"Quality","type":"integer"},"arch":{"default":"","title":"Arch","type":"string"},"search_string":{"default":"","title":"Search String","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"ropper_gadget_searchArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ropper_gadget_searchOutput","type":"object"}},{"name":"pwninit_setup","description":"\n        Execute pwninit for CTF binary exploitation setup.\n        \n        Args:\n            binary: Binary file to set up\n            libc: Libc file to use\n            ld: Loader file to use\n            template_type: Template type (python, c)\n            additional_args: Additional pwninit arguments\n            \n        Returns:\n            CTF binary exploitation setup results\n        ","inputSchema":{"properties":{"binary":{"title":"Binary","type":"string"},"libc":{"default":"","title":"Libc","type":"string"},"ld":{"default":"","title":"Ld","type":"string"},"template_type":{"default":"python","title":"Template Type","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["binary"],"title":"pwninit_setupArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"pwninit_setupOutput","type":"object"}},{"name":"feroxbuster_scan","description":"\n        Execute Feroxbuster for recursive content discovery with enhanced logging.\n        \n        Args:\n            url: The target URL\n            wordlist: Wordlist file to use\n            threads: Number of threads\n            additional_args: Additional Feroxbuster arguments\n            \n        Returns:\n            Content discovery results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"wordlist":{"default":"/usr/share/wordlists/dirb/common.txt","title":"Wordlist","type":"string"},"threads":{"default":10,"title":"Threads","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"feroxbuster_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"feroxbuster_scanOutput","type":"object"}},{"name":"dotdotpwn_scan","description":"\n        Execute DotDotPwn for directory traversal testing with enhanced logging.\n        \n        Args:\n            target: The target hostname or IP\n            module: Module to use (http, ftp, tftp, etc.)\n            additional_args: Additional DotDotPwn arguments\n            \n        Returns:\n            Directory traversal test results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"module":{"default":"http","title":"Module","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"dotdotpwn_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"dotdotpwn_scanOutput","type":"object"}},{"name":"xsser_scan","description":"\n        Execute XSSer for XSS vulnerability testing with enhanced logging.\n        \n        Args:\n            url: The target URL\n            params: Parameters to test\n            additional_args: Additional XSSer arguments\n            \n        Returns:\n            XSS vulnerability test results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"params":{"default":"","title":"Params","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"xsser_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"xsser_scanOutput","type":"object"}},{"name":"wfuzz_scan","description":"\n        Execute Wfuzz for web application fuzzing with enhanced logging.\n        \n        Args:\n            url: The target URL (use FUZZ where you want to inject payloads)\n            wordlist: Wordlist file to use\n            additional_args: Additional Wfuzz arguments\n            \n        Returns:\n            Web application fuzzing results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"wordlist":{"default":"/usr/share/wordlists/dirb/common.txt","title":"Wordlist","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"wfuzz_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"wfuzz_scanOutput","type":"object"}},{"name":"dirsearch_scan","description":"\n        Execute Dirsearch for advanced directory and file discovery with enhanced logging.\n        \n        Args:\n            url: The target URL\n            extensions: File extensions to search for\n            wordlist: Wordlist file to use\n            threads: Number of threads to use\n            recursive: Enable recursive scanning\n            additional_args: Additional Dirsearch arguments\n            \n        Returns:\n            Advanced directory discovery results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"extensions":{"default":"php,html,js,txt,xml,json","title":"Extensions","type":"string"},"wordlist":{"default":"/usr/share/wordlists/dirsearch/common.txt","title":"Wordlist","type":"string"},"threads":{"default":30,"title":"Threads","type":"integer"},"recursive":{"default":false,"title":"Recursive","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"dirsearch_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"dirsearch_scanOutput","type":"object"}},{"name":"katana_crawl","description":"\n        Execute Katana for next-generation crawling and spidering with enhanced logging.\n        \n        Args:\n            url: The target URL to crawl\n            depth: Crawling depth\n            js_crawl: Enable JavaScript crawling\n            form_extraction: Enable form extraction\n            output_format: Output format (json, txt)\n            additional_args: Additional Katana arguments\n            \n        Returns:\n            Advanced web crawling results with endpoints and forms\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"depth":{"default":3,"title":"Depth","type":"integer"},"js_crawl":{"default":true,"title":"Js Crawl","type":"boolean"},"form_extraction":{"default":true,"title":"Form Extraction","type":"boolean"},"output_format":{"default":"json","title":"Output Format","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"katana_crawlArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"katana_crawlOutput","type":"object"}},{"name":"gau_discovery","description":"\n        Execute Gau (Get All URLs) for URL discovery from multiple sources with enhanced logging.\n        \n        Args:\n            domain: The target domain\n            providers: Data providers to use\n            include_subs: Include subdomains\n            blacklist: File extensions to blacklist\n            additional_args: Additional Gau arguments\n            \n        Returns:\n            Comprehensive URL discovery results from multiple sources\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"providers":{"default":"wayback,commoncrawl,otx,urlscan","title":"Providers","type":"string"},"include_subs":{"default":true,"title":"Include Subs","type":"boolean"},"blacklist":{"default":"png,jpg,gif,jpeg,swf,woff,svg,pdf,css,ico","title":"Blacklist","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"gau_discoveryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"gau_discoveryOutput","type":"object"}},{"name":"waybackurls_discovery","description":"\n        Execute Waybackurls for historical URL discovery with enhanced logging.\n        \n        Args:\n            domain: The target domain\n            get_versions: Get all versions of URLs\n            no_subs: Don't include subdomains\n            additional_args: Additional Waybackurls arguments\n            \n        Returns:\n            Historical URL discovery results from Wayback Machine\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"get_versions":{"default":false,"title":"Get Versions","type":"boolean"},"no_subs":{"default":false,"title":"No Subs","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"waybackurls_discoveryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"waybackurls_discoveryOutput","type":"object"}},{"name":"arjun_parameter_discovery","description":"\n        Execute Arjun for HTTP parameter discovery with enhanced logging.\n        \n        Args:\n            url: The target URL\n            method: HTTP method to use\n            wordlist: Custom wordlist file\n            delay: Delay between requests\n            threads: Number of threads\n            stable: Use stable mode\n            additional_args: Additional Arjun arguments\n            \n        Returns:\n            HTTP parameter discovery results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"method":{"default":"GET","title":"Method","type":"string"},"wordlist":{"default":"","title":"Wordlist","type":"string"},"delay":{"default":0,"title":"Delay","type":"integer"},"threads":{"default":25,"title":"Threads","type":"integer"},"stable":{"default":false,"title":"Stable","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"arjun_parameter_discoveryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"arjun_parameter_discoveryOutput","type":"object"}},{"name":"paramspider_mining","description":"\n        Execute ParamSpider for parameter mining from web archives with enhanced logging.\n        \n        Args:\n            domain: The target domain\n            level: Mining level depth\n            exclude: File extensions to exclude\n            output: Output file path\n            additional_args: Additional ParamSpider arguments\n            \n        Returns:\n            Parameter mining results from web archives\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"level":{"default":2,"title":"Level","type":"integer"},"exclude":{"default":"png,jpg,gif,jpeg,swf,woff,svg,pdf,css,ico","title":"Exclude","type":"string"},"output":{"default":"","title":"Output","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"paramspider_miningArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"paramspider_miningOutput","type":"object"}},{"name":"x8_parameter_discovery","description":"\n        Execute x8 for hidden parameter discovery with enhanced logging.\n        \n        Args:\n            url: The target URL\n            wordlist: Parameter wordlist\n            method: HTTP method\n            body: Request body\n            headers: Custom headers\n            additional_args: Additional x8 arguments\n            \n        Returns:\n            Hidden parameter discovery results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"wordlist":{"default":"/usr/share/wordlists/x8/params.txt","title":"Wordlist","type":"string"},"method":{"default":"GET","title":"Method","type":"string"},"body":{"default":"","title":"Body","type":"string"},"headers":{"default":"","title":"Headers","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"x8_parameter_discoveryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"x8_parameter_discoveryOutput","type":"object"}},{"name":"jaeles_vulnerability_scan","description":"\n        Execute Jaeles for advanced vulnerability scanning with custom signatures.\n        \n        Args:\n            url: The target URL\n            signatures: Custom signature path\n            config: Configuration file\n            threads: Number of threads\n            timeout: Request timeout\n            additional_args: Additional Jaeles arguments\n            \n        Returns:\n            Advanced vulnerability scanning results with custom signatures\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"signatures":{"default":"","title":"Signatures","type":"string"},"config":{"default":"","title":"Config","type":"string"},"threads":{"default":20,"title":"Threads","type":"integer"},"timeout":{"default":20,"title":"Timeout","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"jaeles_vulnerability_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"jaeles_vulnerability_scanOutput","type":"object"}},{"name":"dalfox_xss_scan","description":"\n        Execute Dalfox for advanced XSS vulnerability scanning with enhanced logging.\n        \n        Args:\n            url: The target URL\n            pipe_mode: Use pipe mode for input\n            blind: Enable blind XSS testing\n            mining_dom: Enable DOM mining\n            mining_dict: Enable dictionary mining\n            custom_payload: Custom XSS payload\n            additional_args: Additional Dalfox arguments\n            \n        Returns:\n            Advanced XSS vulnerability scanning results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"pipe_mode":{"default":false,"title":"Pipe Mode","type":"boolean"},"blind":{"default":false,"title":"Blind","type":"boolean"},"mining_dom":{"default":true,"title":"Mining Dom","type":"boolean"},"mining_dict":{"default":true,"title":"Mining Dict","type":"boolean"},"custom_payload":{"default":"","title":"Custom Payload","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"dalfox_xss_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"dalfox_xss_scanOutput","type":"object"}},{"name":"httpx_probe","description":"\n        Execute httpx for fast HTTP probing and technology detection.\n        \n        Args:\n            target: Target file or single URL\n            probe: Enable probing\n            tech_detect: Enable technology detection\n            status_code: Show status codes\n            content_length: Show content length\n            title: Show page titles\n            web_server: Show web server\n            threads: Number of threads\n            additional_args: Additional httpx arguments\n            \n        Returns:\n            Fast HTTP probing results with technology detection\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"probe":{"default":true,"title":"Probe","type":"boolean"},"tech_detect":{"default":false,"title":"Tech Detect","type":"boolean"},"status_code":{"default":false,"title":"Status Code","type":"boolean"},"content_length":{"default":false,"title":"Content Length","type":"boolean"},"title":{"default":false,"title":"Title","type":"boolean"},"web_server":{"default":false,"title":"Web Server","type":"boolean"},"threads":{"default":50,"title":"Threads","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"httpx_probeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"httpx_probeOutput","type":"object"}},{"name":"anew_data_processing","description":"\n        Execute anew for appending new lines to files (useful for data processing).\n        \n        Args:\n            input_data: Input data to process\n            output_file: Output file path\n            additional_args: Additional anew arguments\n            \n        Returns:\n            Data processing results with unique line filtering\n        ","inputSchema":{"properties":{"input_data":{"title":"Input Data","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["input_data"],"title":"anew_data_processingArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"anew_data_processingOutput","type":"object"}},{"name":"qsreplace_parameter_replacement","description":"\n        Execute qsreplace for query string parameter replacement.\n        \n        Args:\n            urls: URLs to process\n            replacement: Replacement string for parameters\n            additional_args: Additional qsreplace arguments\n            \n        Returns:\n            Parameter replacement results for fuzzing\n        ","inputSchema":{"properties":{"urls":{"title":"Urls","type":"string"},"replacement":{"default":"FUZZ","title":"Replacement","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["urls"],"title":"qsreplace_parameter_replacementArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"qsreplace_parameter_replacementOutput","type":"object"}},{"name":"uro_url_filtering","description":"\n        Execute uro for filtering out similar URLs.\n        \n        Args:\n            urls: URLs to filter\n            whitelist: Whitelist patterns\n            blacklist: Blacklist patterns\n            additional_args: Additional uro arguments\n            \n        Returns:\n            Filtered URL results with duplicates removed\n        ","inputSchema":{"properties":{"urls":{"title":"Urls","type":"string"},"whitelist":{"default":"","title":"Whitelist","type":"string"},"blacklist":{"default":"","title":"Blacklist","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["urls"],"title":"uro_url_filteringArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"uro_url_filteringOutput","type":"object"}},{"name":"ai_generate_payload","description":"\n        Generate AI-powered contextual payloads for security testing.\n        \n        Args:\n            attack_type: Type of attack (xss, sqli, lfi, cmd_injection, ssti, xxe)\n            complexity: Complexity level (basic, advanced, bypass)\n            technology: Target technology (php, asp, jsp, python, nodejs)\n            url: Target URL for context\n            \n        Returns:\n            Contextual payloads with risk assessment and test cases\n        ","inputSchema":{"properties":{"attack_type":{"title":"Attack Type","type":"string"},"complexity":{"default":"basic","title":"Complexity","type":"string"},"technology":{"default":"","title":"Technology","type":"string"},"url":{"default":"","title":"Url","type":"string"}},"required":["attack_type"],"title":"ai_generate_payloadArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ai_generate_payloadOutput","type":"object"}},{"name":"ai_test_payload","description":"\n        Test generated payload against target with AI analysis.\n        \n        Args:\n            payload: The payload to test\n            target_url: Target URL to test against\n            method: HTTP method (GET, POST)\n            \n        Returns:\n            Test results with AI analysis and vulnerability assessment\n        ","inputSchema":{"properties":{"payload":{"title":"Payload","type":"string"},"target_url":{"title":"Target Url","type":"string"},"method":{"default":"GET","title":"Method","type":"string"}},"required":["payload","target_url"],"title":"ai_test_payloadArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ai_test_payloadOutput","type":"object"}},{"name":"ai_generate_attack_suite","description":"\n        Generate comprehensive attack suite with multiple payload types.\n        \n        Args:\n            target_url: Target URL for testing\n            attack_types: Comma-separated list of attack types\n            \n        Returns:\n            Comprehensive attack suite with multiple payload types\n        ","inputSchema":{"properties":{"target_url":{"title":"Target Url","type":"string"},"attack_types":{"default":"xss,sqli,lfi","title":"Attack Types","type":"string"}},"required":["target_url"],"title":"ai_generate_attack_suiteArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ai_generate_attack_suiteOutput","type":"object"}},{"name":"api_fuzzer","description":"\n        Advanced API endpoint fuzzing with intelligent parameter discovery.\n        \n        Args:\n            base_url: Base URL of the API\n            endpoints: Comma-separated list of specific endpoints to test\n            methods: HTTP methods to test (comma-separated)\n            wordlist: Wordlist for endpoint discovery\n            \n        Returns:\n            API fuzzing results with endpoint discovery and vulnerability assessment\n        ","inputSchema":{"properties":{"base_url":{"title":"Base Url","type":"string"},"endpoints":{"default":"","title":"Endpoints","type":"string"},"methods":{"default":"GET,POST,PUT,DELETE","title":"Methods","type":"string"},"wordlist":{"default":"/usr/share/wordlists/api/api-endpoints.txt","title":"Wordlist","type":"string"}},"required":["base_url"],"title":"api_fuzzerArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"api_fuzzerOutput","type":"object"}},{"name":"graphql_scanner","description":"\n        Advanced GraphQL security scanning and introspection.\n        \n        Args:\n            endpoint: GraphQL endpoint URL\n            introspection: Test introspection queries\n            query_depth: Maximum query depth to test\n            test_mutations: Test mutation operations\n            \n        Returns:\n            GraphQL security scan results with vulnerability assessment\n        ","inputSchema":{"properties":{"endpoint":{"title":"Endpoint","type":"string"},"introspection":{"default":true,"title":"Introspection","type":"boolean"},"query_depth":{"default":10,"title":"Query Depth","type":"integer"},"test_mutations":{"default":true,"title":"Test Mutations","type":"boolean"}},"required":["endpoint"],"title":"graphql_scannerArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"graphql_scannerOutput","type":"object"}},{"name":"jwt_analyzer","description":"\n        Advanced JWT token analysis and vulnerability testing.\n        \n        Args:\n            jwt_token: JWT token to analyze\n            target_url: Optional target URL for testing token manipulation\n            \n        Returns:\n            JWT analysis results with vulnerability assessment and attack vectors\n        ","inputSchema":{"properties":{"jwt_token":{"title":"Jwt Token","type":"string"},"target_url":{"default":"","title":"Target Url","type":"string"}},"required":["jwt_token"],"title":"jwt_analyzerArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"jwt_analyzerOutput","type":"object"}},{"name":"api_schema_analyzer","description":"\n        Analyze API schemas and identify potential security issues.\n        \n        Args:\n            schema_url: URL to the API schema (OpenAPI/Swagger/GraphQL)\n            schema_type: Type of schema (openapi, swagger, graphql)\n            \n        Returns:\n            Schema analysis results with security issues and recommendations\n        ","inputSchema":{"properties":{"schema_url":{"title":"Schema Url","type":"string"},"schema_type":{"default":"openapi","title":"Schema Type","type":"string"}},"required":["schema_url"],"title":"api_schema_analyzerArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"api_schema_analyzerOutput","type":"object"}},{"name":"comprehensive_api_audit","description":"\n        Comprehensive API security audit combining multiple testing techniques.\n        \n        Args:\n            base_url: Base URL of the API\n            schema_url: Optional API schema URL\n            jwt_token: Optional JWT token for analysis\n            graphql_endpoint: Optional GraphQL endpoint\n            \n        Returns:\n            Comprehensive audit results with all API security tests\n        ","inputSchema":{"properties":{"base_url":{"title":"Base Url","type":"string"},"schema_url":{"default":"","title":"Schema Url","type":"string"},"jwt_token":{"default":"","title":"Jwt Token","type":"string"},"graphql_endpoint":{"default":"","title":"Graphql Endpoint","type":"string"}},"required":["base_url"],"title":"comprehensive_api_auditArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"comprehensive_api_auditOutput","type":"object"}},{"name":"volatility3_analyze","description":"\n        Execute Volatility3 for advanced memory forensics with enhanced logging.\n        \n        Args:\n            memory_file: Path to memory dump file\n            plugin: Volatility3 plugin to execute\n            output_file: Output file path\n            additional_args: Additional Volatility3 arguments\n            \n        Returns:\n            Advanced memory forensics results\n        ","inputSchema":{"properties":{"memory_file":{"title":"Memory File","type":"string"},"plugin":{"title":"Plugin","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["memory_file","plugin"],"title":"volatility3_analyzeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"volatility3_analyzeOutput","type":"object"}},{"name":"foremost_carving","description":"\n        Execute Foremost for file carving with enhanced logging.\n        \n        Args:\n            input_file: Input file or device to carve\n            output_dir: Output directory for carved files\n            file_types: File types to carve (jpg,gif,png,etc.)\n            additional_args: Additional Foremost arguments\n            \n        Returns:\n            File carving results\n        ","inputSchema":{"properties":{"input_file":{"title":"Input File","type":"string"},"output_dir":{"default":"/tmp/foremost_output","title":"Output Dir","type":"string"},"file_types":{"default":"","title":"File Types","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["input_file"],"title":"foremost_carvingArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"foremost_carvingOutput","type":"object"}},{"name":"steghide_analysis","description":"\n        Execute Steghide for steganography analysis with enhanced logging.\n        \n        Args:\n            action: Action to perform (extract, embed, info)\n            cover_file: Cover file for steganography\n            embed_file: File to embed (for embed action)\n            passphrase: Passphrase for steganography\n            output_file: Output file path\n            additional_args: Additional Steghide arguments\n            \n        Returns:\n            Steganography analysis results\n        ","inputSchema":{"properties":{"action":{"title":"Action","type":"string"},"cover_file":{"title":"Cover File","type":"string"},"embed_file":{"default":"","title":"Embed File","type":"string"},"passphrase":{"default":"","title":"Passphrase","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["action","cover_file"],"title":"steghide_analysisArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"steghide_analysisOutput","type":"object"}},{"name":"exiftool_extract","description":"\n        Execute ExifTool for metadata extraction with enhanced logging.\n        \n        Args:\n            file_path: Path to file for metadata extraction\n            output_format: Output format (json, xml, csv)\n            tags: Specific tags to extract\n            additional_args: Additional ExifTool arguments\n            \n        Returns:\n            Metadata extraction results\n        ","inputSchema":{"properties":{"file_path":{"title":"File Path","type":"string"},"output_format":{"default":"","title":"Output Format","type":"string"},"tags":{"default":"","title":"Tags","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["file_path"],"title":"exiftool_extractArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"exiftool_extractOutput","type":"object"}},{"name":"hashpump_attack","description":"\n        Execute HashPump for hash length extension attacks with enhanced logging.\n        \n        Args:\n            signature: Original hash signature\n            data: Original data\n            key_length: Length of secret key\n            append_data: Data to append\n            additional_args: Additional HashPump arguments\n            \n        Returns:\n            Hash length extension attack results\n        ","inputSchema":{"properties":{"signature":{"title":"Signature","type":"string"},"data":{"title":"Data","type":"string"},"key_length":{"title":"Key Length","type":"string"},"append_data":{"title":"Append Data","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["signature","data","key_length","append_data"],"title":"hashpump_attackArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"hashpump_attackOutput","type":"object"}},{"name":"hakrawler_crawl","description":"\n        Execute Hakrawler for web endpoint discovery with enhanced logging.\n        \n        Args:\n            url: Target URL to crawl\n            depth: Crawling depth\n            forms: Include forms in crawling\n            robots: Check robots.txt\n            sitemap: Check sitemap.xml\n            wayback: Use Wayback Machine\n            additional_args: Additional Hakrawler arguments\n            \n        Returns:\n            Web endpoint discovery results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"depth":{"default":2,"title":"Depth","type":"integer"},"forms":{"default":true,"title":"Forms","type":"boolean"},"robots":{"default":true,"title":"Robots","type":"boolean"},"sitemap":{"default":true,"title":"Sitemap","type":"boolean"},"wayback":{"default":false,"title":"Wayback","type":"boolean"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"hakrawler_crawlArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"hakrawler_crawlOutput","type":"object"}},{"name":"paramspider_discovery","description":"\n        Execute ParamSpider for parameter discovery with enhanced logging.\n        \n        Args:\n            domain: Target domain\n            exclude: Extensions to exclude\n            output_file: Output file path\n            level: Crawling level\n            additional_args: Additional ParamSpider arguments\n            \n        Returns:\n            Parameter discovery results\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"exclude":{"default":"","title":"Exclude","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"level":{"default":2,"title":"Level","type":"integer"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"paramspider_discoveryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"paramspider_discoveryOutput","type":"object"}},{"name":"burpsuite_scan","description":"\n        Execute Burp Suite with enhanced logging.\n        \n        Args:\n            project_file: Burp project file path\n            config_file: Burp configuration file path\n            target: Target URL\n            headless: Run in headless mode\n            scan_type: Type of scan to perform\n            scan_config: Scan configuration\n            output_file: Output file path\n            additional_args: Additional Burp Suite arguments\n            \n        Returns:\n            Burp Suite scan results\n        ","inputSchema":{"properties":{"project_file":{"default":"","title":"Project File","type":"string"},"config_file":{"default":"","title":"Config File","type":"string"},"target":{"default":"","title":"Target","type":"string"},"headless":{"default":false,"title":"Headless","type":"boolean"},"scan_type":{"default":"","title":"Scan Type","type":"string"},"scan_config":{"default":"","title":"Scan Config","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"burpsuite_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"burpsuite_scanOutput","type":"object"}},{"name":"zap_scan","description":"\n        Execute OWASP ZAP with enhanced logging.\n        \n        Args:\n            target: Target URL\n            scan_type: Type of scan (baseline, full, api)\n            api_key: ZAP API key\n            daemon: Run in daemon mode\n            port: Port for ZAP daemon\n            host: Host for ZAP daemon\n            format_type: Output format (xml, json, html)\n            output_file: Output file path\n            additional_args: Additional ZAP arguments\n            \n        Returns:\n            ZAP scan results\n        ","inputSchema":{"properties":{"target":{"default":"","title":"Target","type":"string"},"scan_type":{"default":"baseline","title":"Scan Type","type":"string"},"api_key":{"default":"","title":"Api Key","type":"string"},"daemon":{"default":false,"title":"Daemon","type":"boolean"},"port":{"default":"8090","title":"Port","type":"string"},"host":{"default":"0.0.0.0","title":"Host","type":"string"},"format_type":{"default":"xml","title":"Format Type","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"zap_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"zap_scanOutput","type":"object"}},{"name":"arjun_scan","description":"\n        Execute Arjun for parameter discovery with enhanced logging.\n        \n        Args:\n            url: Target URL\n            method: HTTP method (GET, POST, etc.)\n            data: POST data for testing\n            headers: Custom headers\n            timeout: Request timeout\n            output_file: Output file path\n            additional_args: Additional Arjun arguments\n            \n        Returns:\n            Parameter discovery results\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"method":{"default":"GET","title":"Method","type":"string"},"data":{"default":"","title":"Data","type":"string"},"headers":{"default":"","title":"Headers","type":"string"},"timeout":{"default":"","title":"Timeout","type":"string"},"output_file":{"default":"","title":"Output File","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["url"],"title":"arjun_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"arjun_scanOutput","type":"object"}},{"name":"wafw00f_scan","description":"\n        Execute wafw00f to identify and fingerprint WAF products with enhanced logging.\n        \n        Args:\n            target: Target URL or IP\n            additional_args: Additional wafw00f arguments\n            \n        Returns:\n            WAF detection results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["target"],"title":"wafw00f_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"wafw00f_scanOutput","type":"object"}},{"name":"fierce_scan","description":"\n        Execute fierce for DNS reconnaissance with enhanced logging.\n        \n        Args:\n            domain: Target domain\n            dns_server: DNS server to use\n            additional_args: Additional fierce arguments\n            \n        Returns:\n            DNS reconnaissance results\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"dns_server":{"default":"","title":"Dns Server","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"fierce_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"fierce_scanOutput","type":"object"}},{"name":"dnsenum_scan","description":"\n        Execute dnsenum for DNS enumeration with enhanced logging.\n        \n        Args:\n            domain: Target domain\n            dns_server: DNS server to use\n            wordlist: Wordlist for brute forcing\n            additional_args: Additional dnsenum arguments\n            \n        Returns:\n            DNS enumeration results\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"dns_server":{"default":"","title":"Dns Server","type":"string"},"wordlist":{"default":"","title":"Wordlist","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"required":["domain"],"title":"dnsenum_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"dnsenum_scanOutput","type":"object"}},{"name":"autorecon_scan","description":"\n        Execute AutoRecon for comprehensive target enumeration with full parameter support.\n        \n        Args:\n            target: Single target to scan\n            target_file: File containing multiple targets\n            ports: Specific ports to scan\n            output_dir: Output directory\n            max_scans: Maximum number of concurrent scans\n            max_port_scans: Maximum number of concurrent port scans\n            heartbeat: Heartbeat interval\n            timeout: Global timeout\n            target_timeout: Per-target timeout\n            config_file: Configuration file path\n            global_file: Global configuration file\n            plugins_dir: Plugins directory\n            add_plugins_dir: Additional plugins directory\n            tags: Plugin tags to include\n            exclude_tags: Plugin tags to exclude\n            port_scans: Port scan plugins to run\n            service_scans: Service scan plugins to run\n            reports: Report plugins to run\n            single_target: Use single target directory structure\n            only_scans_dir: Only create scans directory\n            no_port_dirs: Don't create port directories\n            nmap: Custom nmap command\n            nmap_append: Arguments to append to nmap\n            proxychains: Use proxychains\n            disable_sanity_checks: Disable sanity checks\n            disable_keyboard_control: Disable keyboard control\n            force_services: Force service detection\n            accessible: Enable accessible output\n            verbose: Verbosity level (0-3)\n            curl_path: Custom curl path\n            dirbuster_tool: Directory busting tool\n            dirbuster_wordlist: Directory busting wordlist\n            dirbuster_threads: Directory busting threads\n            dirbuster_ext: Directory busting extensions\n            onesixtyone_community_strings: SNMP community strings\n            global_username_wordlist: Global username wordlist\n            global_password_wordlist: Global password wordlist\n            global_domain: Global domain\n            additional_args: Additional AutoRecon arguments\n            \n        Returns:\n            Comprehensive enumeration results with full configurability\n        ","inputSchema":{"properties":{"target":{"default":"","title":"Target","type":"string"},"target_file":{"default":"","title":"Target File","type":"string"},"ports":{"default":"","title":"Ports","type":"string"},"output_dir":{"default":"","title":"Output Dir","type":"string"},"max_scans":{"default":"","title":"Max Scans","type":"string"},"max_port_scans":{"default":"","title":"Max Port Scans","type":"string"},"heartbeat":{"default":"","title":"Heartbeat","type":"string"},"timeout":{"default":"","title":"Timeout","type":"string"},"target_timeout":{"default":"","title":"Target Timeout","type":"string"},"config_file":{"default":"","title":"Config File","type":"string"},"global_file":{"default":"","title":"Global File","type":"string"},"plugins_dir":{"default":"","title":"Plugins Dir","type":"string"},"add_plugins_dir":{"default":"","title":"Add Plugins Dir","type":"string"},"tags":{"default":"","title":"Tags","type":"string"},"exclude_tags":{"default":"","title":"Exclude Tags","type":"string"},"port_scans":{"default":"","title":"Port Scans","type":"string"},"service_scans":{"default":"","title":"Service Scans","type":"string"},"reports":{"default":"","title":"Reports","type":"string"},"single_target":{"default":false,"title":"Single Target","type":"boolean"},"only_scans_dir":{"default":false,"title":"Only Scans Dir","type":"boolean"},"no_port_dirs":{"default":false,"title":"No Port Dirs","type":"boolean"},"nmap":{"default":"","title":"Nmap","type":"string"},"nmap_append":{"default":"","title":"Nmap Append","type":"string"},"proxychains":{"default":false,"title":"Proxychains","type":"boolean"},"disable_sanity_checks":{"default":false,"title":"Disable Sanity Checks","type":"boolean"},"disable_keyboard_control":{"default":false,"title":"Disable Keyboard Control","type":"boolean"},"force_services":{"default":"","title":"Force Services","type":"string"},"accessible":{"default":false,"title":"Accessible","type":"boolean"},"verbose":{"default":0,"title":"Verbose","type":"integer"},"curl_path":{"default":"","title":"Curl Path","type":"string"},"dirbuster_tool":{"default":"","title":"Dirbuster Tool","type":"string"},"dirbuster_wordlist":{"default":"","title":"Dirbuster Wordlist","type":"string"},"dirbuster_threads":{"default":"","title":"Dirbuster Threads","type":"string"},"dirbuster_ext":{"default":"","title":"Dirbuster Ext","type":"string"},"onesixtyone_community_strings":{"default":"","title":"Onesixtyone Community Strings","type":"string"},"global_username_wordlist":{"default":"","title":"Global Username Wordlist","type":"string"},"global_password_wordlist":{"default":"","title":"Global Password Wordlist","type":"string"},"global_domain":{"default":"","title":"Global Domain","type":"string"},"additional_args":{"default":"","title":"Additional Args","type":"string"}},"title":"autorecon_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"autorecon_scanOutput","type":"object"}},{"name":"server_health","description":"\n        Check the health status of the HexStrike AI server.\n        \n        Returns:\n            Server health information with tool availability and telemetry\n        ","inputSchema":{"properties":{},"title":"server_healthArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"server_healthOutput","type":"object"}},{"name":"get_cache_stats","description":"\n        Get cache statistics from the HexStrike AI server.\n        \n        Returns:\n            Cache performance statistics\n        ","inputSchema":{"properties":{},"title":"get_cache_statsArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"get_cache_statsOutput","type":"object"}},{"name":"clear_cache","description":"\n        Clear the cache on the HexStrike AI server.\n        \n        Returns:\n            Cache clear operation results\n        ","inputSchema":{"properties":{},"title":"clear_cacheArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"clear_cacheOutput","type":"object"}},{"name":"get_telemetry","description":"\n        Get system telemetry from the HexStrike AI server.\n        \n        Returns:\n            System performance and usage telemetry\n        ","inputSchema":{"properties":{},"title":"get_telemetryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"get_telemetryOutput","type":"object"}},{"name":"list_active_processes","description":"\n        List all active processes on the HexStrike AI server.\n        \n        Returns:\n            List of active processes with their status and progress\n        ","inputSchema":{"properties":{},"title":"list_active_processesArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"list_active_processesOutput","type":"object"}},{"name":"get_process_status","description":"\n        Get the status of a specific process.\n        \n        Args:\n            pid: Process ID to check\n            \n        Returns:\n            Process status information including progress and runtime\n        ","inputSchema":{"properties":{"pid":{"title":"Pid","type":"integer"}},"required":["pid"],"title":"get_process_statusArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"get_process_statusOutput","type":"object"}},{"name":"terminate_process","description":"\n        Terminate a specific running process.\n        \n        Args:\n            pid: Process ID to terminate\n            \n        Returns:\n            Success status of the termination operation\n        ","inputSchema":{"properties":{"pid":{"title":"Pid","type":"integer"}},"required":["pid"],"title":"terminate_processArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"terminate_processOutput","type":"object"}},{"name":"pause_process","description":"\n        Pause a specific running process.\n        \n        Args:\n            pid: Process ID to pause\n            \n        Returns:\n            Success status of the pause operation\n        ","inputSchema":{"properties":{"pid":{"title":"Pid","type":"integer"}},"required":["pid"],"title":"pause_processArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"pause_processOutput","type":"object"}},{"name":"resume_process","description":"\n        Resume a paused process.\n        \n        Args:\n            pid: Process ID to resume\n            \n        Returns:\n            Success status of the resume operation\n        ","inputSchema":{"properties":{"pid":{"title":"Pid","type":"integer"}},"required":["pid"],"title":"resume_processArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"resume_processOutput","type":"object"}},{"name":"get_process_dashboard","description":"\n        Get enhanced process dashboard with visual status indicators.\n        \n        Returns:\n            Real-time dashboard with progress bars, system metrics, and process status\n        ","inputSchema":{"properties":{},"title":"get_process_dashboardArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"get_process_dashboardOutput","type":"object"}},{"name":"execute_command","description":"\n        Execute an arbitrary command on the HexStrike AI server with enhanced logging.\n        \n        Args:\n            command: The command to execute\n            use_cache: Whether to use caching for this command\n            \n        Returns:\n            Command execution results with enhanced telemetry\n        ","inputSchema":{"properties":{"command":{"title":"Command","type":"string"},"use_cache":{"default":true,"title":"Use Cache","type":"boolean"}},"required":["command"],"title":"execute_commandArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"execute_commandOutput","type":"object"}},{"name":"monitor_cve_feeds","description":"\n        Monitor CVE databases for new vulnerabilities with AI analysis.\n        \n        Args:\n            hours: Hours to look back for new CVEs (default: 24)\n            severity_filter: Filter by CVSS severity - comma-separated values (LOW,MEDIUM,HIGH,CRITICAL,ALL)\n            keywords: Filter CVEs by keywords in description (comma-separated)\n            \n        Returns:\n            Latest CVEs with exploitability analysis and threat intelligence\n            \n        Example:\n            monitor_cve_feeds(48, \"CRITICAL\", \"remote code execution\")\n        ","inputSchema":{"properties":{"hours":{"default":24,"title":"Hours","type":"integer"},"severity_filter":{"default":"HIGH,CRITICAL","title":"Severity Filter","type":"string"},"keywords":{"default":"","title":"Keywords","type":"string"}},"title":"monitor_cve_feedsArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"monitor_cve_feedsOutput","type":"object"}},{"name":"generate_exploit_from_cve","description":"\n        Generate working exploits from CVE information using AI-powered analysis.\n        \n        Args:\n            cve_id: CVE identifier (e.g., CVE-2024-1234)\n            target_os: Target operating system (windows, linux, macos, any)\n            target_arch: Target architecture (x86, x64, arm, any)\n            exploit_type: Type of exploit to generate (poc, weaponized, stealth)\n            evasion_level: Evasion sophistication (none, basic, advanced)\n            \n        Returns:\n            Generated exploit code with testing instructions and evasion techniques\n            \n        Example:\n            generate_exploit_from_cve(\"CVE-2024-1234\", \"linux\", \"x64\", \"weaponized\", \"advanced\")\n        ","inputSchema":{"properties":{"cve_id":{"title":"Cve Id","type":"string"},"target_os":{"default":"","title":"Target Os","type":"string"},"target_arch":{"default":"x64","title":"Target Arch","type":"string"},"exploit_type":{"default":"poc","title":"Exploit Type","type":"string"},"evasion_level":{"default":"none","title":"Evasion Level","type":"string"}},"required":["cve_id"],"title":"generate_exploit_from_cveArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"generate_exploit_from_cveOutput","type":"object"}},{"name":"discover_attack_chains","description":"\n        Discover multi-stage attack chains for target software with vulnerability correlation.\n        \n        Args:\n            target_software: Target software/system (e.g., \"Apache HTTP Server\", \"Windows Server 2019\")\n            attack_depth: Maximum number of stages in attack chain (1-5)\n            include_zero_days: Include potential zero-day vulnerabilities in analysis\n            \n        Returns:\n            Attack chains with vulnerability combinations, success probabilities, and exploit availability\n            \n        Example:\n            discover_attack_chains(\"Apache HTTP Server 2.4\", 4, True)\n        ","inputSchema":{"properties":{"target_software":{"title":"Target Software","type":"string"},"attack_depth":{"default":3,"title":"Attack Depth","type":"integer"},"include_zero_days":{"default":false,"title":"Include Zero Days","type":"boolean"}},"required":["target_software"],"title":"discover_attack_chainsArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"discover_attack_chainsOutput","type":"object"}},{"name":"research_zero_day_opportunities","description":"\n        Automated zero-day vulnerability research using AI analysis and pattern recognition.\n        \n        Args:\n            target_software: Software to research for vulnerabilities (e.g., \"nginx\", \"OpenSSL\")\n            analysis_depth: Depth of analysis (quick, standard, comprehensive)\n            source_code_url: URL to source code repository for enhanced analysis\n            \n        Returns:\n            Potential vulnerability areas with exploitation feasibility and research recommendations\n            \n        Example:\n            research_zero_day_opportunities(\"nginx 1.20\", \"comprehensive\", \"https://github.com/nginx/nginx\")\n        ","inputSchema":{"properties":{"target_software":{"title":"Target Software","type":"string"},"analysis_depth":{"default":"standard","title":"Analysis Depth","type":"string"},"source_code_url":{"default":"","title":"Source Code Url","type":"string"}},"required":["target_software"],"title":"research_zero_day_opportunitiesArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"research_zero_day_opportunitiesOutput","type":"object"}},{"name":"correlate_threat_intelligence","description":"\n        Correlate threat intelligence across multiple sources with advanced analysis.\n        \n        Args:\n            indicators: Comma-separated IOCs (IPs, domains, hashes, CVEs, etc.)\n            timeframe: Time window for correlation (7d, 30d, 90d, 1y)\n            sources: Intelligence sources to query (cve, exploit-db, github, twitter, all)\n            \n        Returns:\n            Correlated threat intelligence with attribution, timeline, and threat scoring\n            \n        Example:\n            correlate_threat_intelligence(\"CVE-2024-1234,192.168.1.100,malware.exe\", \"90d\", \"all\")\n        ","inputSchema":{"properties":{"indicators":{"title":"Indicators","type":"string"},"timeframe":{"default":"30d","title":"Timeframe","type":"string"},"sources":{"default":"all","title":"Sources","type":"string"}},"required":["indicators"],"title":"correlate_threat_intelligenceArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"correlate_threat_intelligenceOutput","type":"object"}},{"name":"advanced_payload_generation","description":"\n        Generate advanced payloads with AI-powered evasion techniques and contextual adaptation.\n        \n        Args:\n            attack_type: Type of attack (rce, privilege_escalation, persistence, exfiltration, xss, sqli)\n            target_context: Target environment details (OS, software versions, security controls)\n            evasion_level: Evasion sophistication (basic, standard, advanced, nation-state)\n            custom_constraints: Custom payload constraints (size limits, character restrictions, etc.)\n            \n        Returns:\n            Advanced payloads with multiple evasion techniques and deployment instructions\n            \n        Example:\n            advanced_payload_generation(\"rce\", \"Windows 11 + Defender + AppLocker\", \"nation-state\", \"max_size:256,no_quotes\")\n        ","inputSchema":{"properties":{"attack_type":{"title":"Attack Type","type":"string"},"target_context":{"default":"","title":"Target Context","type":"string"},"evasion_level":{"default":"standard","title":"Evasion Level","type":"string"},"custom_constraints":{"default":"","title":"Custom Constraints","type":"string"}},"required":["attack_type"],"title":"advanced_payload_generationArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"advanced_payload_generationOutput","type":"object"}},{"name":"vulnerability_intelligence_dashboard","description":"\n        Get a comprehensive vulnerability intelligence dashboard with latest threats and trends.\n        \n        Returns:\n            Dashboard with latest CVEs, trending vulnerabilities, exploit availability, and threat landscape\n            \n        Example:\n            vulnerability_intelligence_dashboard()\n        ","inputSchema":{"properties":{},"title":"vulnerability_intelligence_dashboardArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"vulnerability_intelligence_dashboardOutput","type":"object"}},{"name":"threat_hunting_assistant","description":"\n        AI-powered threat hunting assistant with vulnerability correlation and attack simulation.\n        \n        Args:\n            target_environment: Environment to hunt in (e.g., \"Windows Domain\", \"Cloud Infrastructure\")\n            threat_indicators: Known IOCs or suspicious indicators to investigate\n            hunt_focus: Focus area (general, apt, ransomware, insider_threat, supply_chain)\n            \n        Returns:\n            Threat hunting playbook with detection queries, IOCs, and investigation steps\n            \n        Example:\n            threat_hunting_assistant(\"Windows Domain\", \"suspicious_process.exe,192.168.1.100\", \"apt\")\n        ","inputSchema":{"properties":{"target_environment":{"title":"Target Environment","type":"string"},"threat_indicators":{"default":"","title":"Threat Indicators","type":"string"},"hunt_focus":{"default":"general","title":"Hunt Focus","type":"string"}},"required":["target_environment"],"title":"threat_hunting_assistantArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"threat_hunting_assistantOutput","type":"object"}},{"name":"get_live_dashboard","description":"\n        Get a beautiful live dashboard showing all active processes with enhanced visual formatting.\n        \n        Returns:\n            Live dashboard with visual process monitoring and system metrics\n        ","inputSchema":{"properties":{},"title":"get_live_dashboardArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"get_live_dashboardOutput","type":"object"}},{"name":"create_vulnerability_report","description":"\n        Create a beautiful vulnerability report with severity-based styling and visual indicators.\n        \n        Args:\n            vulnerabilities: JSON string containing vulnerability data\n            target: Target that was scanned\n            scan_type: Type of scan performed\n            \n        Returns:\n            Formatted vulnerability report with visual enhancements\n        ","inputSchema":{"properties":{"vulnerabilities":{"title":"Vulnerabilities","type":"string"},"target":{"default":"","title":"Target","type":"string"},"scan_type":{"default":"comprehensive","title":"Scan Type","type":"string"}},"required":["vulnerabilities"],"title":"create_vulnerability_reportArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"create_vulnerability_reportOutput","type":"object"}},{"name":"format_tool_output_visual","description":"\n        Format tool output with beautiful visual styling, syntax highlighting, and structure.\n        \n        Args:\n            tool_name: Name of the security tool\n            output: Raw output from the tool\n            success: Whether the tool execution was successful\n            \n        Returns:\n            Beautifully formatted tool output with visual enhancements\n        ","inputSchema":{"properties":{"tool_name":{"title":"Tool Name","type":"string"},"output":{"title":"Output","type":"string"},"success":{"default":true,"title":"Success","type":"boolean"}},"required":["tool_name","output"],"title":"format_tool_output_visualArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"format_tool_output_visualOutput","type":"object"}},{"name":"create_scan_summary","description":"\n        Create a comprehensive scan summary report with beautiful visual formatting.\n        \n        Args:\n            target: Target that was scanned\n            tools_used: Comma-separated list of tools used\n            vulnerabilities_found: Number of vulnerabilities discovered\n            execution_time: Total execution time in seconds\n            findings: Additional findings or notes\n            \n        Returns:\n            Beautiful scan summary report with visual enhancements\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"tools_used":{"title":"Tools Used","type":"string"},"vulnerabilities_found":{"default":0,"title":"Vulnerabilities Found","type":"integer"},"execution_time":{"default":0,"title":"Execution Time","type":"number"},"findings":{"default":"","title":"Findings","type":"string"}},"required":["target","tools_used"],"title":"create_scan_summaryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"create_scan_summaryOutput","type":"object"}},{"name":"display_system_metrics","description":"\n        Display current system metrics and performance indicators with visual formatting.\n        \n        Returns:\n            System metrics with beautiful visual presentation\n        ","inputSchema":{"properties":{},"title":"display_system_metricsArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"display_system_metricsOutput","type":"object"}},{"name":"analyze_target_intelligence","description":"\n        Analyze target using AI-powered intelligence to create comprehensive profile.\n        \n        Args:\n            target: Target URL, IP address, or domain to analyze\n            \n        Returns:\n            Comprehensive target profile with technology detection, risk assessment, and recommendations\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"}},"required":["target"],"title":"analyze_target_intelligenceArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"analyze_target_intelligenceOutput","type":"object"}},{"name":"select_optimal_tools_ai","description":"\n        Use AI to select optimal security tools based on target analysis and testing objective.\n        \n        Args:\n            target: Target to analyze\n            objective: Testing objective - \"comprehensive\", \"quick\", or \"stealth\"\n            \n        Returns:\n            AI-selected optimal tools with effectiveness ratings and target profile\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"objective":{"default":"comprehensive","title":"Objective","type":"string"}},"required":["target"],"title":"select_optimal_tools_aiArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"select_optimal_tools_aiOutput","type":"object"}},{"name":"optimize_tool_parameters_ai","description":"\n        Use AI to optimize tool parameters based on target profile and context.\n        \n        Args:\n            target: Target to test\n            tool: Security tool to optimize\n            context: JSON string with additional context (stealth, aggressive, etc.)\n            \n        Returns:\n            AI-optimized parameters for maximum effectiveness\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"tool":{"title":"Tool","type":"string"},"context":{"default":"{}","title":"Context","type":"string"}},"required":["target","tool"],"title":"optimize_tool_parameters_aiArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"optimize_tool_parameters_aiOutput","type":"object"}},{"name":"create_attack_chain_ai","description":"\n        Create an intelligent attack chain using AI-driven tool sequencing and optimization.\n        \n        Args:\n            target: Target for the attack chain\n            objective: Attack objective - \"comprehensive\", \"quick\", or \"stealth\"\n            \n        Returns:\n            AI-generated attack chain with success probability and time estimates\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"objective":{"default":"comprehensive","title":"Objective","type":"string"}},"required":["target"],"title":"create_attack_chain_aiArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"create_attack_chain_aiOutput","type":"object"}},{"name":"intelligent_smart_scan","description":"\n        Execute an intelligent scan using AI-driven tool selection and parameter optimization.\n        \n        Args:\n            target: Target to scan\n            objective: Scanning objective - \"comprehensive\", \"quick\", or \"stealth\"\n            max_tools: Maximum number of tools to use\n            \n        Returns:\n            Results from AI-optimized scanning with tool execution summary\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"objective":{"default":"comprehensive","title":"Objective","type":"string"},"max_tools":{"default":5,"title":"Max Tools","type":"integer"}},"required":["target"],"title":"intelligent_smart_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"intelligent_smart_scanOutput","type":"object"}},{"name":"detect_technologies_ai","description":"\n        Use AI to detect technologies and provide technology-specific testing recommendations.\n        \n        Args:\n            target: Target to analyze for technology detection\n            \n        Returns:\n            Detected technologies with AI-generated testing recommendations\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"}},"required":["target"],"title":"detect_technologies_aiArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"detect_technologies_aiOutput","type":"object"}},{"name":"ai_reconnaissance_workflow","description":"\n        Execute AI-driven reconnaissance workflow with intelligent tool chaining.\n        \n        Args:\n            target: Target for reconnaissance\n            depth: Reconnaissance depth - \"surface\", \"standard\", or \"deep\"\n            \n        Returns:\n            Comprehensive reconnaissance results with AI-driven insights\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"depth":{"default":"standard","title":"Depth","type":"string"}},"required":["target"],"title":"ai_reconnaissance_workflowArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ai_reconnaissance_workflowOutput","type":"object"}},{"name":"ai_vulnerability_assessment","description":"\n        Perform AI-driven vulnerability assessment with intelligent prioritization.\n        \n        Args:\n            target: Target for vulnerability assessment\n            focus_areas: Comma-separated focus areas - \"web\", \"network\", \"api\", \"all\"\n            \n        Returns:\n            Prioritized vulnerability assessment results with AI insights\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"focus_areas":{"default":"all","title":"Focus Areas","type":"string"}},"required":["target"],"title":"ai_vulnerability_assessmentArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"ai_vulnerability_assessmentOutput","type":"object"}},{"name":"bugbounty_reconnaissance_workflow","description":"\n        Create comprehensive reconnaissance workflow for bug bounty hunting.\n        \n        Args:\n            domain: Target domain for bug bounty\n            scope: Comma-separated list of in-scope domains/IPs\n            out_of_scope: Comma-separated list of out-of-scope domains/IPs\n            program_type: Type of program (web, api, mobile, iot)\n            \n        Returns:\n            Comprehensive reconnaissance workflow with phases and tools\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"scope":{"default":"","title":"Scope","type":"string"},"out_of_scope":{"default":"","title":"Out Of Scope","type":"string"},"program_type":{"default":"web","title":"Program Type","type":"string"}},"required":["domain"],"title":"bugbounty_reconnaissance_workflowArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"bugbounty_reconnaissance_workflowOutput","type":"object"}},{"name":"bugbounty_vulnerability_hunting","description":"\n        Create vulnerability hunting workflow prioritized by impact and bounty potential.\n        \n        Args:\n            domain: Target domain for bug bounty\n            priority_vulns: Comma-separated list of priority vulnerability types\n            bounty_range: Expected bounty range (low, medium, high, critical)\n            \n        Returns:\n            Vulnerability hunting workflow prioritized by impact\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"priority_vulns":{"default":"rce,sqli,xss,idor,ssrf","title":"Priority Vulns","type":"string"},"bounty_range":{"default":"unknown","title":"Bounty Range","type":"string"}},"required":["domain"],"title":"bugbounty_vulnerability_huntingArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"bugbounty_vulnerability_huntingOutput","type":"object"}},{"name":"bugbounty_business_logic_testing","description":"\n        Create business logic testing workflow for advanced bug bounty hunting.\n        \n        Args:\n            domain: Target domain for bug bounty\n            program_type: Type of program (web, api, mobile)\n            \n        Returns:\n            Business logic testing workflow with manual and automated tests\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"program_type":{"default":"web","title":"Program Type","type":"string"}},"required":["domain"],"title":"bugbounty_business_logic_testingArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"bugbounty_business_logic_testingOutput","type":"object"}},{"name":"bugbounty_osint_gathering","description":"\n        Create OSINT (Open Source Intelligence) gathering workflow for bug bounty reconnaissance.\n        \n        Args:\n            domain: Target domain for OSINT gathering\n            \n        Returns:\n            OSINT gathering workflow with multiple intelligence phases\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"}},"required":["domain"],"title":"bugbounty_osint_gatheringArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"bugbounty_osint_gatheringOutput","type":"object"}},{"name":"bugbounty_file_upload_testing","description":"\n        Create file upload vulnerability testing workflow with bypass techniques.\n        \n        Args:\n            target_url: Target URL with file upload functionality\n            \n        Returns:\n            File upload testing workflow with malicious files and bypass techniques\n        ","inputSchema":{"properties":{"target_url":{"title":"Target Url","type":"string"}},"required":["target_url"],"title":"bugbounty_file_upload_testingArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"bugbounty_file_upload_testingOutput","type":"object"}},{"name":"bugbounty_comprehensive_assessment","description":"\n        Create comprehensive bug bounty assessment combining all specialized workflows.\n        \n        Args:\n            domain: Target domain for bug bounty\n            scope: Comma-separated list of in-scope domains/IPs\n            priority_vulns: Comma-separated list of priority vulnerability types\n            include_osint: Include OSINT gathering workflow\n            include_business_logic: Include business logic testing workflow\n            \n        Returns:\n            Comprehensive bug bounty assessment with all workflows and summary\n        ","inputSchema":{"properties":{"domain":{"title":"Domain","type":"string"},"scope":{"default":"","title":"Scope","type":"string"},"priority_vulns":{"default":"rce,sqli,xss,idor,ssrf","title":"Priority Vulns","type":"string"},"include_osint":{"default":true,"title":"Include Osint","type":"boolean"},"include_business_logic":{"default":true,"title":"Include Business Logic","type":"boolean"}},"required":["domain"],"title":"bugbounty_comprehensive_assessmentArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"bugbounty_comprehensive_assessmentOutput","type":"object"}},{"name":"bugbounty_authentication_bypass_testing","description":"\n        Create authentication bypass testing workflow for bug bounty hunting.\n        \n        Args:\n            target_url: Target URL with authentication\n            auth_type: Type of authentication (form, jwt, oauth, saml)\n            \n        Returns:\n            Authentication bypass testing strategies and techniques\n        ","inputSchema":{"properties":{"target_url":{"title":"Target Url","type":"string"},"auth_type":{"default":"form","title":"Auth Type","type":"string"}},"required":["target_url"],"title":"bugbounty_authentication_bypass_testingArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"bugbounty_authentication_bypass_testingOutput","type":"object"}},{"name":"http_framework_test","description":"\n        Enhanced HTTP testing framework (Burp Suite alternative) for comprehensive web security testing.\n        \n        Args:\n            url: Target URL to test\n            method: HTTP method (GET, POST, PUT, DELETE, etc.)\n            data: Request data/parameters\n            headers: Custom headers\n            cookies: Custom cookies\n            action: Action to perform (request, spider, proxy_history, set_rules, set_scope, repeater, intruder)\n            \n        Returns:\n            HTTP testing results with vulnerability analysis\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"method":{"default":"GET","title":"Method","type":"string"},"data":{"additionalProperties":true,"default":{},"title":"Data","type":"object"},"headers":{"additionalProperties":true,"default":{},"title":"Headers","type":"object"},"cookies":{"additionalProperties":true,"default":{},"title":"Cookies","type":"object"},"action":{"default":"request","title":"Action","type":"string"}},"required":["url"],"title":"http_framework_testArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"http_framework_testOutput","type":"object"}},{"name":"browser_agent_inspect","description":"\n        AI-powered browser agent for comprehensive web application inspection and security analysis.\n        \n        Args:\n            url: Target URL to inspect\n            headless: Run browser in headless mode\n            wait_time: Time to wait after page load\n            action: Action to perform (navigate, screenshot, close, status)\n            proxy_port: Optional proxy port for request interception\n            active_tests: Run lightweight active reflected XSS tests (safe GET-only)\n            \n        Returns:\n            Browser inspection results with security analysis\n        ","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"headless":{"default":true,"title":"Headless","type":"boolean"},"wait_time":{"default":5,"title":"Wait Time","type":"integer"},"action":{"default":"navigate","title":"Action","type":"string"},"proxy_port":{"default":null,"title":"Proxy Port","type":"integer"},"active_tests":{"default":false,"title":"Active Tests","type":"boolean"}},"required":["url"],"title":"browser_agent_inspectArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"browser_agent_inspectOutput","type":"object"}},{"name":"http_set_rules","description":"Set match/replace rules used to rewrite parts of URL/query/headers/body before sending.\n        Rule format: {'where':'url|query|headers|body','pattern':'regex','replacement':'string'}","inputSchema":{"properties":{"rules":{"items":{},"title":"Rules","type":"array"}},"required":["rules"],"title":"http_set_rulesArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"http_set_rulesOutput","type":"object"}},{"name":"http_set_scope","description":"Define in-scope host (and optionally subdomains) so out-of-scope requests are skipped.","inputSchema":{"properties":{"host":{"title":"Host","type":"string"},"include_subdomains":{"default":true,"title":"Include Subdomains","type":"boolean"}},"required":["host"],"title":"http_set_scopeArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"http_set_scopeOutput","type":"object"}},{"name":"http_repeater","description":"Send a crafted request (Burp Repeater equivalent). request_spec keys: url, method, headers, cookies, data.","inputSchema":{"properties":{"request_spec":{"additionalProperties":true,"title":"Request Spec","type":"object"}},"required":["request_spec"],"title":"http_repeaterArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"http_repeaterOutput","type":"object"}},{"name":"http_intruder","description":"Simple Intruder (sniper) fuzzing. Iterates payloads over each param individually.\n        location: query|body|headers|cookie.","inputSchema":{"properties":{"url":{"title":"Url","type":"string"},"method":{"default":"GET","title":"Method","type":"string"},"location":{"default":"query","title":"Location","type":"string"},"params":{"default":null,"items":{},"title":"Params","type":"array"},"payloads":{"default":null,"items":{},"title":"Payloads","type":"array"},"base_data":{"additionalProperties":true,"default":null,"title":"Base Data","type":"object"},"max_requests":{"default":100,"title":"Max Requests","type":"integer"}},"required":["url"],"title":"http_intruderArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"http_intruderOutput","type":"object"}},{"name":"burpsuite_alternative_scan","description":"\n        Comprehensive Burp Suite alternative combining HTTP framework and browser agent for complete web security testing.\n        \n        Args:\n            target: Target URL or domain to scan\n            scan_type: Type of scan (comprehensive, spider, passive, active)\n            headless: Run browser in headless mode\n            max_depth: Maximum crawling depth\n            max_pages: Maximum pages to analyze\n            \n        Returns:\n            Comprehensive security assessment results\n        ","inputSchema":{"properties":{"target":{"title":"Target","type":"string"},"scan_type":{"default":"comprehensive","title":"Scan Type","type":"string"},"headless":{"default":true,"title":"Headless","type":"boolean"},"max_depth":{"default":3,"title":"Max Depth","type":"integer"},"max_pages":{"default":50,"title":"Max Pages","type":"integer"}},"required":["target"],"title":"burpsuite_alternative_scanArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"burpsuite_alternative_scanOutput","type":"object"}},{"name":"error_handling_statistics","description":"\n        Get intelligent error handling system statistics and recent error patterns.\n        \n        Returns:\n            Error handling statistics and patterns\n        ","inputSchema":{"properties":{},"title":"error_handling_statisticsArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"error_handling_statisticsOutput","type":"object"}},{"name":"test_error_recovery","description":"\n        Test the intelligent error recovery system with simulated failures.\n        \n        Args:\n            tool_name: Name of tool to simulate error for\n            error_type: Type of error to simulate (timeout, permission_denied, network_unreachable, etc.)\n            target: Target for the simulated test\n            \n        Returns:\n            Recovery strategy and system response\n        ","inputSchema":{"properties":{"tool_name":{"title":"Tool Name","type":"string"},"error_type":{"default":"timeout","title":"Error Type","type":"string"},"target":{"default":"example.com","title":"Target","type":"string"}},"required":["tool_name"],"title":"test_error_recoveryArguments","type":"object"},"outputSchema":{"properties":{"result":{"additionalProperties":true,"title":"Result","type":"object"}},"required":["result"],"title":"test_error_recoveryOutput","type":"object"}}]}} { metadata: undefined }
2025-08-17T15:07:21.331Z [hexstrike-ai] [info] Message from client: {"method":"tools/call","params":{"name":"nuclei_scan","arguments":{"target":"172.16.16.1","severity":"high,critical"}},"jsonrpc":"2.0","id":7} { metadata: undefined }
--- Logging error ---
  + Exception Group Traceback (most recent call last):
  |   File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5433, in main
  |     mcp.run()
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\server.py", line 250, in run
  |     anyio.run(self.run_stdio_async)
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_core\_eventloop.py", line 74, in run
  |     return async_backend.run(func, args, {}, backend_options)
  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 2316, in run
  |     return runner.run(wrapper())
  |            ^^^^^^^^^^^^^^^^^^^^^
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
  |     return self._loop.run_until_complete(task)
  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 650, in run_until_complete
  |     return future.result()
  |            ^^^^^^^^^^^^^^^
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 2304, in wrapper
  |     return await func(*args)
  |            ^^^^^^^^^^^^^^^^^
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\server.py", line 656, in run_stdio_async
  |     async with stdio_server() as (read_stream, write_stream):
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 211, in __aexit__
  |     await anext(self.gen)
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\stdio.py", line 85, in stdio_server
  |     async with anyio.create_task_group() as tg:
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 772, in __aexit__
  |     raise BaseExceptionGroup(
  | ExceptionGroup: unhandled errors in a TaskGroup (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\stdio.py", line 71, in stdin_reader
    |     await read_stream_writer.send(session_message)
    |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\streams\memory.py", line 243, in send
    |     self.send_nowait(item)
    |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\streams\memory.py", line 214, in send_nowait
    |     raise BrokenResourceError
    | anyio.BrokenResourceError
    +------------------------------------

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f525' in position 1: character maps to <undefined>
Call stack:
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5441, in <module>
    main()
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5435, in main
    logger.error(f"\U0001f4a5 Error starting MCP server: {str(e)}")
Message: '\x1b[38;5;196m\u274c \U0001f4a5 Error starting MCP server: unhandled errors in a TaskGroup (1 sub-exception)\x1b[0m'
Arguments: ()
--- Logging error ---
  + Exception Group Traceback (most recent call last):
  |   File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5433, in main
  |     mcp.run()
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\server.py", line 250, in run
  |     anyio.run(self.run_stdio_async)
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_core\_eventloop.py", line 74, in run
  |     return async_backend.run(func, args, {}, backend_options)
  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 2316, in run
  |     return runner.run(wrapper())
  |            ^^^^^^^^^^^^^^^^^^^^^
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
  |     return self._loop.run_until_complete(task)
  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 650, in run_until_complete
  |     return future.result()
  |            ^^^^^^^^^^^^^^^
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 2304, in wrapper
  |     return await func(*args)
  |            ^^^^^^^^^^^^^^^^^
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\fastmcp\server.py", line 656, in run_stdio_async
  |     async with stdio_server() as (read_stream, write_stream):
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 211, in __aexit__
  |     await anext(self.gen)
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\stdio.py", line 85, in stdio_server
  |     async with anyio.create_task_group() as tg:
  |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 772, in __aexit__
  |     raise BaseExceptionGroup(
  | ExceptionGroup: unhandled errors in a TaskGroup (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\mcp\server\stdio.py", line 71, in stdin_reader
    |     await read_stream_writer.send(session_message)
    |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\streams\memory.py", line 243, in send
    |     self.send_nowait(item)
    |   File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\streams\memory.py", line 214, in send_nowait
    |     raise BrokenResourceError
    | anyio.BrokenResourceError
    +------------------------------------

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\Home\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f525' in position 1: character maps to <undefined>
Call stack:
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5441, in <module>
    main()
  File "C:\Users\Home\deepseek\hexstrike-ai\hexstrike_mcp.py", line 5437, in main
    logger.error(traceback.format_exc())
Message: '\x1b[38;5;196m\u274c   + Exception Group Traceback (most recent call last):\n  |   File "C:\\Users\\Home\\deepseek\\hexstrike-ai\\hexstrike_mcp.py", line 5433, in main\n  |     mcp.run()\n  |   File "C:\\Users\\Home\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\mcp\\server\\fastmcp\\server.py", line 250, in run\n  |     anyio.run(self.run_stdio_async)\n  |   File "C:\\Users\\Home\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\anyio\\_core\\_eventloop.py", line 74, in run\n  |     return async_backend.run(func, args, {}, backend_options)\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |   File "C:\\Users\\Home\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py", line 2316, in run\n  |     return runner.run(wrapper())\n  |            ^^^^^^^^^^^^^^^^^^^^^\n  |   File "C:\\Users\\Home\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\runners.py", line 118, in run\n  |     return self._loop.run_until_complete(task)\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |   File "C:\\Users\\Home\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\base_events.py", line 650, in run_until_complete\n  |     return future.result()\n  |            ^^^^^^^^^^^^^^^\n  |   File "C:\\Users\\Home\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py", line 2304, in wrapper\n  |     return await func(*args)\n  |            ^^^^^^^^^^^^^^^^^\n  |   File "C:\\Users\\Home\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\mcp\\server\\fastmcp\\server.py", line 656, in run_stdio_async\n  |     async with stdio_server() as (read_stream, write_stream):\n  |   File "C:\\Users\\Home\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py", line 211, in __aexit__\n  |     await anext(self.gen)\n  |   File "C:\\Users\\Home\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\mcp\\server\\stdio.py", line 85, in stdio_server\n  |     async with anyio.create_task_group() as tg:\n  |   File "C:\\Users\\Home\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py", line 772, in __aexit__\n  |     raise BaseExceptionGroup(\n  | ExceptionGroup: unhandled errors in a TaskGroup (1 sub-exception)\n  +-+---------------- 1 ----------------\n    | Traceback (most recent call last):\n    |   File "C:\\Users\\Home\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\mcp\\server\\stdio.py", line 71, in stdin_reader\n    |     await read_stream_writer.send(session_message)\n    |   File "C:\\Users\\Home\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\anyio\\streams\\memory.py", line 243, in send\n    |     self.send_nowait(item)\n    |   File "C:\\Users\\Home\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\anyio\\streams\\memory.py", line 214, in send_nowait\n    |     raise BrokenResourceError\n    | anyio.BrokenResourceError\n    +------------------------------------\n\x1b[0m'
Arguments: ()
2025-08-17T15:07:21.562Z [hexstrike-ai] [info] Server transport closed { metadata: undefined }
2025-08-17T15:07:21.562Z [hexstrike-ai] [info] Client transport closed { metadata: undefined }
2025-08-17T15:07:21.562Z [hexstrike-ai] [info] Server transport closed unexpectedly, this is likely due to the process exiting early. If you are developing this MCP server you can add output to stderr (i.e. `console.error('...')` in JavaScript, `print('...', file=sys.stderr)` in python) and it will appear in this log. { metadata: undefined }
2025-08-17T15:07:21.563Z [hexstrike-ai] [error] Server disconnected. For troubleshooting guidance, please visit our [debugging documentation](https://modelcontextprotocol.io/docs/tools/debugging) { metadata: { context: 'connection', stack: undefined } }
2025-08-17T15:07:21.564Z [hexstrike-ai] [info] Client transport closed { metadata: undefined }
